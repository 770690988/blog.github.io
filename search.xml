<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>100分的最终作业范例</title>
    <url>/2021/05/31/100%E5%88%86%E7%9A%84%E6%9C%80%E7%BB%88%E4%BD%9C%E4%B8%9A%E8%8C%83%E4%BE%8B/</url>
    <content><![CDATA[<p><a href="/file/%E6%9C%80%E7%BB%88%E4%BD%9C%E4%B8%9A.rar" title="C源码下载">点击下载</a></p>
<p>运行文件为解压后文件夹内的Snake_console.exe</p>
<p><img src="/2021/05/31/100%E5%88%86%E7%9A%84%E6%9C%80%E7%BB%88%E4%BD%9C%E4%B8%9A%E8%8C%83%E4%BE%8B/Snake_console.png" alt="img"></p>
<p>如果对你有帮助，希望可以打赏哦~（打赏按钮在下方）</p>
<h2 id="下面为代码区"><a href="#下面为代码区" class="headerlink" title="下面为代码区"></a>下面为代码区</h2><h2 id="snake-main-c"><a href="#snake-main-c" class="headerlink" title="snake_main.c"></a>snake_main.c</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;snake.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    srand((<span class="type">unsigned</span> <span class="type">int</span>)time(<span class="number">0</span>));     <span class="comment">//生成随机数种子</span></span><br><span class="line">    <span class="type">int</span> end = <span class="number">1</span>, result;</span><br><span class="line">    <span class="keyword">while</span> (end) &#123;</span><br><span class="line">        result = Menu();</span><br><span class="line">        <span class="keyword">switch</span> (result)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:<span class="comment">//开始游戏</span></span><br><span class="line">            InitMap();</span><br><span class="line">            <span class="keyword">while</span> (MoveSnake());</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:<span class="comment">//帮助信息</span></span><br><span class="line">            Help();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:<span class="comment">//关于信息</span></span><br><span class="line">            About();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:<span class="comment">//排行榜</span></span><br><span class="line">            Rank();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:<span class="comment">//结束程序</span></span><br><span class="line">            end = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>代码与修改之前的相同，需要下载自行前往</p>
<h2 id="snake-c"><a href="#snake-c" class="headerlink" title="snake.c"></a>snake.c</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;snake.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 全局变量</span></span><br><span class="line">Snake snake; <span class="comment">//定义蛇结构体变量</span></span><br><span class="line">Food food;   <span class="comment">//定义食物结构体变量</span></span><br><span class="line"><span class="type">int</span> foodtype = <span class="number">1</span>; <span class="comment">//定义食物的种类</span></span><br><span class="line"><span class="type">char</span> now_Dir = RIGHT; <span class="comment">//当前蛇头方向</span></span><br><span class="line"><span class="type">char</span> direction = RIGHT; <span class="comment">//预期蛇头方向</span></span><br><span class="line"><span class="type">int</span> grade[<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> cycle = <span class="number">1</span>; <span class="comment">//定义循环次数</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">Menu</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">12</span>);   <span class="comment">//定位光标的位置</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;欢迎来到贪吃蛇小游戏&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1. 开始游戏&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;2. 帮助&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;3. 关于&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">20</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;4. 排行榜&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">22</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;其他任意键退出游戏&quot;</span>);</span><br><span class="line">    Hide();    <span class="comment">//隐藏光标</span></span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="type">int</span> result = <span class="number">0</span>;</span><br><span class="line">    ch = _getch();</span><br><span class="line">    <span class="keyword">switch</span> (ch)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>: result = <span class="number">1</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>: result = <span class="number">2</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>: result = <span class="number">3</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>: result = <span class="number">4</span>; <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//光标定位函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GotoXY</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    HANDLE hout;</span><br><span class="line">    COORD cor;</span><br><span class="line">    hout = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">    cor.X = x;</span><br><span class="line">    cor.Y = y;</span><br><span class="line">    SetConsoleCursorPosition(hout, cor);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//隐藏光标</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Hide</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    HANDLE hout = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">    CONSOLE_CURSOR_INFO cor_info = &#123; <span class="number">1</span>, <span class="number">0</span> &#125;;</span><br><span class="line">    SetConsoleCursorInfo(hout, &amp;cor_info);<span class="comment">//隐藏光标</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">About</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    GotoXY(<span class="number">30</span>, <span class="number">12</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;杭州电子科技大学--程序设计综合实践作业&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;贪吃蛇-控制台游戏&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按任意键返回上级菜单&quot;</span>);</span><br><span class="line">    Hide();    <span class="comment">//隐藏光标</span></span><br><span class="line">    <span class="type">char</span> ch = _getch();</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Help</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">12</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;w 上                      &quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;s 下                      &quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a 左                      &quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;d 右                      &quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">45</span>, <span class="number">22</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按任意键返回上级菜单      &quot;</span>);</span><br><span class="line">    <span class="type">char</span> ch = _getch();</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitMap</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Hide();   <span class="comment">//隐藏光标</span></span><br><span class="line">    <span class="comment">//设置蛇头位置在地图的中心</span></span><br><span class="line">    snake.snakeNode[<span class="number">0</span>].x = MAP_WIDTH / <span class="number">2</span> - <span class="number">1</span>;</span><br><span class="line">    snake.snakeNode[<span class="number">0</span>].y = MAP_HEIGHT / <span class="number">2</span> - <span class="number">1</span>;</span><br><span class="line">    GotoXY(snake.snakeNode[<span class="number">0</span>].x, snake. snakeNode[<span class="number">0</span>].y); <span class="comment">//光标移动到蛇头位置</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;@&quot;</span>); <span class="comment">//蛇头</span></span><br><span class="line">    snake.length = <span class="number">3</span>; <span class="comment">//初始长度</span></span><br><span class="line">    snake.speed = <span class="number">250</span>; <span class="comment">//初始速度</span></span><br><span class="line">    now_Dir = RIGHT; <span class="comment">// 当前蛇头的朝向</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//显示蛇的身体</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; snake.length; i++) &#123;</span><br><span class="line">        <span class="comment">//设置蛇身的纵坐标位置和蛇头位置相同</span></span><br><span class="line">        snake.snakeNode[i].y = snake.snakeNode[i - <span class="number">1</span>].y;</span><br><span class="line">        snake.snakeNode[i].x = snake.snakeNode[i - <span class="number">1</span>].x - <span class="number">1</span>;</span><br><span class="line">        GotoXY(snake.snakeNode[i].x, snake.snakeNode[i].y);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//生成地图上下边界</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; MAP_WIDTH; i++) &#123;</span><br><span class="line">        GotoXY(i, <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">        GotoXY(i, MAP_HEIGHT - <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;-&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; MAP_HEIGHT - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        GotoXY(<span class="number">0</span>, i);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;|&quot;</span>);</span><br><span class="line">        GotoXY(MAP_WIDTH - <span class="number">1</span>, i);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;|&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//生成地图中的障碍物</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">6</span>; i &lt; MAP_WIDTH - <span class="number">6</span>; i++) &#123;</span><br><span class="line">        GotoXY(i, <span class="number">5</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">        GotoXY(i, MAP_HEIGHT - <span class="number">6</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    PrintFood();  <span class="comment">//生成食物</span></span><br><span class="line">    GotoXY(<span class="number">50</span>, <span class="number">5</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;当前得分：0&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintFood</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    foodtype = rand() % <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span> (foodtype == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="type">int</span> flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (flag) &#123;</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//生成食物的随机坐标</span></span><br><span class="line">            food.x = rand() % (MAP_WIDTH - <span class="number">2</span>) + <span class="number">1</span>;</span><br><span class="line">            food.y = rand() % (MAP_HEIGHT - <span class="number">2</span>) + <span class="number">1</span>;</span><br><span class="line">            <span class="comment">//循环判断食物的位置能否而后蛇的位置重叠，如果重叠则重新设置食物的位置</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt;= snake.length - <span class="number">1</span>; k++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (snake.snakeNode[k].x == food.x &amp;&amp; snake.snakeNode[k].y == food.y) &#123;</span><br><span class="line">                    flag = <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (food.x &gt;= <span class="number">6</span> &amp;&amp; food.x &lt; MAP_WIDTH - <span class="number">6</span> &amp;&amp; (food.y == <span class="number">5</span> || food.y == MAP_HEIGHT - <span class="number">6</span>)) &#123;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        GotoXY(food.x, food.y);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;o&quot;</span>); <span class="comment">//此处的食物用o来表示</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (foodtype == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="type">int</span> flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (flag) &#123;</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//生成食物的随机坐标</span></span><br><span class="line">            food.x = rand() % (MAP_WIDTH - <span class="number">3</span>) + <span class="number">1</span>;</span><br><span class="line">            food.y = rand() % (MAP_HEIGHT - <span class="number">2</span>) + <span class="number">1</span>;</span><br><span class="line">            <span class="comment">//循环判断食物的位置能否而后蛇的位置重叠，如果重叠则重新设置食物的位置</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt;= snake.length - <span class="number">1</span>; k++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (snake.snakeNode[k].x == food.x &amp;&amp; snake.snakeNode[k].y == food.y) &#123;</span><br><span class="line">                    flag = <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (food.x &gt;= <span class="number">6</span> &amp;&amp; food.x &lt; MAP_WIDTH - <span class="number">6</span> &amp;&amp; (food.y == <span class="number">5</span> || food.y == MAP_HEIGHT - <span class="number">6</span>)) &#123;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        GotoXY(food.x, food.y);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;$&quot;</span>); <span class="comment">//此处的食物用$来表示</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (foodtype == <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="type">int</span> flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (flag) &#123;</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//生成食物的随机坐标</span></span><br><span class="line">            food.x = rand() % (MAP_WIDTH - <span class="number">3</span>) + <span class="number">1</span>;</span><br><span class="line">            food.y = rand() % (MAP_HEIGHT - <span class="number">2</span>) + <span class="number">1</span>;</span><br><span class="line">            <span class="comment">//循环判断食物的位置能否而后蛇的位置重叠，如果重叠则重新设置食物的位置</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt;= snake.length - <span class="number">1</span>; k++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (snake.snakeNode[k].x == food.x &amp;&amp; snake.snakeNode[k].y == food.y) &#123;</span><br><span class="line">                    flag = <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (food.x &gt;= <span class="number">6</span> &amp;&amp; food.x &lt; MAP_WIDTH - <span class="number">6</span> &amp;&amp; (food.y == <span class="number">5</span> || food.y == MAP_HEIGHT - <span class="number">6</span>)) &#123;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        GotoXY(food.x, food.y);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;￥&quot;</span>); <span class="comment">//此处的食物用￥来表示</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">MoveSnake</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Snakenode temp;</span><br><span class="line">    <span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> mm = <span class="number">0</span>; <span class="comment">// 用于存储代码</span></span><br><span class="line">    temp = snake.snakeNode[snake.length - <span class="number">1</span>]; <span class="comment">//记录蛇尾</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = snake.length - <span class="number">1</span>; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">        snake.snakeNode[i] = snake.snakeNode[i - <span class="number">1</span>];</span><br><span class="line">    GotoXY(snake.snakeNode[<span class="number">1</span>].x, snake.snakeNode[<span class="number">1</span>].y);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//响应键盘的操作</span></span><br><span class="line">    <span class="keyword">if</span> (_kbhit()) &#123;</span><br><span class="line">        direction = _getch();</span><br><span class="line">        <span class="keyword">switch</span> (direction)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> UP:</span><br><span class="line">            <span class="keyword">if</span> (now_Dir != DOWN)</span><br><span class="line">                now_Dir = direction;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> DOWN:</span><br><span class="line">            <span class="keyword">if</span> (now_Dir != UP)</span><br><span class="line">                now_Dir = direction;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> RIGHT:</span><br><span class="line">            <span class="keyword">if</span> (now_Dir != LEFT)</span><br><span class="line">                now_Dir = direction;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> LEFT:</span><br><span class="line">            <span class="keyword">if</span> (now_Dir != RIGHT)</span><br><span class="line">                now_Dir = direction;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (now_Dir)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> UP:snake.snakeNode[<span class="number">0</span>].y--; <span class="keyword">break</span>; <span class="comment">//上移</span></span><br><span class="line">    <span class="keyword">case</span> DOWN:snake.snakeNode[<span class="number">0</span>].y++; <span class="keyword">break</span>; <span class="comment">//下移</span></span><br><span class="line">    <span class="keyword">case</span> LEFT:snake.snakeNode[<span class="number">0</span>].x--; <span class="keyword">break</span>; <span class="comment">//左移</span></span><br><span class="line">    <span class="keyword">case</span> RIGHT:snake.snakeNode[<span class="number">0</span>].x++; <span class="keyword">break</span>; <span class="comment">//右移</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打印蛇头</span></span><br><span class="line">    GotoXY(snake.snakeNode[<span class="number">0</span>].x, snake.snakeNode[<span class="number">0</span>].y);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;@&quot;</span>);</span><br><span class="line">    <span class="comment">//判断是否吃到食物，如果蛇头的位置和食物的位置相同表示吃到食物</span></span><br><span class="line">    <span class="keyword">if</span> (snake.snakeNode[<span class="number">0</span>].x == food.x &amp;&amp; snake.snakeNode[<span class="number">0</span>].y == food.y) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = foodtype + <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            snake.length++; <span class="comment">//吃到食物蛇长加一</span></span><br><span class="line">            flag = <span class="number">1</span>; <span class="comment">//1表示吃到食物</span></span><br><span class="line">            snake.snakeNode[snake.length - <span class="number">1</span>] = temp;  <span class="comment">// 吃到食物，蛇尾加一节</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//输出蛇此时的状态</span></span><br><span class="line">    <span class="comment">//没吃到食物的时候，在原来的蛇尾打印一个空格，去掉原来的蛇尾</span></span><br><span class="line">    <span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">        GotoXY(temp.x, temp.y);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        PrintFood();</span><br><span class="line">        GotoXY(<span class="number">50</span>, <span class="number">5</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;当前得分：%d&quot;</span>, snake.length - <span class="number">3</span>);  <span class="comment">//打印得分，得分为蛇长减3</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断是否死亡</span></span><br><span class="line">    <span class="keyword">if</span> (!IsCorrect()) &#123;</span><br><span class="line">        grade[cycle] = snake.length - <span class="number">3</span>;</span><br><span class="line">        system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        GotoXY(<span class="number">45</span>, <span class="number">12</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;这就输了？？？,真垃圾啊！&quot;</span>);</span><br><span class="line">        GotoXY(<span class="number">45</span>, <span class="number">14</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;最终得分：%d&quot;</span>, snake.length - <span class="number">3</span>);</span><br><span class="line">        GotoXY(<span class="number">45</span>, <span class="number">16</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;游戏结束！&quot;</span>); </span><br><span class="line">        GotoXY(<span class="number">45</span>, <span class="number">18</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;这是第 %d 次进行的游戏&quot;</span>, cycle);</span><br><span class="line">        cycle++;</span><br><span class="line">        GotoXY(<span class="number">45</span>, <span class="number">20</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;按任意键返回主菜单&quot;</span>);</span><br><span class="line">            <span class="type">char</span> c = _getch();</span><br><span class="line">        system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//吃了自己之后的操作</span></span><br><span class="line">    <span class="keyword">if</span> (zican()) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = zican(); i &lt;= snake.length; i++) &#123;</span><br><span class="line">            GotoXY(snake.snakeNode[i].x, snake.snakeNode[i].y);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        snake.length = zican();</span><br><span class="line">        GotoXY(<span class="number">50</span>, <span class="number">5</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;当前得分：%d&quot;</span>, snake.length - <span class="number">3</span>);  <span class="comment">//打印得分，得分为蛇长减3</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//调整速度</span></span><br><span class="line">    SpeedControl();</span><br><span class="line">    Sleep(snake.speed);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">IsCorrect</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (snake.snakeNode[<span class="number">0</span>].x &lt;= <span class="number">0</span> || snake.snakeNode[<span class="number">0</span>].y &lt;= <span class="number">0</span> || snake.snakeNode[<span class="number">0</span>].x &gt;= MAP_WIDTH - <span class="number">1</span> || snake.snakeNode[<span class="number">0</span>].y &gt;= MAP_HEIGHT - <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (snake.snakeNode[<span class="number">0</span>].x &gt;= <span class="number">6</span> &amp;&amp; snake.snakeNode[<span class="number">0</span>].x &lt; MAP_WIDTH - <span class="number">6</span> &amp;&amp; (snake.snakeNode[<span class="number">0</span>].y == <span class="number">5</span> || snake.snakeNode[<span class="number">0</span>].y == MAP_HEIGHT - <span class="number">6</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">zican</span><span class="params">()</span> <span class="comment">//吃自己简称自残</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; snake.length; i++) &#123;<span class="comment">//判断是否重合</span></span><br><span class="line">        <span class="keyword">if</span> (snake.snakeNode[<span class="number">0</span>].x == snake.snakeNode[i].x &amp;&amp; snake.snakeNode[<span class="number">0</span>].y == snake.snakeNode[i].y) &#123;</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">SpeedControl</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">switch</span> (snake.length)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">        snake.speed = <span class="number">200</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">        snake.speed = <span class="number">180</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">        snake.speed = <span class="number">160</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">15</span>:</span><br><span class="line">        snake.speed = <span class="number">140</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">18</span>:</span><br><span class="line">        snake.speed = <span class="number">120</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">21</span>:</span><br><span class="line">        snake.speed = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">24</span>:</span><br><span class="line">        snake.speed = <span class="number">80</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">27</span>:</span><br><span class="line">        snake.speed = <span class="number">60</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">30</span>:</span><br><span class="line">        snake.speed = <span class="number">40</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Rank</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">int</span> temp;</span><br><span class="line">    <span class="comment">//排序</span></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">2</span>; i &lt; cycle; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (grade[j] &lt; grade[i]) &#123;</span><br><span class="line">                temp = grade[j];</span><br><span class="line">                grade[j] = grade[i];</span><br><span class="line">                grade[i] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    i = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//输出结果</span></span><br><span class="line">    <span class="keyword">while</span> (i &lt; cycle) &#123;</span><br><span class="line">        GotoXY(<span class="number">45</span>, (<span class="number">5</span> + <span class="number">2</span> * i));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;第 %d 名   分数为 %d&quot;</span>, i,  grade[i]);</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">char</span> ch = _getch();</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>此处由于修改代码部分过多，所以提供下载方式</p>
<p><a href="/file/snake%E7%9A%84c%E6%96%87%E4%BB%B6.rar" title="C源码下载">点击下载</a></p>
<h2 id="snake-h"><a href="#snake-h" class="headerlink" title="snake.h"></a>snake.h</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;conio.h&gt;</span><span class="comment">//控制台的一些文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//宏定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAP_HEIGHT 20 <span class="comment">// 地图高度</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAP_WIDTH 40  <span class="comment">// 地图的宽度</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> UP <span class="string">&#x27;w&#x27;</span>        <span class="comment">// 定义上移键</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DOWN <span class="string">&#x27;s&#x27;</span>      <span class="comment">// 定义下移键</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LEFT <span class="string">&#x27;a&#x27;</span>      <span class="comment">// 定义左移键</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RIGHT <span class="string">&#x27;d&#x27;</span>     <span class="comment">// 定义右移键</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//结构体定义</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> x;    <span class="comment">// x坐标的位置</span></span><br><span class="line">    <span class="type">int</span> y;    <span class="comment">// y坐标的位置</span></span><br><span class="line">&#125;Food, Snakenode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> //定义蛇的结构体</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    Snakenode snakeNode[<span class="number">1000</span>]; <span class="comment">//表示蛇最多有1000个节点</span></span><br><span class="line">    <span class="type">int</span> length; <span class="comment">//蛇的长度</span></span><br><span class="line">    <span class="type">int</span> speed;  <span class="comment">//蛇移动的速度</span></span><br><span class="line">&#125;Snake;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">GotoXY</span><span class="params">(<span class="type">int</span>, <span class="type">int</span>)</span>; <span class="comment">//光标定位函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Hide</span><span class="params">()</span>;     <span class="comment">//隐藏光标函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Menu</span><span class="params">()</span>;      <span class="comment">//主菜单函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Help</span><span class="params">()</span>;     <span class="comment">//帮助信息</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">About</span><span class="params">()</span>;    <span class="comment">//关于信息</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitMap</span><span class="params">()</span>;  <span class="comment">//地图初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintFood</span><span class="params">()</span>; <span class="comment">//生成食物</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">MoveSnake</span><span class="params">()</span>;  <span class="comment">//蛇的移动</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">IsCorrect</span><span class="params">()</span>; <span class="comment">//自撞或撞墙检测</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">SpeedControl</span><span class="params">()</span>; <span class="comment">//速度控制</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">zican</span><span class="params">()</span>;  <span class="comment">//判断是否啃到自己</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Rank</span><span class="params">()</span>;  <span class="comment">//显示最高分的情况</span></span><br></pre></td></tr></table></figure>

<p>该代码区有小部分的修改</p>
<p>下载资源如下</p>
<p><a href="/file/snake%E7%9A%84h%E6%96%87%E4%BB%B6.rar" title="C源码下载">点击下载</a></p>
]]></content>
      <categories>
        <category>程序设计作业</category>
        <category>贪吃蛇作业</category>
        <category>最终提交版本</category>
        <category>文件</category>
      </categories>
      <tags>
        <tag>程序设计实践课程作业</tag>
        <tag>贪吃蛇</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker</title>
    <url>/2021/11/07/Docker/</url>
    <content><![CDATA[<h3 id="学习docker-pull、docker-run、docker-exec、docker-logs的基本使用"><a href="#学习docker-pull、docker-run、docker-exec、docker-logs的基本使用" class="headerlink" title="学习docker pull、docker run、docker exec、docker logs的基本使用"></a>学习docker pull、docker run、docker exec、docker logs的基本使用</h3><h4 id="基本题目"><a href="#基本题目" class="headerlink" title="基本题目"></a>基本题目</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">docker search mysql</span><br><span class="line">docker pull mysql:latest <span class="comment">//拉取mysql</span></span><br><span class="line">docker images <span class="comment">//查看所拥有的映像</span></span><br><span class="line">docker run -itd --name mysql-<span class="number">1</span> -p <span class="number">3306</span>:<span class="number">3306</span> -<span class="type">e</span> <span class="variable">MYSQL_ROOT_PASSWORD</span> <span class="operator">=</span> <span class="number">123456</span> mysql</span><br><span class="line"><span class="comment">//这里的--name mysql-1就是在命名创建出来的容器为mysql-1 3306表示为端口 MYSQL_ROOTPASSWORD表示这里的mysql密码</span></span><br><span class="line"></span><br><span class="line">docker ps <span class="comment">//找到相应镜像的container ID</span></span><br><span class="line">docker exec -it d37c7d7397d4 /bin/bash <span class="comment">//进入到docker内的数据库地址</span></span><br><span class="line">mysql -uroot -p</span><br><span class="line"><span class="number">123456</span><span class="comment">//输入密码</span></span><br><span class="line">create schema schema1; <span class="comment">//创建schema对象 名为schema1</span></span><br></pre></td></tr></table></figure>

<h3 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker Compose"></a><a href="https://www.runoob.com/docker/docker-compose.html">Docker Compose</a></h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ubuntu 构建</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">ubuntu1:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">ubuntu-1</span></span><br><span class="line">    <span class="attr">build:</span> </span><br><span class="line">     <span class="attr">context:</span> <span class="string">./</span></span><br><span class="line">     <span class="attr">dockerfile:</span> <span class="string">Dockerfile</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">on-failure</span></span><br><span class="line">    <span class="attr">tty:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">network_mode:</span> <span class="string">host</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">  <span class="attr">ubuntu2:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">ubuntu-2</span></span><br><span class="line">    <span class="attr">build:</span> </span><br><span class="line">     <span class="attr">context:</span> <span class="string">./</span></span><br><span class="line">     <span class="attr">dockerfile:</span> <span class="string">Dockerfile</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">on-failure</span></span><br><span class="line">    <span class="attr">tty:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">other-network:</span></span><br><span class="line">        <span class="attr">aliases:</span></span><br><span class="line">         <span class="bullet">-</span> <span class="string">alias2</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">other-network:</span></span><br><span class="line">    <span class="comment"># Use a custom driver which takes special options</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br></pre></td></tr></table></figure>

<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /here</span></span><br></pre></td></tr></table></figure>

<p>ubuntu PING 的设定</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt install iputils-ping</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>软件学习</category>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>软件学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>ArrayList汇总</title>
    <url>/2021/07/22/ArrayList%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[<h1 id="ArrayList-基本内容"><a href="#ArrayList-基本内容" class="headerlink" title="ArrayList 基本内容"></a>ArrayList 基本内容</h1><table>
<thead>
<tr>
<th>命令</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>pubilc boolean add(E e);</td>
<td>向集合当中添加元素，参数的类型和泛型一致</td>
</tr>
<tr>
<td>public E get(int index);</td>
<td>从集合当中获取元素，参数是索引编号，返回值为对应位置</td>
</tr>
<tr>
<td>public E remove(int index);</td>
<td>从集合当中删除元素，参数是索引编号，返回值就是被删除掉的元素</td>
</tr>
<tr>
<td>public int size();</td>
<td>获取集合的尺寸长度，返回值是集合中包含的元素个数</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>软件学习</category>
        <category>JAVA</category>
        <category>JAVASE</category>
        <category>ArrayList基本内容</category>
      </categories>
      <tags>
        <tag>软件学习笔记</tag>
        <tag>JAVA</tag>
        <tag>JAVASE</tag>
      </tags>
  </entry>
  <entry>
    <title>DOS命令</title>
    <url>/2021/09/23/DOS%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">netstat <span class="literal">-aon</span>|findstr <span class="string">&quot;3306&quot;</span></span><br></pre></td></tr></table></figure>

<p>对于端口的查询和关闭</p>
]]></content>
  </entry>
  <entry>
    <title>Bootstrap</title>
    <url>/2021/07/25/Bootstrap/</url>
    <content><![CDATA[<h1 id="Bootstrap"><a href="#Bootstrap" class="headerlink" title="Bootstrap"></a>Bootstrap</h1><h2 id="视口"><a href="#视口" class="headerlink" title="视口"></a>视口</h2><p>viewport 视口，即浏览器上网页内容可视区域</p>
<table>
<thead>
<tr>
<th>内容</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>width &#x3D; device-width</td>
<td>视口的宽度，大多数手机浏览器视口的宽度为980。<br />device-width表示采用设备的宽度</td>
</tr>
<tr>
<td>initial-scale&#x3D;1</td>
<td>移动设备上，打开页面时的初始化缩放级别<br />1表示100%， 5表示500%</td>
</tr>
<tr>
<td>minimum-scale&#x3D;1</td>
<td>移动设备上，页面可以 最小缩放的级别</td>
</tr>
<tr>
<td>maximun-scale&#x3D;1</td>
<td>移动设备上，页面可以 最大缩放的级别</td>
</tr>
<tr>
<td>user-scalable&#x3D;no</td>
<td>移动设备上，页面禁止缩放<br />一旦设置，则前两个的scale设置无效</td>
</tr>
</tbody></table>
<ul>
<li>使用方式</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width = device-width, minimum-scale=1&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="布局容器"><a href="#布局容器" class="headerlink" title="布局容器"></a>布局容器</h2><p>任意元素使用了布局容器样式，都会变成一个布局容器，建议使用div作为布局容器</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>.container类</td>
<td>用于固定宽度并支持响应式布局的容器<br />【特点：居中，两侧留白】</td>
</tr>
<tr>
<td>.container-fluid类</td>
<td>用于100%宽度，占据全部视口(viewport)的容器</td>
</tr>
</tbody></table>
<p>示例</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container-fluid&quot;</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="栅格系统"><a href="#栅格系统" class="headerlink" title="栅格系统"></a>栅格系统</h2><h3 id="基本书写方式"><a href="#基本书写方式" class="headerlink" title="基本书写方式"></a>基本书写方式</h3><p>容器&#x3D;&gt;行&#x3D;&gt;列  在列中书写内容</p>
<ul>
<li>其中行(row)必须包含在.container或者.container-fluid中</li>
<li>行使用的样式”.row”；列使用样式”.col- # - #”</li>
</ul>
<p>栅格参数：”col-屏幕尺寸-占用列数”</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="屏幕尺寸简述"><a href="#屏幕尺寸简述" class="headerlink" title="屏幕尺寸简述"></a>屏幕尺寸简述</h3><table>
<thead>
<tr>
<th>尺寸</th>
<th>简述</th>
</tr>
</thead>
<tbody><tr>
<td>large:lg</td>
<td>大屏幕  一般PC尺寸</td>
</tr>
<tr>
<td>medium:md</td>
<td>中等屏幕 小PC尺寸</td>
</tr>
<tr>
<td>small:sm</td>
<td>小屏幕，ipad尺寸</td>
</tr>
<tr>
<td>x small:xs</td>
<td>超小屏幕，智能手机尺寸</td>
</tr>
</tbody></table>
<p>注意事项</p>
<p>设置屏幕尺寸的时候如果设置了一个屏幕尺寸，比这个尺寸大的屏幕会继承当前的设置。比这个尺寸小的屏幕会变成一个元素一行。</p>
<h3 id="列偏移"><a href="#列偏移" class="headerlink" title="列偏移"></a>列偏移</h3><p>将列元素项向右进行偏移</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-3 col-lg-offset-5&quot;</span>&gt;</span></span><br><span class="line">    这部分的内容效果是先向右偏移5个单位，再放入3个单位的内容</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="列排序"><a href="#列排序" class="headerlink" title="列排序"></a>列排序</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-9 col-md-push-3&quot;</span>&gt;</span>.col-md-9 .col-md-push-3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-3 col-md-pull-9&quot;</span>&gt;</span>.col-md-3 .col-md-pull-9<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h4 id="list-inline"><a href="#list-inline" class="headerlink" title="list-inline"></a>list-inline</h4><p>修改前</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>牛的蛙<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>六的呀<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>可以啊<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@fe5e6fe94a2588bca9200fc71d3f9e70ab2367a0/2021/08/03/94532ad459fc113b914e5b6ba2546350.png" alt="img"></p>
<p>修改后</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;list-inline&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>牛的蛙<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>六的呀<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>可以啊<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@4273e1cddd03400114111ce64f66532f06351217/2021/08/03/1548e8e42d81419962b2ea79c56de9b3.png" alt="list-line"></p>
<h2 id="按钮"><a href="#按钮" class="headerlink" title="按钮"></a>按钮</h2><h4 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h4><p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@91b915efdba077dbc376d6e320b5243597547a45/2021/08/03/b67d144440048ca2bbcc125ce8070a03.png" alt="buttonStyle"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Standard button --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span>&gt;</span>（默认样式）Default<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Provides extra visual weight and identifies the primary action in a set of buttons --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>（首选项）Primary<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Indicates a successful or positive action --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-success&quot;</span>&gt;</span>（成功）Success<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Contextual button for informational alert messages --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-info&quot;</span>&gt;</span>（一般信息）Info<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Indicates caution should be taken with this action --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-warning&quot;</span>&gt;</span>（警告）Warning<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Indicates a dangerous or potentially negative action --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-danger&quot;</span>&gt;</span>（危险）Danger<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Deemphasize a button by making it look like a link while maintaining button behavior --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-link&quot;</span>&gt;</span>（链接）Link<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="尺寸"><a href="#尺寸" class="headerlink" title="尺寸"></a>尺寸</h4><p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@f63a2ded92d5a0c4fa459acf2e840b007aa60486/2021/08/03/52c7613e6de2457ceb6b2021fe2d0e8c.png" alt="buttonSize"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary btn-lg&quot;</span>&gt;</span>（大按钮）Large button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default btn-lg&quot;</span>&gt;</span>（大按钮）Large button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>（默认尺寸）Default button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span>&gt;</span>（默认尺寸）Default button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary btn-sm&quot;</span>&gt;</span>（小按钮）Small button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default btn-sm&quot;</span>&gt;</span>（小按钮）Small button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary btn-xs&quot;</span>&gt;</span>（超小尺寸）Extra small button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default btn-xs&quot;</span>&gt;</span>（超小尺寸）Extra small button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>通过给按钮添加 <code>.btn-block</code> 类可以将其拉伸至父元素100%的宽度，而且按钮也变为了块级（block）元素。</p>
<p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@446335c9563b001d7a10740024c5d607622c141f/2021/08/03/1668270e8f64be40c8d59e9cd27fc7c9.png" alt="img"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary btn-lg btn-block&quot;</span>&gt;</span>（块级元素）Block level button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default btn-lg btn-block&quot;</span>&gt;</span>（块级元素）Block level button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="激活状态"><a href="#激活状态" class="headerlink" title="激活状态"></a>激活状态</h4><p>当按钮处于激活状态时，其表现为被按压下去（底色更深、边框夜色更深、向内投射阴影）。对于 <code>&lt;button&gt;</code> 元素，是通过 <code>:active</code> 状态实现的。对于 <code>&lt;a&gt;</code> 元素，是通过 <code>.active</code> 类实现的。然而，你还可以将 <code>.active</code> 应用到 <code>&lt;button&gt;</code> 上（包含 <code>aria-pressed=&quot;true&quot;</code> 属性)），并通过编程的方式使其处于激活状态。</p>
<p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@4ac4d9951ee32fc26cf5f4fceab4cd33610a9458/2021/08/03/52c30c47c9d2b768a6cb99e3c899dd8c.png" alt="img"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary btn-lg active&quot;</span>&gt;</span>Primary button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default btn-lg active&quot;</span>&gt;</span>Button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="禁用状态"><a href="#禁用状态" class="headerlink" title="禁用状态"></a>禁用状态</h4><p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@b401232286d16c61de172abac525815b0d4146b9/2021/08/03/a0fcddbee755e941c57c23e5671834c6.png"></p>
<p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@235dda96093e808be67a1a4bc6168be5bfa70524/2021/08/03/bd2699531eaf870da71a8304fbbd9f1d.png" alt="img"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-lg btn-primary&quot;</span> <span class="attr">disabled</span>=<span class="string">&quot;disabled&quot;</span>&gt;</span>Primary button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default btn-lg&quot;</span> <span class="attr">disabled</span>=<span class="string">&quot;disabled&quot;</span>&gt;</span>Button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="导航条"><a href="#导航条" class="headerlink" title="导航条"></a>导航条</h2><p>初始代码</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;navbar navbar-default&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container-fluid&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Brand and toggle get grouped for better mobile display --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;navbar-header&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;navbar-toggle collapsed&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;collapse&quot;</span> <span class="attr">data-target</span>=<span class="string">&quot;#bs-example-navbar-collapse-1&quot;</span> <span class="attr">aria-expanded</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Toggle navigation<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;navbar-brand&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Brand<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- Collect the nav links, forms, and other content for toggling --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;collapse navbar-collapse&quot;</span> <span class="attr">id</span>=<span class="string">&quot;bs-example-navbar-collapse-1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav navbar-nav&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Link <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>(current)<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;dropdown&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-toggle&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;dropdown&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">aria-haspopup</span>=<span class="string">&quot;true&quot;</span> <span class="attr">aria-expanded</span>=<span class="string">&quot;false&quot;</span>&gt;</span>Dropdown <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;caret&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-menu&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Another action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Something else here<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">&quot;separator&quot;</span> <span class="attr">class</span>=<span class="string">&quot;divider&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Separated link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">&quot;separator&quot;</span> <span class="attr">class</span>=<span class="string">&quot;divider&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>One more separated link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;navbar-form navbar-left&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Search&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav navbar-nav navbar-right&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;dropdown&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-toggle&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;dropdown&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">aria-haspopup</span>=<span class="string">&quot;true&quot;</span> <span class="attr">aria-expanded</span>=<span class="string">&quot;false&quot;</span>&gt;</span>Dropdown <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;caret&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-menu&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Another action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Something else here<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">&quot;separator&quot;</span> <span class="attr">class</span>=<span class="string">&quot;divider&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Separated link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.navbar-collapse --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.container-fluid --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>具体内容:</p>
<h4 id="首页修改"><a href="#首页修改" class="headerlink" title="首页修改"></a>首页修改</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">//首页的修改</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;navbar-brand&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Brand<span class="tag">&lt;/<span class="name">a</span>&gt;</span> //原始代码</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;navbar-brand&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span> //修改后的代码</span><br></pre></td></tr></table></figure>

<h4 id="汉堡按钮"><a href="#汉堡按钮" class="headerlink" title="汉堡按钮"></a>汉堡按钮</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;navbar-toggle collapsed&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;collapse&quot;</span> <span class="attr">data-target</span>=<span class="string">&quot;#bs-example-navbar-collapse-1&quot;</span> <span class="attr">aria-expanded</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Toggle navigation<span class="tag">&lt;/<span class="name">span</span>&gt;</span> </span><br><span class="line">    <span class="comment">&lt;!---sr-only是用来给盲人进行阅读的，最好不要删除--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="导航栏主体部分"><a href="#导航栏主体部分" class="headerlink" title="导航栏主体部分"></a>导航栏主体部分</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 主体部分 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;collapse navbar-collapse&quot;</span> <span class="attr">id</span>=<span class="string">&quot;bs-example-navbar-collapse-1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav navbar-nav&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Link <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>(current)<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;dropdown&quot;</span>&gt;</span><span class="comment">&lt;!--有下拉的选项--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-toggle&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;dropdown&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">aria-haspopup</span>=<span class="string">&quot;true&quot;</span> <span class="attr">aria-expanded</span>=<span class="string">&quot;false&quot;</span>&gt;</span>Dropdown <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;caret&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-menu&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Another action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Something else here<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">&quot;separator&quot;</span> <span class="attr">class</span>=<span class="string">&quot;divider&quot;</span>&gt;</span><span class="comment">&lt;!--这是分割线--&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Separated link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">&quot;separator&quot;</span> <span class="attr">class</span>=<span class="string">&quot;divider&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>One more separated link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--这里的form表单其实是页面里面的搜索区域--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;navbar-form navbar-left&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Search&quot;</span>&gt;</span><span class="comment">&lt;!--输入的搜索框--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span>&gt;</span><span class="comment">&lt;!--提交的按钮字样--&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav navbar-nav navbar-right&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;dropdown&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-toggle&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;dropdown&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">aria-haspopup</span>=<span class="string">&quot;true&quot;</span> <span class="attr">aria-expanded</span>=<span class="string">&quot;false&quot;</span>&gt;</span>Dropdown <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;caret&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--下面显示的是无序列表可以删除--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-menu&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Another action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Something else here<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">&quot;separator&quot;</span> <span class="attr">class</span>=<span class="string">&quot;divider&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Separated link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="轮播图"><a href="#轮播图" class="headerlink" title="轮播图"></a>轮播图</h2><p>帮助手册位置：JavaScript 插件–Carousel</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--轮播图--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;lbt1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;carousel slide&quot;</span> <span class="attr">data-ride</span>=<span class="string">&quot;carousel&quot;</span> <span class="attr">data-interval</span>=<span class="string">&quot;1000&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--如果说要使用多个轮播图，那么各自的轮播图id就需要进行修改比如这里的lbt1如果下面也有相应的内容需要同时修改为另一个新名字--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--这里的data-interval用于设定轮播的速度数值属性为毫秒--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--小圆点--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">&quot;carousel-indicators&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--这里面有多少个li就可以放多少个图片，个数不够可以加--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">&quot;#lbt1&quot;</span> <span class="attr">data-slide-to</span>=<span class="string">&quot;0&quot;</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">&quot;#lbt1&quot;</span> <span class="attr">data-slide-to</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">&quot;#lbt1&quot;</span> <span class="attr">data-slide-to</span>=<span class="string">&quot;2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 轮播图图片主体部分 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-inner&quot;</span> <span class="attr">role</span>=<span class="string">&quot;listbox&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--第一张图片--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item active&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--这里因为设置了active所以默认显示的是这张图片--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;...&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;...&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-caption&quot;</span>&gt;</span></span><br><span class="line">                ...</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--第二张图片--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;...&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;...&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-caption&quot;</span>&gt;</span></span><br><span class="line">                ...</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 左右控制按钮 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;left carousel-control&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#lbt1&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">data-slide</span>=<span class="string">&quot;prev&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-chevron-left&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Previous<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;right carousel-control&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#lbt1&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">data-slide</span>=<span class="string">&quot;next&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-chevron-right&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Next<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>



<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">//首页的修改</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;navbar-brand&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Brand<span class="tag">&lt;/<span class="name">a</span>&gt;</span> //原始代码</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;navbar-brand&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span> //修改后的代码</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>软件学习</category>
        <category>HTML</category>
        <category>Bootstrap</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>前端</tag>
        <tag>Bootstrap</tag>
      </tags>
  </entry>
  <entry>
    <title>Java_上机1</title>
    <url>/2021/10/18/Java-%E4%B8%8A%E6%9C%BA1/</url>
    <content><![CDATA[<h1 id="编程题目"><a href="#编程题目" class="headerlink" title="编程题目"></a>编程题目</h1><ul>
<li><font color = red>注意</font><ol>
<li>下面代码块直接复制粘贴应该就可以通过</li>
<li>如果显示的是没有通过（如：unknown erro,wrong erro….）建议在评判界面等10秒左右，因为系统判定会有延迟。</li>
<li>如果对于改题您有更好的解决方式，欢迎联系本人</li>
</ol>
</li>
</ul>
<h2 id="1-判断并显示闰年"><a href="#1-判断并显示闰年" class="headerlink" title="1.判断并显示闰年"></a>1.判断并显示闰年</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">yearNum</span> <span class="operator">=</span> <span class="number">2000</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; yearNum &lt; <span class="number">2100</span>; yearNum++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(yearNum%<span class="number">4</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i == <span class="number">5</span>)&#123;</span><br><span class="line">                    System.out.println();</span><br><span class="line">                    i = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.print(yearNum+<span class="string">&quot; &quot;</span>);</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-整数拆分求立方"><a href="#2-整数拆分求立方" class="headerlink" title="2.整数拆分求立方"></a>2.整数拆分求立方</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> scanNum;</span><br><span class="line">        <span class="keyword">while</span> (scanner.hasNext()) &#123;</span><br><span class="line">            sum = <span class="number">0</span>;</span><br><span class="line">            scanNum = scanner.nextInt();</span><br><span class="line">            <span class="keyword">while</span> (scanNum != <span class="number">0</span>) &#123;</span><br><span class="line">                sum += (scanNum % <span class="number">10</span>) * (scanNum % <span class="number">10</span>) * (scanNum % <span class="number">10</span>);</span><br><span class="line">                scanNum = scanNum / <span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.print(sum);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3-编写程序，输出成绩提高的百分比。"><a href="#3-编写程序，输出成绩提高的百分比。" class="headerlink" title="3.编写程序，输出成绩提高的百分比。"></a>3.编写程序，输出成绩提高的百分比。</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">rate</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">double</span> a,b;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> scanNum=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (scanner.hasNext()) &#123;</span><br><span class="line">            a = scanner.nextDouble();</span><br><span class="line">            b = scanner.nextDouble();</span><br><span class="line">            rate = (b-a)/a;</span><br><span class="line">            System.out.print(String.format(<span class="string">&quot;%.2f&quot;</span>, rate*<span class="number">100</span>)+<span class="string">&quot;%&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-a-b"><a href="#4-a-b" class="headerlink" title="4.a+b"></a>4.a+b</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> a,b;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="keyword">while</span>(scanner.hasNext())&#123;</span><br><span class="line">            a = scanner.nextInt();</span><br><span class="line">            b = scanner.nextInt();</span><br><span class="line">            sum = a + b;</span><br><span class="line">            System.out.print(sum);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="5-输出时间"><a href="#5-输出时间" class="headerlink" title="5.输出时间"></a>5.输出时间</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> a;</span><br><span class="line">        <span class="type">int</span> HH,MM,SS;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        a = scanner.nextInt();</span><br><span class="line">        SS = a % <span class="number">60</span>;</span><br><span class="line">        MM = ((a-SS)/<span class="number">60</span>) % <span class="number">60</span>;</span><br><span class="line">        HH = a/<span class="number">3600</span>;</span><br><span class="line">        System.out.print(HH+<span class="string">&quot; &quot;</span>+MM+<span class="string">&quot; &quot;</span>+SS);</span><br><span class="line">        <span class="keyword">while</span>(scanner.hasNext())&#123;</span><br><span class="line">            System.out.println();</span><br><span class="line">            a = scanner.nextInt();</span><br><span class="line">            SS = a % <span class="number">60</span>;</span><br><span class="line">            MM = ((a-SS)/<span class="number">60</span>) % <span class="number">60</span>;</span><br><span class="line">            HH = a/<span class="number">3600</span>;</span><br><span class="line">            System.out.print(HH+<span class="string">&quot; &quot;</span>+MM+<span class="string">&quot; &quot;</span>+SS);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="6-摄氏温度和华氏温度的转换"><a href="#6-摄氏温度和华氏温度的转换" class="headerlink" title="6.摄氏温度和华氏温度的转换"></a>6.摄氏温度和华氏温度的转换</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">double</span> huaShiTemperature;</span><br><span class="line">        <span class="type">double</span> sheShiTemperature;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="keyword">while</span>(scanner.hasNext())&#123;</span><br><span class="line">            sheShiTemperature = scanner.nextDouble();</span><br><span class="line">            huaShiTemperature = (<span class="type">double</span>)sheShiTemperature*<span class="number">9</span>/<span class="number">5</span>+<span class="number">32</span>;</span><br><span class="line">            System.out.print(String.format(<span class="string">&quot;%.2f&quot;</span>, huaShiTemperature));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="7-输出天数"><a href="#7-输出天数" class="headerlink" title="7. 输出天数"></a>7. 输出天数</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> year,month,day;</span><br><span class="line">        <span class="type">int</span> sum;</span><br><span class="line">        <span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">13</span>];</span><br><span class="line">        a[<span class="number">1</span>] = <span class="number">31</span>;</span><br><span class="line">        a[<span class="number">2</span>] = <span class="number">28</span>;</span><br><span class="line">        a[<span class="number">3</span>] = <span class="number">31</span>;</span><br><span class="line">        a[<span class="number">4</span>] = <span class="number">30</span>;</span><br><span class="line">        a[<span class="number">5</span>] = <span class="number">31</span>;</span><br><span class="line">        a[<span class="number">6</span>] = <span class="number">30</span>;</span><br><span class="line">        a[<span class="number">7</span>] = <span class="number">31</span>;</span><br><span class="line">        a[<span class="number">8</span>] = <span class="number">31</span>;</span><br><span class="line">        a[<span class="number">9</span>] = <span class="number">30</span>;</span><br><span class="line">        a[<span class="number">10</span>] = <span class="number">31</span>;</span><br><span class="line">        a[<span class="number">11</span>] = <span class="number">30</span>;</span><br><span class="line">        a[<span class="number">12</span>] = <span class="number">31</span>;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="keyword">while</span>(scanner.hasNext())&#123;</span><br><span class="line">            sum = <span class="number">0</span>;</span><br><span class="line">            year = scanner.nextInt();</span><br><span class="line">            month = scanner.nextInt();</span><br><span class="line">            day = scanner.nextInt();</span><br><span class="line">            <span class="keyword">if</span>(year % <span class="number">4</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                a[<span class="number">2</span>] = <span class="number">29</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; month ; i++) &#123;</span><br><span class="line">                sum += a[i];</span><br><span class="line">            &#125;</span><br><span class="line">            sum += day;</span><br><span class="line">            System.out.print(sum);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="8-求绝对值"><a href="#8-求绝对值" class="headerlink" title="8. 求绝对值"></a>8. 求绝对值</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">double</span> num;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="keyword">while</span> (scanner.hasNext())&#123;</span><br><span class="line">            num = scanner.nextDouble();</span><br><span class="line">            num = abs(num);</span><br><span class="line">            System.out.println(String.format(<span class="string">&quot;%.2f&quot;</span>,num));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">abs</span><span class="params">(<span class="type">double</span> num)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (num &lt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> -num;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>  num;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>课程作业</category>
        <category>java作业</category>
        <category>Java_上机1</category>
      </categories>
      <tags>
        <tag>课程</tag>
        <tag>Java作业</tag>
      </tags>
  </entry>
  <entry>
    <title>Java_上机3</title>
    <url>/2021/11/14/Java-%E4%B8%8A%E6%9C%BA3/</url>
    <content><![CDATA[<h1 id="卡牌创建、打乱、整理小软件"><a href="#卡牌创建、打乱、整理小软件" class="headerlink" title="卡牌创建、打乱、整理小软件"></a>卡牌创建、打乱、整理小软件</h1><h2 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h2><ol>
<li><p>以面向对象方式写一个“卡牌操作”类：CardOperator</p>
</li>
<li><p>具有以下功能（类似扑克的功能，具体解释见后续ppt）：</p>
<ul>
<li>功能1：初始化卡牌，initialCards（）</li>
<li>功能3：洗牌（将牌打乱），shuffleCards（）</li>
<li>功能4：理牌（重新排序），rankCards（）</li>
</ul>
</li>
<li><p>写一个主控程序：MainProcess类（包含main函数）</p>
<p>调用CardOperator完成各种卡牌操作</p>
<p>MainProcess类如右图（直接copy即可）</p>
<p>输出结果如下页ppt所示</p>
</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/Nov8nana/pic-cdn@290d104ee013d02e91e42680120412cb6e615802/2021/11/14/0eb65684e10797d7a08361deedb9c73f.png" style="zoom:80%;" /><img src="https://cdn.jsdelivr.net/gh/Nov8nana/pic-cdn@9bbbdd645b599096f2a37475e8847e4a9bb35061/2021/11/14/d5ac75490fa715c4d55f3edfabefde6d.png" style="zoom: 50%;" /></p>
<h2 id="文件下载"><a href="#文件下载" class="headerlink" title="文件下载"></a>文件下载</h2><p><a href="java%E4%B8%8A%E6%9C%BA3.zip">下载文件</a></p>
<h2 id="具体代码"><a href="#具体代码" class="headerlink" title="具体代码"></a>具体代码</h2><h3 id="MainProcess-java"><a href="#MainProcess-java" class="headerlink" title="MainProcess.java"></a>MainProcess.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainProcess</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">cardNum</span> <span class="operator">=</span> <span class="number">2</span>; <span class="comment">//定义牌的张数</span></span><br><span class="line">        <span class="type">CardOperator</span> <span class="variable">card</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CardOperator</span>(cardNum);</span><br><span class="line">        System.out.println(<span class="string">&quot;卡牌初始化:&quot;</span>);</span><br><span class="line">        card.showCards();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;卡牌打乱后:&quot;</span>);</span><br><span class="line">        card.shuffleCards();</span><br><span class="line">        card.showCards();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;卡牌理牌后:&quot;</span>);</span><br><span class="line">        card.rankCards();</span><br><span class="line">        card.showCards();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="cardOperator-java"><a href="#cardOperator-java" class="headerlink" title="cardOperator.java"></a>cardOperator.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CardOperator</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">num_per_cards</span> <span class="operator">=</span> <span class="number">52</span>; <span class="comment">//每副卡牌的数量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> cards_num;          <span class="comment">//一共几副牌</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> [][] cards;         <span class="comment">//卡牌组数，例如三副牌，就是3*52的二维矩阵</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CardOperator</span><span class="params">(<span class="type">int</span> user_input_cards_num)</span>&#123;</span><br><span class="line">        <span class="comment">//接受几副牌的信息</span></span><br><span class="line">        cards_num = user_input_cards_num;</span><br><span class="line">        initialCards();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initialCards</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//每副牌都按照黑桃红桃、方片、草花,A-K的顺序初始化</span></span><br><span class="line">        <span class="comment">//系统认定先是13张黑桃，再13张红桃A-K，再13张方片A-K，最后13张草花A-K</span></span><br><span class="line">        cards = <span class="keyword">new</span> <span class="title class_">int</span>[cards_num][num_per_cards];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; cards_num; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; num_per_cards; j++) &#123;</span><br><span class="line">                cards[i][j] = j+i*num_per_cards;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showCards</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//依次显示每副牌的牌面</span></span><br><span class="line">        String card_type; <span class="comment">//牌型: 花色</span></span><br><span class="line">        String card_value; <span class="comment">//牌值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; cards_num; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;第&quot;</span>+(i+<span class="number">1</span>)+<span class="string">&quot;副牌:&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; num_per_cards; j++) &#123;</span><br><span class="line">                card_type = getCardType(j+i*num_per_cards);</span><br><span class="line">                card_value = getCardValue(j+i*num_per_cards);</span><br><span class="line">                System.out.print(card_type+card_value+<span class="string">&quot;,&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span>((j+<span class="number">1</span>) % <span class="number">13</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                    System.out.println();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取牌的花色</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">getCardType</span><span class="params">(<span class="type">int</span> card_info)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">card_type</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">int</span> type;</span><br><span class="line">        type = (cards[card_info/<span class="number">52</span>][card_info%<span class="number">52</span>]%<span class="number">52</span>)/<span class="number">13</span>;</span><br><span class="line">        <span class="keyword">switch</span> (type)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                card_type = <span class="string">&quot;黑桃&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                card_type = <span class="string">&quot;红桃&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                card_type = <span class="string">&quot;方片&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                card_type = <span class="string">&quot;梅花&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> card_type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取牌的数值</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">getCardValue</span><span class="params">(<span class="type">int</span> card_info)</span>&#123;</span><br><span class="line">        String card_value;</span><br><span class="line">        <span class="type">int</span> value;</span><br><span class="line">        value = (cards[card_info/<span class="number">52</span>][card_info%<span class="number">52</span>]+<span class="number">1</span>) % <span class="number">13</span>;</span><br><span class="line">        <span class="keyword">switch</span> (value)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                card_value = <span class="string">&quot;A&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                card_value = <span class="string">&quot;2&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                card_value = <span class="string">&quot;3&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                card_value = <span class="string">&quot;4&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                card_value = <span class="string">&quot;5&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                card_value = <span class="string">&quot;6&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                card_value = <span class="string">&quot;7&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                card_value = <span class="string">&quot;8&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                card_value = <span class="string">&quot;9&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">                card_value = <span class="string">&quot;10&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">                card_value = <span class="string">&quot;Jack&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">                card_value = <span class="string">&quot;Queen&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                card_value = <span class="string">&quot;King&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                card_value = <span class="string">&quot;wrong&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>  card_value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//对单独的每一副牌进行打乱</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shuffleCards</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">shuffle_num</span> <span class="operator">=</span> <span class="number">100</span>; <span class="comment">//打乱100次</span></span><br><span class="line">        <span class="type">int</span> first_index,second_index;<span class="comment">//用于交换位置的两个元素的下标</span></span><br><span class="line">        <span class="type">int</span> temp; <span class="comment">//用于交换时候的临时变量</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; cards_num; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; shuffle_num; j++) &#123;</span><br><span class="line">                first_index = (<span class="type">int</span>) (Math.random()*(num_per_cards-<span class="number">1</span>));</span><br><span class="line">                second_index = (<span class="type">int</span>) (Math.random()*(num_per_cards-<span class="number">1</span>));</span><br><span class="line">                temp = cards[i][first_index];</span><br><span class="line">                cards[i][first_index] = cards[i][second_index];</span><br><span class="line">                cards[i][second_index] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//对每一副牌进行排序</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">rankCards</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; cards_num; i++) &#123;</span><br><span class="line">            quick_sort(cards[i],<span class="number">0</span>, num_per_cards-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//排序具体方法采用快速排序法</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">quick_sort</span><span class="params">(<span class="type">int</span> [] array, <span class="type">int</span> l, <span class="type">int</span> r)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">head</span> <span class="operator">=</span> l;</span><br><span class="line">        <span class="type">int</span> <span class="variable">tail</span> <span class="operator">=</span> r;</span><br><span class="line">        <span class="keyword">while</span> (head &lt; tail) &#123;</span><br><span class="line">            <span class="keyword">while</span> (head &lt; tail) &#123;</span><br><span class="line">                <span class="keyword">if</span> (array[l] &lt;= array[tail]) &#123;</span><br><span class="line">                    tail--;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> (head &lt; tail) &#123;</span><br><span class="line">                <span class="keyword">if</span> (array[l] &gt;= array[head]) &#123;</span><br><span class="line">                    head++;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (head &lt; tail) &#123;</span><br><span class="line">                <span class="type">int</span> temp;</span><br><span class="line">                temp = array[head];</span><br><span class="line">                array[head] = array[tail];</span><br><span class="line">                array[tail] = temp;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (head == tail) &#123;</span><br><span class="line">                <span class="type">int</span> temp;</span><br><span class="line">                temp = array[head];</span><br><span class="line">                array[head] = array[l];</span><br><span class="line">                array[l] = temp;</span><br><span class="line">                quick_sort(array, l, head - <span class="number">1</span>);</span><br><span class="line">                quick_sort(array, head + <span class="number">1</span>, r);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;发生错误&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>课程作业</category>
        <category>java作业</category>
        <category>Java_上机3</category>
      </categories>
      <tags>
        <tag>课程</tag>
        <tag>Java作业</tag>
      </tags>
  </entry>
  <entry>
    <title>Java_上机2</title>
    <url>/2021/11/02/Java-%E4%B8%8A%E6%9C%BA2/</url>
    <content><![CDATA[<h1 id="编程题目"><a href="#编程题目" class="headerlink" title="编程题目"></a>编程题目</h1><ul>
<li><font color = red>注意</font><ol>
<li>下面代码块直接复制粘贴应该就可以通过</li>
<li>如果显示的是没有通过（如：unknown erro,wrong erro….）建议在评判界面等10秒左右，因为系统判定会有延迟。</li>
<li>如果对于改题您有更好的解决方式，欢迎联系本人</li>
</ol>
</li>
</ul>
<h2 id="1-二分查找"><a href="#1-二分查找" class="headerlink" title="1.二分查找"></a>1.二分查找</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">data</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        String dataStr;</span><br><span class="line">        String []str;</span><br><span class="line">        <span class="type">int</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> fdnum;<span class="comment">//存储需要查找的数</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isFind</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">while</span> (data.hasNextLine()) &#123;</span><br><span class="line">            dataStr = data.nextLine();</span><br><span class="line">            str = dataStr.split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="type">int</span> [] num = <span class="keyword">new</span> <span class="title class_">int</span>[Integer.parseInt(str[<span class="number">0</span>])+<span class="number">3</span>];</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= Integer.parseInt(str[<span class="number">0</span>])+<span class="number">1</span>; i++) &#123;</span><br><span class="line">                num[i] = Integer.parseInt(str[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            fdnum = num[num[<span class="number">0</span>]+<span class="number">1</span>];</span><br><span class="line">            <span class="type">int</span> <span class="variable">low</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">high</span> <span class="operator">=</span> num[<span class="number">0</span>];</span><br><span class="line">            <span class="type">int</span> mid;</span><br><span class="line">            <span class="keyword">while</span> (low &lt;= high) &#123;</span><br><span class="line">                mid = low + (high - low) / <span class="number">2</span>;</span><br><span class="line">                <span class="keyword">if</span> (num[mid] == fdnum) &#123;</span><br><span class="line">                    System.out.println(mid-<span class="number">1</span>);</span><br><span class="line">                    isFind = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (num[mid] &gt; fdnum) &#123;</span><br><span class="line">                    high = mid-<span class="number">1</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    low = mid+<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!isFind) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">                isFind = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="2-数组中找最大值和最小值"><a href="#2-数组中找最大值和最小值" class="headerlink" title="2.数组中找最大值和最小值"></a>2.数组中找最大值和最小值</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        String dataStr;</span><br><span class="line">        <span class="type">double</span> []doubleData = <span class="keyword">new</span> <span class="title class_">double</span>[<span class="number">100</span>];</span><br><span class="line">        <span class="type">double</span> maxDouble;</span><br><span class="line">        <span class="type">double</span> minDouble;</span><br><span class="line">        <span class="keyword">while</span> (scanner.hasNextLine()) &#123;</span><br><span class="line">            String []str;</span><br><span class="line">            dataStr = scanner.nextLine();</span><br><span class="line">            str = dataStr.split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; str.length; i++) &#123;</span><br><span class="line">                doubleData[i] = Double.parseDouble(str[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            maxDouble = doubleData[<span class="number">0</span>];</span><br><span class="line">            minDouble = doubleData[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; str.length; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (maxDouble &lt; doubleData[i])&#123;</span><br><span class="line">                    maxDouble = doubleData[i];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (minDouble &gt; doubleData[i])&#123;</span><br><span class="line">                    minDouble = doubleData[i];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(maxDouble);</span><br><span class="line">            System.out.println(minDouble);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3-统计元音"><a href="#3-统计元音" class="headerlink" title="3.统计元音"></a>3.统计元音</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        String []dataStr = <span class="keyword">new</span> <span class="title class_">String</span>[<span class="number">101</span>];</span><br><span class="line">        <span class="type">int</span> []doubleData = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">while</span> (scanner.hasNextLine()) &#123;</span><br><span class="line">           String data;</span><br><span class="line">           data = scanner.nextLine();</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; data.length(); i++) &#123;</span><br><span class="line">                dataStr[i] = String.valueOf(data.charAt(i));</span><br><span class="line">                <span class="keyword">switch</span> (data.charAt(i))&#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">                        doubleData[<span class="number">0</span>]++;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&#x27;e&#x27;</span>:</span><br><span class="line">                        doubleData[<span class="number">1</span>]++;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&#x27;i&#x27;</span>:</span><br><span class="line">                        doubleData[<span class="number">2</span>]++;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&#x27;o&#x27;</span>:</span><br><span class="line">                        doubleData[<span class="number">3</span>]++;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&#x27;u&#x27;</span>:</span><br><span class="line">                        doubleData[<span class="number">4</span>]++;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;a:&quot;</span>+doubleData[<span class="number">0</span>]);</span><br><span class="line">            System.out.println(<span class="string">&quot;e:&quot;</span>+doubleData[<span class="number">1</span>]);</span><br><span class="line">            System.out.println(<span class="string">&quot;i:&quot;</span>+doubleData[<span class="number">2</span>]);</span><br><span class="line">            System.out.println(<span class="string">&quot;o:&quot;</span>+doubleData[<span class="number">3</span>]);</span><br><span class="line">            System.out.println(<span class="string">&quot;u:&quot;</span>+doubleData[<span class="number">4</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-快速排序"><a href="#4-快速排序" class="headerlink" title="4.快速排序"></a>4.快速排序</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        String dataStr;</span><br><span class="line">        <span class="type">int</span>[] DataNum = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">100</span>];</span><br><span class="line">        <span class="keyword">while</span> (scanner.hasNextLine()) &#123;</span><br><span class="line">            dataStr = scanner.nextLine();</span><br><span class="line">            String[] data = dataStr.split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; data.length; i++) &#123;</span><br><span class="line">                DataNum[i] = Integer.parseInt(data[i]);</span><br><span class="line">            &#125;   <span class="comment">//到目前为止，所有的值都被放到了数组DataNum里面了</span></span><br><span class="line"></span><br><span class="line">            DataNum = quickSort(DataNum, <span class="number">1</span>, data.length - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; data.length; i++) &#123;</span><br><span class="line">                System.out.print(DataNum[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] quickSort(<span class="type">int</span>[] data, <span class="type">int</span> start, <span class="type">int</span> end) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">head</span> <span class="operator">=</span> start;</span><br><span class="line">        <span class="type">int</span> <span class="variable">tail</span> <span class="operator">=</span> end;</span><br><span class="line">        <span class="keyword">while</span> (head &lt; tail) &#123;</span><br><span class="line">            <span class="keyword">while</span> (head &lt; tail) &#123;</span><br><span class="line">                <span class="keyword">if</span> (data[start] &lt;= data[tail]) &#123;</span><br><span class="line">                    tail--;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> (head &lt; tail) &#123;</span><br><span class="line">                <span class="keyword">if</span> (data[start] &gt;= data[head]) &#123;</span><br><span class="line">                    head++;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (head &lt; tail) &#123;</span><br><span class="line">                <span class="type">int</span> temp;</span><br><span class="line">                temp = data[head];</span><br><span class="line">                data[head] = data[tail];</span><br><span class="line">                data[tail] = temp;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (head == tail) &#123;</span><br><span class="line">                <span class="type">int</span> temp;</span><br><span class="line">                temp = data[head];</span><br><span class="line">                data[head] = data[start];</span><br><span class="line">                data[start] = temp;</span><br><span class="line">                data = quickSort(data, start, head - <span class="number">1</span>);</span><br><span class="line">                data = quickSort(data, head + <span class="number">1</span>, end);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;发生错误&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="5-说反话"><a href="#5-说反话" class="headerlink" title="5.说反话"></a>5.说反话</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        String dataStr;</span><br><span class="line">        <span class="keyword">while</span> (scanner.hasNextLine()) &#123;</span><br><span class="line">            dataStr = scanner.nextLine();</span><br><span class="line">            String[] data = dataStr.split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> data.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">                System.out.print(data[i]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><font color = red>代码若存在问题请及时联系我进行修改</font></p>
]]></content>
      <categories>
        <category>课程作业</category>
        <category>java作业</category>
        <category>Java_上机2</category>
      </categories>
      <tags>
        <tag>课程</tag>
        <tag>Java作业</tag>
      </tags>
  </entry>
  <entry>
    <title>Java_上机4</title>
    <url>/2021/11/29/Java-%E4%B8%8A%E6%9C%BA4/</url>
    <content><![CDATA[<h1 id="任务1-完善“卡牌操作”类的功能"><a href="#任务1-完善“卡牌操作”类的功能" class="headerlink" title="任务1 完善“卡牌操作”类的功能"></a>任务1 完善“卡牌操作”类的功能</h1><h2 id="任务1文件下载"><a href="#任务1文件下载" class="headerlink" title="任务1文件下载"></a><a href="class4.1.zip">任务1文件下载</a></h2><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="https://s3.bmp.ovh/imgs/2021/11/1ca62d2c3ea1cab6.png" alt="任务1效果图"></p>
<h2 id="源代码如下："><a href="#源代码如下：" class="headerlink" title="源代码如下："></a>源代码如下：</h2><h3 id="MainProcess-class"><a href="#MainProcess-class" class="headerlink" title="MainProcess.class"></a>MainProcess.class</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainProcess</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">cardNum</span> <span class="operator">=</span> <span class="number">1</span>; <span class="comment">//定义牌的张数</span></span><br><span class="line">        <span class="type">CardOperator</span> <span class="variable">co</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CardOperator</span>(cardNum);</span><br><span class="line">        System.out.println(<span class="string">&quot;卡牌初始化:&quot;</span>);</span><br><span class="line">        co.showCards();</span><br><span class="line"></span><br><span class="line">        co.shuffleCards();</span><br><span class="line">        System.out.println(<span class="string">&quot;卡牌洗牌后:&quot;</span>);</span><br><span class="line">        co.showCards();</span><br><span class="line"></span><br><span class="line">        co.dealCards();</span><br><span class="line">        System.out.println(<span class="string">&quot;发牌后:&quot;</span>);</span><br><span class="line">        co.showDealCards();</span><br><span class="line"></span><br><span class="line">        co.rankCardsDDZType();</span><br><span class="line">        System.out.println(<span class="string">&quot;卡牌按斗地主模式理牌后:&quot;</span>);</span><br><span class="line">        co.showDealCards();</span><br><span class="line"></span><br><span class="line">        co.rankCardsTLJType();</span><br><span class="line">        System.out.println(<span class="string">&quot;卡牌按拖拉机模式理牌后:&quot;</span>);</span><br><span class="line">        co.showDealCards();</span><br><span class="line"></span><br><span class="line">        co.rankCards();</span><br><span class="line">        System.out.println(<span class="string">&quot;所有卡牌理牌后:&quot;</span>);</span><br><span class="line">        co.showCards();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="CardOperator-class"><a href="#CardOperator-class" class="headerlink" title="CardOperator.class"></a>CardOperator.class</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CardOperator</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">num_per_cards</span> <span class="operator">=</span> <span class="number">52</span>; <span class="comment">//每副卡牌的数量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> cards_num;          <span class="comment">//一共几副牌</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> [][] cards;         <span class="comment">//卡牌组数，例如三副牌，就是3*52的二维矩阵</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">deal_cards_num</span> <span class="operator">=</span> <span class="number">26</span>; <span class="comment">//指定发牌的数量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> [] deal_cards = <span class="keyword">new</span> <span class="title class_">int</span>[deal_cards_num]; <span class="comment">//用以存储发出的牌</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CardOperator</span><span class="params">(<span class="type">int</span> user_input_cards_num)</span>&#123;</span><br><span class="line">        <span class="comment">//接受几副牌的信息</span></span><br><span class="line">        cards_num = user_input_cards_num;</span><br><span class="line">        initialCards();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initialCards</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//每副牌都按照黑桃红桃、方片、草花,A-K的顺序初始化</span></span><br><span class="line">        <span class="comment">//系统认定先是13张黑桃，再13张红桃A-K，再13张方片A-K，最后13张草花A-K</span></span><br><span class="line">        cards = <span class="keyword">new</span> <span class="title class_">int</span>[cards_num][num_per_cards];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; cards_num; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; num_per_cards; j++) &#123;</span><br><span class="line">                cards[i][j] = j+i*num_per_cards;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showCards</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//依次显示每副牌的牌面</span></span><br><span class="line">        String card_type; <span class="comment">//牌型: 花色</span></span><br><span class="line">        String card_value; <span class="comment">//牌值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; cards_num; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;第&quot;</span>+(i+<span class="number">1</span>)+<span class="string">&quot;副牌:&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; num_per_cards; j++) &#123;</span><br><span class="line">                <span class="type">int</span> value= (cards[(j+i*num_per_cards)/<span class="number">52</span>][(j+i*num_per_cards)%<span class="number">52</span>]+<span class="number">1</span>) % <span class="number">13</span>;</span><br><span class="line">                <span class="type">int</span> <span class="variable">type</span> <span class="operator">=</span> (cards[(j+i*num_per_cards)/<span class="number">52</span>][(j+i*num_per_cards)%<span class="number">52</span>]%<span class="number">52</span>)/<span class="number">13</span>;</span><br><span class="line">                card_type = getCardType(type);</span><br><span class="line">                card_value = getCardValue(value);</span><br><span class="line">                System.out.print(card_type+card_value+<span class="string">&quot;,&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span>((j+<span class="number">1</span>) % <span class="number">13</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                    System.out.println();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">getCardType</span><span class="params">(<span class="type">int</span> type)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">card_type</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">switch</span> (type)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                card_type = <span class="string">&quot;♠&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                card_type = <span class="string">&quot;♥&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                card_type = <span class="string">&quot;♦&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                card_type = <span class="string">&quot;♣&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> card_type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">getCardValue</span><span class="params">(<span class="type">int</span> value)</span>&#123;</span><br><span class="line">        String card_value;</span><br><span class="line">        <span class="keyword">switch</span> (value)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                card_value = <span class="string">&quot;A&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                card_value = <span class="string">&quot;2&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                card_value = <span class="string">&quot;3&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                card_value = <span class="string">&quot;4&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                card_value = <span class="string">&quot;5&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                card_value = <span class="string">&quot;6&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                card_value = <span class="string">&quot;7&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                card_value = <span class="string">&quot;8&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                card_value = <span class="string">&quot;9&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">                card_value = <span class="string">&quot;10&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">                card_value = <span class="string">&quot;Jack&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">                card_value = <span class="string">&quot;Queen&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                card_value = <span class="string">&quot;King&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                card_value = <span class="string">&quot;wrong&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>  card_value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shuffleCards</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">shuffle_num</span> <span class="operator">=</span> <span class="number">100</span>; <span class="comment">//打乱100次</span></span><br><span class="line">        <span class="type">int</span> first_index,second_index;<span class="comment">//用于交换位置的两个元素的下标</span></span><br><span class="line">        <span class="type">int</span> temp; <span class="comment">//用于交换时候的临时变量</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; cards_num; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; shuffle_num; j++) &#123;</span><br><span class="line">                first_index = (<span class="type">int</span>) (Math.random()*(num_per_cards-<span class="number">1</span>));</span><br><span class="line">                second_index = (<span class="type">int</span>) (Math.random()*(num_per_cards-<span class="number">1</span>));</span><br><span class="line">                temp = cards[i][first_index];</span><br><span class="line">                cards[i][first_index] = cards[i][second_index];</span><br><span class="line">                cards[i][second_index] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">rankCards</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; cards_num; i++) &#123;</span><br><span class="line">            quick_sort(cards[i],<span class="number">0</span>, num_per_cards-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">quick_sort</span><span class="params">(<span class="type">int</span> [] array, <span class="type">int</span> l, <span class="type">int</span> r)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">head</span> <span class="operator">=</span> l;</span><br><span class="line">        <span class="type">int</span> <span class="variable">tail</span> <span class="operator">=</span> r;</span><br><span class="line">        <span class="keyword">while</span> (head &lt; tail) &#123;</span><br><span class="line">            <span class="keyword">while</span> (head &lt; tail) &#123;</span><br><span class="line">                <span class="keyword">if</span> (array[l] &lt;= array[tail]) &#123;</span><br><span class="line">                    tail--;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> (head &lt; tail) &#123;</span><br><span class="line">                <span class="keyword">if</span> (array[l] &gt;= array[head]) &#123;</span><br><span class="line">                    head++;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (head &lt; tail) &#123;</span><br><span class="line">                <span class="type">int</span> temp;</span><br><span class="line">                temp = array[head];</span><br><span class="line">                array[head] = array[tail];</span><br><span class="line">                array[tail] = temp;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (head == tail) &#123;</span><br><span class="line">                <span class="type">int</span> temp;</span><br><span class="line">                temp = array[head];</span><br><span class="line">                array[head] = array[l];</span><br><span class="line">                array[l] = temp;</span><br><span class="line">                quick_sort(array, l, head - <span class="number">1</span>);</span><br><span class="line">                quick_sort(array, head + <span class="number">1</span>, r);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;发生错误&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showDealCards</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//依次显示每副牌的牌面</span></span><br><span class="line">        String card_type; <span class="comment">//牌型: 花色</span></span><br><span class="line">        String card_value; <span class="comment">//牌值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; cards_num; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;第&quot;</span>+(i+<span class="number">1</span>)+<span class="string">&quot;副牌:&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; deal_cards_num; j++) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">value</span> <span class="operator">=</span> (deal_cards[(j+i*num_per_cards)%<span class="number">52</span>]+<span class="number">1</span>) % <span class="number">13</span>;</span><br><span class="line">                <span class="type">int</span> <span class="variable">type</span> <span class="operator">=</span> (deal_cards[(j+i*num_per_cards)%<span class="number">52</span>]%<span class="number">52</span>/<span class="number">13</span>);</span><br><span class="line">                card_type = getCardType(type);</span><br><span class="line">                card_value = getCardValue(value);</span><br><span class="line">                System.out.print(card_type+card_value+<span class="string">&quot;,&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span>((j+<span class="number">1</span>) % <span class="number">13</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                    System.out.println();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dealCards</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; deal_cards_num; i++) &#123;</span><br><span class="line">            deal_cards[i] = cards[<span class="number">0</span>][i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getTrueValueDDZ</span><span class="params">(<span class="type">int</span> cardNum)</span>&#123; <span class="comment">//对于特殊的A 2 和 k 做特殊处理</span></span><br><span class="line">        <span class="keyword">if</span>(cardNum == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(cardNum == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(cardNum == <span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">15</span>-cardNum;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">compareDDZ</span><span class="params">(<span class="type">int</span> cardA, <span class="type">int</span> cardB)</span>&#123; <span class="comment">//这里的cardA和cardB表示的是卡牌本身的值</span></span><br><span class="line">        <span class="type">int</span> compare;</span><br><span class="line">        compare = getTrueValueDDZ((cardA+<span class="number">1</span>) % <span class="number">13</span>)-getTrueValueDDZ((cardB+<span class="number">1</span>) % <span class="number">13</span>);</span><br><span class="line">        <span class="keyword">return</span> compare;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">compareTLJ</span><span class="params">(<span class="type">int</span> cardA, <span class="type">int</span> cardB)</span>&#123; <span class="comment">//这里的cardA和cardB表示的是卡牌本身的值</span></span><br><span class="line">        <span class="type">int</span> compare;</span><br><span class="line">        compare = (cardA%<span class="number">52</span>/<span class="number">13</span>) - (cardB%<span class="number">52</span>/<span class="number">13</span>);</span><br><span class="line">        <span class="keyword">return</span> compare;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">quick_sort_DDZ</span><span class="params">(<span class="type">int</span> [] array, <span class="type">int</span> l, <span class="type">int</span> r)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">head</span> <span class="operator">=</span> l;</span><br><span class="line">        <span class="type">int</span> <span class="variable">tail</span> <span class="operator">=</span> r;</span><br><span class="line">        <span class="keyword">while</span> (head &lt; tail) &#123;</span><br><span class="line">            <span class="keyword">while</span> (head &lt; tail) &#123;</span><br><span class="line">                <span class="keyword">if</span> (compareDDZ(array[l],array[tail]) &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                    tail--;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> (head &lt; tail) &#123;</span><br><span class="line">                <span class="keyword">if</span> (compareDDZ(array[l],array[head]) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                    head++;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (head &lt; tail) &#123;</span><br><span class="line">                <span class="type">int</span> temp;</span><br><span class="line">                temp = array[head];</span><br><span class="line">                array[head] = array[tail];</span><br><span class="line">                array[tail] = temp;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (head == tail) &#123;</span><br><span class="line">                <span class="type">int</span> temp;</span><br><span class="line">                temp = array[head];</span><br><span class="line">                array[head] = array[l];</span><br><span class="line">                array[l] = temp;</span><br><span class="line">                quick_sort_DDZ(array, l, head - <span class="number">1</span>);</span><br><span class="line">                quick_sort_DDZ(array, head + <span class="number">1</span>, r);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;发生错误&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">quick_sort_TLJ</span><span class="params">(<span class="type">int</span>[] array, <span class="type">int</span> l, <span class="type">int</span> r)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">head</span> <span class="operator">=</span> l;</span><br><span class="line">        <span class="type">int</span> <span class="variable">tail</span> <span class="operator">=</span> r;</span><br><span class="line">        <span class="keyword">while</span> (head &lt; tail) &#123;</span><br><span class="line">            <span class="keyword">while</span> (head &lt; tail) &#123;</span><br><span class="line">                <span class="keyword">if</span> (compareTLJ(array[l],array[tail]) &lt; <span class="number">0</span> || (compareTLJ(array[l],array[tail]) == <span class="number">0</span> &amp;&amp; compareDDZ(array[l],array[tail]) &lt;= <span class="number">0</span>)) &#123;</span><br><span class="line">                    tail--;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> (head &lt; tail) &#123;</span><br><span class="line">                <span class="keyword">if</span> (compareTLJ(array[l],array[head]) &gt; <span class="number">0</span> || (compareTLJ(array[l],array[head]) == <span class="number">0</span> &amp;&amp; compareDDZ(array[l],array[head]) &gt;= <span class="number">0</span>)) &#123;</span><br><span class="line">                    head++;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (head &lt; tail) &#123;</span><br><span class="line">                <span class="type">int</span> temp;</span><br><span class="line">                temp = array[head];</span><br><span class="line">                array[head] = array[tail];</span><br><span class="line">                array[tail] = temp;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (head == tail) &#123;</span><br><span class="line">                <span class="type">int</span> temp;</span><br><span class="line">                temp = array[head];</span><br><span class="line">                array[head] = array[l];</span><br><span class="line">                array[l] = temp;</span><br><span class="line">                quick_sort_TLJ(array, l, head - <span class="number">1</span>);</span><br><span class="line">                quick_sort_TLJ(array, head + <span class="number">1</span>, r);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;发生错误&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">rankCardsDDZType</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//按照斗地主的方式实现卡牌的排序</span></span><br><span class="line">        quick_sort_DDZ(deal_cards,<span class="number">0</span>,deal_cards.length-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">rankCardsTLJType</span><span class="params">()</span> &#123;</span><br><span class="line">        quick_sort_TLJ(deal_cards,<span class="number">0</span>,deal_cards.length-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="任务2-完成一个支持各种数组操作的类"><a href="#任务2-完成一个支持各种数组操作的类" class="headerlink" title="任务2 完成一个支持各种数组操作的类"></a>任务2 完成一个支持各种数组操作的类</h1><h2 id="任务2文件下载"><a href="#任务2文件下载" class="headerlink" title="任务2文件下载"></a><a href="class4.2.zip">任务2文件下载</a></h2><h2 id="效果图-1"><a href="#效果图-1" class="headerlink" title="效果图"></a>效果图</h2><p><img src="https://s3.bmp.ovh/imgs/2021/11/9f4a5e096cc892c7.png" alt="任务2效果图"></p>
<h2 id="源代码如下"><a href="#源代码如下" class="headerlink" title="源代码如下"></a>源代码如下</h2><h3 id="MainProcess-class-1"><a href="#MainProcess-class-1" class="headerlink" title="MainProcess.class"></a>MainProcess.class</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainProcess</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> [] array = <span class="keyword">new</span> <span class="title class_">int</span>[size];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">            array[i] = (<span class="type">int</span>)(Math.random()*<span class="number">20</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">AdvancedArray</span> <span class="variable">aa</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AdvancedArray</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置数组</span></span><br><span class="line">        System.out.println(<span class="string">&quot;原始数组:&quot;</span>);</span><br><span class="line">        aa.setArray(array);</span><br><span class="line">        aa.printArray();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//排序数组</span></span><br><span class="line">        System.out.println(<span class="string">&quot;排序后数组:&quot;</span>);</span><br><span class="line">        aa.quickSort(<span class="number">0</span>,aa.myList.length-<span class="number">1</span>);</span><br><span class="line">        aa.printArray();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//二分法查找数组元素key</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">key</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">20</span>);</span><br><span class="line">        System.out.printf(<span class="string">&quot;元素%d的位置是: %d%n&quot;</span>,key, aa.binarySearch(key));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//找最大最小值</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;最大数: %d%n&quot;</span>, aa.getMaxValue());</span><br><span class="line">        System.out.printf(<span class="string">&quot;最小数: %d%n&quot;</span>, aa.getMinValue());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//混排数组</span></span><br><span class="line">        aa.shuffle(<span class="number">100</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;混排后的数组:&quot;</span>);</span><br><span class="line">        aa.printArray();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//移动数组</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">offset</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*aa.myList.length);</span><br><span class="line">        <span class="type">String</span> <span class="variable">direction</span> <span class="operator">=</span> <span class="string">&quot;left&quot;</span>;</span><br><span class="line">        aa.move(direction, offset);</span><br><span class="line">        System.out.printf(<span class="string">&quot;向%s移动%d位后的数组：%n&quot;</span>, direction,offset);</span><br><span class="line">        aa.printArray();</span><br><span class="line"></span><br><span class="line">        offset = (<span class="type">int</span>)(Math.random()*aa.myList.length);</span><br><span class="line">        direction = <span class="string">&quot;right&quot;</span>;</span><br><span class="line">        aa.move(direction, offset);</span><br><span class="line">        System.out.printf(<span class="string">&quot;向%s移动%d位后的数组：%n&quot;</span>, direction,offset);</span><br><span class="line">        aa.printArray();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//插入数据</span></span><br><span class="line">        key = (<span class="type">int</span>)(Math.random()*<span class="number">20</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*aa.myList.length);</span><br><span class="line">        aa.insert(index,key);</span><br><span class="line">        System.out.printf(<span class="string">&quot;在下标%d位置插入数据%d后的数组：%n&quot;</span>, index, key);</span><br><span class="line">        aa.printArray();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="BasicArray-class"><a href="#BasicArray-class" class="headerlink" title="BasicArray.class"></a>BasicArray.class</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">BasicArray</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] myList;</span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setArray</span><span class="params">(<span class="type">int</span>[] array)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="BasicArrayOperation-class"><a href="#BasicArrayOperation-class" class="headerlink" title="BasicArrayOperation.class"></a>BasicArrayOperation.class</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BasicArrayOperation</span>&#123;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">getMaxValue</span><span class="params">()</span>;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">getMinValue</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">insert</span><span class="params">(<span class="type">int</span> index, <span class="type">int</span> key)</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">move</span><span class="params">(String direction, <span class="type">int</span> offset)</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">printArray</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="AdvancedArrayOperation-class"><a href="#AdvancedArrayOperation-class" class="headerlink" title="AdvancedArrayOperation.class"></a>AdvancedArrayOperation.class</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">AdvancedArrayOperation</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">binarySearch</span><span class="params">(<span class="type">int</span> key)</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">quickSort</span><span class="params">(<span class="type">int</span> left, <span class="type">int</span> right)</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">shuffle</span><span class="params">(<span class="type">int</span> num)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="AdvancedArray-class"><a href="#AdvancedArray-class" class="headerlink" title="AdvancedArray.class"></a>AdvancedArray.class</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AdvancedArray</span> <span class="keyword">extends</span> <span class="title class_">BasicArray</span> <span class="keyword">implements</span> <span class="title class_">BasicArrayOperation</span>, AdvancedArrayOperation&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setArray</span><span class="params">(<span class="type">int</span>[] array)</span> &#123;</span><br><span class="line">        myList = array;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getMaxValue</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">maxValue</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; myList.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (maxValue &lt; myList[i])&#123;</span><br><span class="line">                maxValue = myList[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> maxValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getMinValue</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">maxValue</span> <span class="operator">=</span> myList[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; myList.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (maxValue &gt; myList[i])&#123;</span><br><span class="line">                maxValue = myList[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> maxValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insert</span><span class="params">(<span class="type">int</span> index, <span class="type">int</span> key)</span> &#123;</span><br><span class="line">        myList[index] = key;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">move</span><span class="params">(String direction, <span class="type">int</span> offset)</span> &#123;</span><br><span class="line">        <span class="type">int</span> [] array = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];</span><br><span class="line">        System.arraycopy(myList, <span class="number">0</span>, array, <span class="number">0</span>, myList.length);</span><br><span class="line">        <span class="keyword">if</span> (Objects.equals(direction, <span class="string">&quot;left&quot;</span>))&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; myList.length; i++) &#123;</span><br><span class="line"></span><br><span class="line">                myList[i] = array[(i + offset) % myList.length];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(Objects.equals(direction, <span class="string">&quot;right&quot;</span>))&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; myList.length; i++) &#123;</span><br><span class="line">                myList[i] = array[(i+ myList.length - offset) % myList.length];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printArray</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; myList.length; i++) &#123;</span><br><span class="line">            System.out.print(myList[i]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">binarySearch</span><span class="params">(<span class="type">int</span> key)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; myList.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (myList[i] == key)&#123;</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">quickSort</span><span class="params">(<span class="type">int</span> left, <span class="type">int</span> right)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">head</span> <span class="operator">=</span> left;</span><br><span class="line">        <span class="type">int</span> <span class="variable">tail</span> <span class="operator">=</span> right;</span><br><span class="line">        <span class="keyword">while</span> (head &lt; tail) &#123;</span><br><span class="line">            <span class="keyword">while</span> (head &lt; tail) &#123;</span><br><span class="line">                <span class="keyword">if</span> (myList[left] &lt;= myList[tail]) &#123;</span><br><span class="line">                    tail--;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> (head &lt; tail) &#123;</span><br><span class="line">                <span class="keyword">if</span> (myList[left] &gt;= myList[head]) &#123;</span><br><span class="line">                    head++;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (head &lt; tail) &#123;</span><br><span class="line">                <span class="type">int</span> temp;</span><br><span class="line">                temp = myList[head];</span><br><span class="line">                myList[head] = myList[tail];</span><br><span class="line">                myList[tail] = temp;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (head == tail) &#123;</span><br><span class="line">                <span class="type">int</span> temp;</span><br><span class="line">                temp = myList[head];</span><br><span class="line">                myList[head] = myList[left];</span><br><span class="line">                myList[left] = temp;</span><br><span class="line">                quickSort(left, head - <span class="number">1</span>);</span><br><span class="line">                quickSort(head + <span class="number">1</span>, right);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;发生错误&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shuffle</span><span class="params">(<span class="type">int</span> num)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">first</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">10</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">second</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">10</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> myList[first];</span><br><span class="line">            myList[first] = myList[second];</span><br><span class="line">            myList[second] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>课程作业</category>
        <category>java作业</category>
        <category>Java_上机4</category>
      </categories>
      <tags>
        <tag>课程</tag>
        <tag>Java作业</tag>
      </tags>
  </entry>
  <entry>
    <title>Java_上机5_6</title>
    <url>/2021/12/20/Java-%E4%B8%8A%E6%9C%BA5-6/</url>
    <content><![CDATA[<h2 id="项目下载"><a href="#项目下载" class="headerlink" title="项目下载"></a><a href="class5-6.zip">项目下载</a></h2><h1 id="Java上机5"><a href="#Java上机5" class="headerlink" title="Java上机5"></a>Java上机5</h1><h2 id="package-cn-edu-hdu-account-core"><a href="#package-cn-edu-hdu-account-core" class="headerlink" title="package cn.edu.hdu.account.core"></a>package cn.edu.hdu.account.core</h2><h3 id="Account"><a href="#Account" class="headerlink" title="Account"></a>Account</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.edu.hdu.account.core;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Account</span> <span class="keyword">implements</span> <span class="title class_">AccountFeature</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> balance;</span><br><span class="line">    <span class="keyword">private</span> ArrayList&lt;Record&gt; records;</span><br><span class="line">    <span class="type">Scanner</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showMainMenu</span><span class="params">()</span> &#123;<span class="comment">//显示主菜单</span></span><br><span class="line">        System.out.println(<span class="string">&quot;------------家用收支记账软件-----------&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;1. 收支明细&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;2. 登记收入&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;3. 登记支出&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;4. 退出&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;请选择(1~4)&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showDetailInfo</span><span class="params">()</span> &#123;<span class="comment">//显示账单信息</span></span><br><span class="line">        System.out.println(<span class="string">&quot;--------------当前收支明细记录------------------------------------&quot;</span>);</span><br><span class="line">        System.out.printf(<span class="string">&quot;%-10s\t%-10s\t%-10s\t%-10s\t%-10s%n&quot;</span>, <span class="string">&quot;收支&quot;</span>, <span class="string">&quot;账户金额&quot;</span>, <span class="string">&quot;收支金额&quot;</span>, <span class="string">&quot;说明&quot;</span>, <span class="string">&quot;时间&quot;</span>);</span><br><span class="line">        <span class="comment">//循环遍历账本records中的每个记录，一次输出其变量信息</span></span><br><span class="line">        <span class="comment">//输出格式&quot;%-10s\t%-10s\t%-10s\t%-10s\t%-10s%n&quot;,依次输出收支类型/账户当时余额/单笔记录金额、备注、时间</span></span><br><span class="line">        <span class="type">Record</span> <span class="variable">record</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Record</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; records.size(); i++) &#123;</span><br><span class="line">            record = records.get(i);</span><br><span class="line">            System.out.printf(<span class="string">&quot;%-10s\t%-15s\t%-15s\t%-10s\t%-10s%n&quot;</span>,record.getRecordType(),record.getCurBalance(),record.getAmountOfMoney(),record.getRemark(),record.getDate());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">editIncomeInfo</span><span class="params">()</span> &#123;<span class="comment">//登记收入信息</span></span><br><span class="line">        <span class="comment">//编辑收入信息，收入信息包括：记录类型、当前余额、单笔金额、备注、时间</span></span><br><span class="line">        <span class="comment">//分别获得这些信息，然后调用setRecord函数，将这些信息写入记录</span></span><br><span class="line">        <span class="comment">//当前余额的计算通过updateBalance函数完成</span></span><br><span class="line">        System.out.println(<span class="string">&quot;本次收入金额&quot;</span>);</span><br><span class="line">        <span class="type">Double</span> <span class="variable">money</span> <span class="operator">=</span> input.nextDouble();</span><br><span class="line">        System.out.println(<span class="string">&quot;本次收入说明&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">remark</span> <span class="operator">=</span> input.next();</span><br><span class="line">        <span class="type">String</span> <span class="variable">type</span> <span class="operator">=</span> <span class="string">&quot;收入&quot;</span>;</span><br><span class="line">        updateBalance(<span class="string">&quot;+&quot;</span>,money);</span><br><span class="line">        setRecord(type,<span class="built_in">this</span>.balance,money,remark,<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">editSpendInfo</span><span class="params">()</span> &#123;<span class="comment">//登记支出信</span></span><br><span class="line">        <span class="comment">//编辑支出信息，收入信息包括：记录类型、当前余额、单笔记录金额、备注、时间</span></span><br><span class="line">        <span class="comment">//分别获得这些信息，然后调用setRecord函数，将这些信息写入记录</span></span><br><span class="line">        <span class="comment">//当前余额的计算通过updateBalance函数完成</span></span><br><span class="line">        System.out.println(<span class="string">&quot;本次支出金额&quot;</span>);</span><br><span class="line">        <span class="type">Double</span> <span class="variable">money</span> <span class="operator">=</span> input.nextDouble();</span><br><span class="line">        System.out.println(<span class="string">&quot;本次支出说明&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">remark</span> <span class="operator">=</span> input.next();</span><br><span class="line">        <span class="type">String</span> <span class="variable">type</span> <span class="operator">=</span> <span class="string">&quot;支出&quot;</span>;</span><br><span class="line">        updateBalance(<span class="string">&quot;-&quot;</span>,money);</span><br><span class="line">        setRecord(type,<span class="built_in">this</span>.balance,money,remark,<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">exitAccount</span><span class="params">()</span> &#123;<span class="comment">//退出记账器</span></span><br><span class="line">        System.exit(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span>&#123;<span class="comment">//初始化账本</span></span><br><span class="line">        <span class="built_in">this</span>.balance = <span class="number">0.0</span>;</span><br><span class="line">        <span class="built_in">this</span>.records = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Record&gt;();</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="comment">//在一个循环中不断显示主菜单showMainMenu,并获取用户输入gerUserInput</span></span><br><span class="line">            <span class="comment">//捕获在getUserInput中可能出现的输入异常，进行异常处理（这里的异常处理就是提示用户信息输错了，请重新输入</span></span><br><span class="line">            showMainMenu();</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                getUserInput();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IllegalInputException e) &#123;</span><br><span class="line">                System.out.println();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">getUserInput</span><span class="params">()</span> <span class="keyword">throws</span> IllegalInputException &#123;<span class="comment">//处理逻辑</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">choice</span> <span class="operator">=</span> input.nextInt();<span class="comment">//获取用户的输入</span></span><br><span class="line">        <span class="keyword">switch</span> (choice)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>: &#123;</span><br><span class="line">                <span class="comment">//显示账本详情</span></span><br><span class="line">                showDetailInfo();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>: &#123;</span><br><span class="line">                <span class="comment">//编辑收入信息</span></span><br><span class="line">                editIncomeInfo();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>: &#123;</span><br><span class="line">                <span class="comment">//编辑支出信息</span></span><br><span class="line">                editSpendInfo();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:&#123;</span><br><span class="line">                <span class="comment">//退出账本系统</span></span><br><span class="line">                exitAccount();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">default</span>:&#123;</span><br><span class="line">                <span class="comment">//即输入异常，则抛出IllegalInputException异常</span></span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalInputException</span>(choice);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setRecord</span><span class="params">(String type, <span class="type">double</span> balance, <span class="type">double</span> money, String remark, Date date)</span>&#123;<span class="comment">//维护账单</span></span><br><span class="line">        <span class="comment">//新建一个Record对象，将参数中的信息置入这俄格Record对象</span></span><br><span class="line">        <span class="comment">//并将该Record对象作为记录加入账本的records列表中</span></span><br><span class="line">        <span class="type">Record</span> <span class="variable">record</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Record</span>();</span><br><span class="line">        record.setRecordType(type);</span><br><span class="line">        record.setCurBalance(balance);</span><br><span class="line">        record.setAmountOfMoney(money);</span><br><span class="line">        record.setRemark(remark);</span><br><span class="line">        record.setDate(date);</span><br><span class="line">        records.add(record);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">updateBalance</span><span class="params">(String op, <span class="type">double</span> money)</span>&#123;<span class="comment">//维护余额</span></span><br><span class="line">        <span class="comment">//根据参数op所指的操作（+或—），完成余额balance的更新</span></span><br><span class="line">        <span class="keyword">switch</span> (op)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;+&quot;</span>: &#123;</span><br><span class="line">                <span class="built_in">this</span>.balance+= money;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;-&quot;</span>: &#123;</span><br><span class="line">                <span class="built_in">this</span>.balance-= money;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="AccountFeature"><a href="#AccountFeature" class="headerlink" title="AccountFeature"></a>AccountFeature</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.edu.hdu.account.core;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">AccountFeature</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showMainMenu</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showDetailInfo</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">editIncomeInfo</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">editSpendInfo</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">exitAccount</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="IllegalInputException"><a href="#IllegalInputException" class="headerlink" title="IllegalInputException"></a>IllegalInputException</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.edu.hdu.account.core;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IllegalInputException</span> <span class="keyword">extends</span> <span class="title class_">Exception</span>&#123;</span><br><span class="line">    <span class="comment">//这个变量用来记录用户输入的参数异常，比如输入5那么input就是5</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> input;</span><br><span class="line">    <span class="comment">//构造函数，用异常输入来创建异常类</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">IllegalInputException</span><span class="params">(<span class="type">int</span> input)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.input = input;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入1~4的整数&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">InputMismatchException</span><span class="params">(String m)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入1~4的整数&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//用于获取该异常参数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getInput</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.input;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Record"><a href="#Record" class="headerlink" title="Record"></a>Record</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.edu.hdu.account.core;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Record</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String recordType; <span class="comment">//记录类型</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> curBalance; <span class="comment">//当前余额</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> amountOfMoney; <span class="comment">//记录金额</span></span><br><span class="line">    <span class="keyword">private</span> String remark; <span class="comment">//记录备注</span></span><br><span class="line">    <span class="keyword">private</span> Date date; <span class="comment">//记录时间</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getRecordType</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> recordType;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setRecordType</span><span class="params">(String recordType)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.recordType = recordType;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getCurBalance</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> curBalance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCurBalance</span><span class="params">(<span class="type">double</span> curBalance)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.curBalance = curBalance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getAmountOfMoney</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> amountOfMoney;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAmountOfMoney</span><span class="params">(<span class="type">double</span> amountOfMoney)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.amountOfMoney = amountOfMoney;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getRemark</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> remark;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setRemark</span><span class="params">(String remark)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.remark = remark;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Date <span class="title function_">getDate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> date;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDate</span><span class="params">(Date date)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.date = date;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="package-cn-edu-hdu-account-main"><a href="#package-cn-edu-hdu-account-main" class="headerlink" title="package cn.edu.hdu.account.main"></a>package cn.edu.hdu.account.main</h2><h3 id="MainProcess"><a href="#MainProcess" class="headerlink" title="MainProcess"></a>MainProcess</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.edu.hdu.account.main;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.edu.hdu.account.core.Account;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainProcess</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Account</span> <span class="variable">account</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Account</span>();</span><br><span class="line">        account.init();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="Java上机6"><a href="#Java上机6" class="headerlink" title="Java上机6"></a>Java上机6</h1><h2 id="package-cn-edu-hdu-rent-core"><a href="#package-cn-edu-hdu-rent-core" class="headerlink" title="package cn.edu.hdu.rent.core"></a>package cn.edu.hdu.rent.core</h2><h3 id="Automobile"><a href="#Automobile" class="headerlink" title="Automobile"></a>Automobile</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.edu.hdu.rent.core;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Automobile</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String brand;	 <span class="comment">//品牌</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> price;    <span class="comment">//价格</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getBrand</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> brand;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBrand</span><span class="params">(String brand)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.brand = brand;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getPrice</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPrice</span><span class="params">(<span class="type">double</span> price)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.price = price;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="AutomobileManager"><a href="#AutomobileManager" class="headerlink" title="AutomobileManager"></a>AutomobileManager</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.edu.hdu.rent.core;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.edu.hdu.account.core.IllegalInputException;</span><br><span class="line"><span class="keyword">import</span> cn.edu.hdu.rent.util.Management;</span><br><span class="line"><span class="keyword">import</span> cn.edu.hdu.rent.util.RentSysConst;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AutomobileManager</span> <span class="keyword">implements</span> <span class="title class_">Management</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> type)</span> <span class="keyword">throws</span> IllegalInputException &#123;</span><br><span class="line">        <span class="comment">//添加汽车</span></span><br><span class="line">        String brand;</span><br><span class="line">        <span class="type">double</span> price;</span><br><span class="line">        <span class="keyword">switch</span> (type)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;请输入品牌&quot;</span>);</span><br><span class="line">                brand = RentSysConst.INPUT.next();</span><br><span class="line">                System.out.println(<span class="string">&quot;请输入佣金&quot;</span>);</span><br><span class="line">                price = RentSysConst.INPUT.nextDouble();</span><br><span class="line">                System.out.println(<span class="string">&quot;请输入载人量：&quot;</span>);</span><br><span class="line">                <span class="type">double</span> <span class="variable">peopleCapacity</span> <span class="operator">=</span> RentSysConst.INPUT.nextDouble();</span><br><span class="line">                Car car=<span class="keyword">new</span> <span class="title class_">Car</span>();</span><br><span class="line">                car.setBrand(brand);</span><br><span class="line">                car.setPeopleCapacity(peopleCapacity);</span><br><span class="line">                car.setPrice(price);</span><br><span class="line">                RentSysConst.AUTO_LIST.put(RentSysConst.AUTO_ID+<span class="number">1</span>,car);</span><br><span class="line">                RentSysConst.AUTO_ID++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;请输入品牌&quot;</span>);</span><br><span class="line">                brand = RentSysConst.INPUT.next();</span><br><span class="line">                System.out.println(<span class="string">&quot;请输入佣金&quot;</span>);</span><br><span class="line">                price = RentSysConst.INPUT.nextDouble();</span><br><span class="line">                System.out.println(<span class="string">&quot;请输入载货量：&quot;</span>);</span><br><span class="line">                <span class="type">double</span> <span class="variable">cargoCapacity</span> <span class="operator">=</span> RentSysConst.INPUT.nextDouble();</span><br><span class="line">                <span class="type">Truck</span> <span class="variable">truck</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Truck</span>();</span><br><span class="line">                truck.setCargoCapacity(cargoCapacity);</span><br><span class="line">                truck.setBrand(brand);</span><br><span class="line">                truck.setPrice(price);</span><br><span class="line">                RentSysConst.AUTO_LIST.put(RentSysConst.AUTO_ID+<span class="number">1</span>,truck);</span><br><span class="line">                RentSysConst.AUTO_ID++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;请输入品牌&quot;</span>);</span><br><span class="line">                brand = RentSysConst.INPUT.next();</span><br><span class="line">                System.out.println(<span class="string">&quot;请输入佣金&quot;</span>);</span><br><span class="line">                price = RentSysConst.INPUT.nextDouble();</span><br><span class="line">                System.out.println(<span class="string">&quot;请输入载人量：&quot;</span>);</span><br><span class="line">                <span class="type">double</span> <span class="variable">peopleCapacity</span> <span class="operator">=</span> RentSysConst.INPUT.nextDouble();</span><br><span class="line">                System.out.println(<span class="string">&quot;请输入载货量：&quot;</span>);</span><br><span class="line">                <span class="type">double</span> <span class="variable">cargoCapacity</span> <span class="operator">=</span> RentSysConst.INPUT.nextDouble();</span><br><span class="line">                <span class="type">PickUp</span> <span class="variable">pickUp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PickUp</span>();</span><br><span class="line">                pickUp.setPeopleCapacity(peopleCapacity);</span><br><span class="line">                pickUp.setCargoCapacity(cargoCapacity);</span><br><span class="line">                pickUp.setBrand(brand);</span><br><span class="line">                pickUp.setPrice(price);</span><br><span class="line">                RentSysConst.AUTO_LIST.put(RentSysConst.AUTO_ID+<span class="number">1</span>,pickUp);</span><br><span class="line">                RentSysConst.AUTO_ID++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">default</span>:&#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalInputException</span>(type);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">(<span class="type">int</span> ID)</span> &#123;</span><br><span class="line">        RentSysConst.AUTO_LIST.remove(ID);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">(<span class="type">int</span> ID)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//显示已经汽车列表</span></span><br><span class="line">        Iterator&lt;Map.Entry&lt;Integer, Automobile&gt;&gt; iterator = RentSysConst.AUTO_LIST.entrySet().iterator();</span><br><span class="line">        System.out.printf(<span class="string">&quot;%-10s\t%-10s\t%-10s\t%-10s\t%-10s%n&quot;</span>,<span class="string">&quot;序号&quot;</span>,<span class="string">&quot;汽车名称&quot;</span>,<span class="string">&quot;租金&quot;</span>,<span class="string">&quot;载客量&quot;</span>,<span class="string">&quot;载货量&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext())&#123;</span><br><span class="line">            Map.Entry&lt;Integer, Automobile&gt; entry = iterator.next();</span><br><span class="line">            <span class="keyword">if</span>(entry.getValue() <span class="keyword">instanceof</span> Car)&#123;</span><br><span class="line">                <span class="type">Car</span> <span class="variable">car</span> <span class="operator">=</span> (Car)entry.getValue();</span><br><span class="line">                System.out.printf(<span class="string">&quot;%-10s\t%-15s\t%-10s\t%-15s\t%-10s%n&quot;</span>,entry.getKey(),car.getBrand(),car.getPrice(),car.getPeopleCapacity(),<span class="string">&quot;0.0&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(entry.getValue() <span class="keyword">instanceof</span> Truck)&#123;</span><br><span class="line">                <span class="type">Truck</span> <span class="variable">truck</span> <span class="operator">=</span> (Truck) entry.getValue();</span><br><span class="line">                System.out.printf(<span class="string">&quot;%-10s\t%-15s\t%-10s\t%-15s\t%-10s%n&quot;</span>,entry.getKey(),truck.getBrand(),truck.getPrice(),<span class="string">&quot;0.0&quot;</span>,truck.getCargoCapacity());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(entry.getValue() <span class="keyword">instanceof</span> PickUp)&#123;</span><br><span class="line">                <span class="type">PickUp</span> <span class="variable">pickUp</span> <span class="operator">=</span> (PickUp) entry.getValue();</span><br><span class="line">                System.out.printf(<span class="string">&quot;%-10s\t%-15s\t%-10s\t%-15s\t%-10s%n&quot;</span>,entry.getKey(),pickUp.getBrand(),pickUp.getPrice(),pickUp.getPeopleCapacity(),pickUp.getCargoCapacity());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">exit</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//退出函数</span></span><br><span class="line">       <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (flag == <span class="number">1</span>)&#123;</span><br><span class="line">                showMenu();</span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    flag = getUserInput();</span><br><span class="line">                &#125;<span class="keyword">catch</span> (IllegalInputException e)&#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;输入了无效信息，请重新输入&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;; <span class="comment">//初始化管理系统</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showMenu</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;=========汽车管理系统=========&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;1.增加汽车&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;2.删除汽车&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;3.显示汽车&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;4.退出系统&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;; <span class="comment">//显示管理系统界面</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getUserInput</span><span class="params">()</span> <span class="keyword">throws</span> IllegalInputException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">choice</span> <span class="operator">=</span> RentSysConst.INPUT.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">type</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">switch</span> (choice)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;请输入汽车类型(1-汽车,2-卡车,3-皮卡):&quot;</span>);</span><br><span class="line">                type = RentSysConst.INPUT.nextInt();</span><br><span class="line">                add(type);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;请输入要删除的汽车ID&quot;</span>);</span><br><span class="line">                type = RentSysConst.INPUT.nextInt();</span><br><span class="line">                delete(type);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:&#123;</span><br><span class="line">                show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:&#123;</span><br><span class="line">                <span class="keyword">return</span> exit();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">default</span>:&#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalInputException</span>(choice);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;; <span class="comment">//处理逻辑</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Car"><a href="#Car" class="headerlink" title="Car"></a>Car</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.edu.hdu.rent.core;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.edu.hdu.rent.util.CanCarryPeople;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Car</span> <span class="keyword">extends</span> <span class="title class_">Automobile</span> <span class="keyword">implements</span> <span class="title class_">CanCarryPeople</span>  &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> peopleCapacity;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPeopleCapacity</span><span class="params">(<span class="type">double</span> capacity)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.peopleCapacity = capacity;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getPeopleCapacity</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.peopleCapacity;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="IllegalInputeException"><a href="#IllegalInputeException" class="headerlink" title="IllegalInputeException"></a>IllegalInputeException</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.edu.hdu.rent.core;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IllegalInputException</span> <span class="keyword">extends</span> <span class="title class_">Exception</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> input;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">IllegalInputException</span><span class="params">(<span class="type">int</span> input)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.input = input;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getInput</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.input;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="PickUp"><a href="#PickUp" class="headerlink" title="PickUp"></a>PickUp</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.edu.hdu.rent.core;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.edu.hdu.rent.util.CanCarryCargo;</span><br><span class="line"><span class="keyword">import</span> cn.edu.hdu.rent.util.CanCarryPeople;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PickUp</span> <span class="keyword">extends</span> <span class="title class_">Automobile</span> <span class="keyword">implements</span> <span class="title class_">CanCarryPeople</span>, CanCarryCargo &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> peopleCapacity;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> cargoCapacity;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPeopleCapacity</span><span class="params">(<span class="type">double</span> capacity)</span> &#123;</span><br><span class="line">           <span class="built_in">this</span>.peopleCapacity = capacity;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getPeopleCapacity</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.peopleCapacity;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCargoCapacity</span><span class="params">(<span class="type">double</span> capacity)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.cargoCapacity = capacity;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getCargoCapacity</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.cargoCapacity;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="RentSystem"><a href="#RentSystem" class="headerlink" title="RentSystem"></a>RentSystem</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.edu.hdu.rent.core;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.edu.hdu.rent.util.RentSysConst;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RentSystem</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> HashMap&lt;Integer, HashMap&lt;Automobile,Integer&gt;&gt; orders = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;Integer, HashMap&lt;Automobile,Integer&gt;&gt;(); <span class="comment">//汽车品牌</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">ID</span> <span class="operator">=</span> <span class="number">1</span>;  <span class="comment">//订单ID</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showMenu</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;=========你可以租车的类型及其价目表========&quot;</span>);</span><br><span class="line">        Iterator&lt;Map.Entry&lt;Integer, Automobile&gt;&gt; iterator = RentSysConst.AUTO_LIST.entrySet().iterator();</span><br><span class="line">        System.out.printf(<span class="string">&quot;%-10s\t%-10s\t%-10s\t%-10s\t%-10s%n&quot;</span>,<span class="string">&quot;序号&quot;</span>,<span class="string">&quot;汽车名称&quot;</span>,<span class="string">&quot;租金&quot;</span>,<span class="string">&quot;载客量&quot;</span>,<span class="string">&quot;载货量&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext())&#123;</span><br><span class="line">            Map.Entry&lt;Integer, Automobile&gt; entry = iterator.next();</span><br><span class="line">            <span class="keyword">if</span>(entry.getValue() <span class="keyword">instanceof</span> Car)&#123;</span><br><span class="line">                <span class="type">Car</span> <span class="variable">car</span> <span class="operator">=</span> (Car)entry.getValue();</span><br><span class="line">                System.out.printf(<span class="string">&quot;%-10s\t%-15s\t%-10s\t%-15s\t%-10s%n&quot;</span>,entry.getKey(),car.getBrand(),car.getPrice(),car.getPeopleCapacity(),<span class="string">&quot;0.0&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(entry.getValue() <span class="keyword">instanceof</span> Truck)&#123;</span><br><span class="line">                <span class="type">Truck</span> <span class="variable">truck</span> <span class="operator">=</span> (Truck) entry.getValue();</span><br><span class="line">                System.out.printf(<span class="string">&quot;%-10s\t%-15s\t%-10s\t%-15s\t%-10s%n&quot;</span>,entry.getKey(),truck.getBrand(),truck.getPrice(),<span class="string">&quot;0.0&quot;</span>,truck.getCargoCapacity());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(entry.getValue() <span class="keyword">instanceof</span> PickUp)&#123;</span><br><span class="line">                <span class="type">PickUp</span> <span class="variable">pickUp</span> <span class="operator">=</span> (PickUp) entry.getValue();</span><br><span class="line">                System.out.printf(<span class="string">&quot;%-10s\t%-15s\t%-10s\t%-15s\t%-10s%n&quot;</span>,entry.getKey(),pickUp.getBrand(),pickUp.getPrice(),pickUp.getPeopleCapacity(),pickUp.getCargoCapacity());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="comment">//显示租车系统界面</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">chooseAutomobiles</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">days</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (flag == <span class="number">1</span>) &#123;</span><br><span class="line">            HashMap&lt;Automobile,Integer&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;Automobile,Integer&gt;();</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;请输入要租的汽车ID（-1退出）&quot;</span>);</span><br><span class="line">                id = RentSysConst.INPUT.nextInt();</span><br><span class="line">                <span class="keyword">if</span> (id == -<span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">&quot;请输入要租的天数：&quot;</span>);</span><br><span class="line">                days = RentSysConst.INPUT.nextInt();</span><br><span class="line">                hashMap.put(RentSysConst.AUTO_LIST.get(id), days);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            orders.put(ID, hashMap);</span><br><span class="line">            ID++;</span><br><span class="line">            flag = showOrder();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="comment">//选择车辆</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">showOrder</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;你的订单&quot;</span>);</span><br><span class="line">        Iterator&lt;Map.Entry&lt;Integer, HashMap&lt;Automobile, Integer&gt;&gt;&gt; iterator = orders.entrySet().iterator();</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">            <span class="type">double</span> <span class="variable">peopleCapacity</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="type">double</span> <span class="variable">cargoCapacity</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="type">double</span> <span class="variable">price</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            Map.Entry&lt;Integer, HashMap&lt;Automobile, Integer&gt;&gt; entry = iterator.next();</span><br><span class="line">            System.out.println(<span class="string">&quot;订单&quot;</span> + entry.getKey() + <span class="string">&quot;:&quot;</span>);</span><br><span class="line">            Iterator&lt;Map.Entry&lt;Automobile, Integer&gt;&gt; entryIterator = entry.getValue().entrySet().iterator();</span><br><span class="line">            <span class="keyword">while</span> (entryIterator.hasNext()) &#123;</span><br><span class="line">                Map.Entry&lt;Automobile, Integer&gt; next = entryIterator.next();</span><br><span class="line">                System.out.println(<span class="string">&quot;&lt;&quot;</span> + next.getKey().getBrand() + <span class="string">&quot;,&quot;</span> + next.getValue() + <span class="string">&quot;天&gt;&quot;</span>);</span><br><span class="line">                price += next.getKey().getPrice();</span><br><span class="line">                <span class="keyword">if</span> (next.getKey() <span class="keyword">instanceof</span> Car) &#123;</span><br><span class="line">                    peopleCapacity += ((Car) next.getKey()).getPeopleCapacity();</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (next.getKey() <span class="keyword">instanceof</span> PickUp) &#123;</span><br><span class="line">                    peopleCapacity += ((PickUp) next.getKey()).getPeopleCapacity();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (next.getKey() <span class="keyword">instanceof</span> Truck) &#123;</span><br><span class="line">                    cargoCapacity += ((Truck) next.getKey()).getCargoCapacity();</span><br><span class="line"></span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (next.getKey() <span class="keyword">instanceof</span> PickUp) &#123;</span><br><span class="line">                    cargoCapacity += ((PickUp) next.getKey()).getCargoCapacity();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;总载客量&quot;</span> + peopleCapacity + <span class="string">&quot;人&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;总载货量&quot;</span> + cargoCapacity + <span class="string">&quot;吨&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;总租车价&quot;</span> + price + <span class="string">&quot;元&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;是否继续: Y or N ?&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">option</span> <span class="operator">=</span> RentSysConst.INPUT.next();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(option.equals(<span class="string">&quot;Y&quot;</span>))&#123;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(option.equals(<span class="string">&quot;N&quot;</span>))&#123;</span><br><span class="line">                flag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="comment">//展示订单</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">            showMenu();</span><br><span class="line">            chooseAutomobiles();</span><br><span class="line"></span><br><span class="line">    &#125;<span class="comment">//初始化租车系统</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Truck"><a href="#Truck" class="headerlink" title="Truck"></a>Truck</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.edu.hdu.rent.core;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.edu.hdu.rent.util.CanCarryCargo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Truck</span> <span class="keyword">extends</span> <span class="title class_">Automobile</span> <span class="keyword">implements</span> <span class="title class_">CanCarryCargo</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> cargoCapacity;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCargoCapacity</span><span class="params">(<span class="type">double</span> capacity)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.cargoCapacity = capacity;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getCargoCapacity</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.cargoCapacity;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="package-cn-edu-hdu-rent-main"><a href="#package-cn-edu-hdu-rent-main" class="headerlink" title="package cn.edu.hdu.rent.main"></a>package cn.edu.hdu.rent.main</h2><h3 id="MainProcess-1"><a href="#MainProcess-1" class="headerlink" title="MainProcess"></a>MainProcess</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.edu.hdu.rent.main;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.edu.hdu.rent.core.AutomobileManager;</span><br><span class="line"><span class="keyword">import</span> cn.edu.hdu.rent.core.IllegalInputException;</span><br><span class="line"><span class="keyword">import</span> cn.edu.hdu.rent.core.RentSystem;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainProcess</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IllegalInputException &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> choice;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请选择系统&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;1.汽车管理系统&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;2.租车系统&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;3.退出&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入（1-3）：&quot;</span>);</span><br><span class="line">            choice = sc.nextInt();</span><br><span class="line">            <span class="keyword">switch</span> (choice) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>: &#123;</span><br><span class="line">                    <span class="type">AutomobileManager</span> <span class="variable">am</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AutomobileManager</span>();</span><br><span class="line">                    am.init();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>: &#123;</span><br><span class="line">                    <span class="type">RentSystem</span> <span class="variable">rs</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RentSystem</span>();</span><br><span class="line">                    rs.init();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">3</span>: &#123;</span><br><span class="line">                    System.exit(<span class="number">0</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">default</span>: &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;输入值无效，请重新输入&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>课程作业</category>
        <category>java作业</category>
        <category>Java_上机5_6</category>
      </categories>
      <tags>
        <tag>课程</tag>
        <tag>Java作业</tag>
        <tag>单链表</tag>
      </tags>
  </entry>
  <entry>
    <title>Java</title>
    <url>/2021/09/16/Java/</url>
    <content><![CDATA[<h1 id="Java学习笔记"><a href="#Java学习笔记" class="headerlink" title="Java学习笔记"></a>Java学习笔记</h1><h2 id="JavaSE学习"><a href="#JavaSE学习" class="headerlink" title="JavaSE学习"></a>JavaSE学习</h2><h3 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h3><h4 id="JVM"><a href="#JVM" class="headerlink" title="JVM"></a>JVM</h4><ol>
<li>JVM是一个虚拟的计算机，具有指令集并使用不同的存储区域。负责执行指令、管理数据、内存、寄存器，包含在JDK中。</li>
<li>对于不同的平台，有不同的虚拟机</li>
<li>由于Java虚拟机机制屏蔽了底层运行平台的差别，实现了“一次编译，导出运行”</li>
</ol>
<h4 id="JDK"><a href="#JDK" class="headerlink" title="JDK"></a>JDK</h4><ol>
<li>全称为（Java Development Kit） Java开发工具包 JDK  &#x3D; JRE + Java的开发工具</li>
<li>JDK提供给Java开发者使用，其中包含了java的开发工具，自然包括了JRE。所以安装了JDK，就不用管再单独安装JRE</li>
</ol>
<h4 id="JRE"><a href="#JRE" class="headerlink" title="JRE"></a>JRE</h4><ol>
<li>全程为（Java Runtime Environment）Java运行环境 JRE &#x3D; JVM + Java核心类库</li>
<li>由于包括了JVM虚拟机，所以如果仅仅想要运行Java程序，那么只需要安装一个JRE即可</li>
</ol>
<h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul>
<li>JAVA文件有中文的时候记得在Javac的时候要转换成GBK编码才可以成功编译。(或者在javac的时候按照后面的例子进行编译    javac -encoding UTF-8 XX.java)</li>
<li>编译后每一个类都会对应一个class的文件</li>
<li>文件名必须和Public的类的名字一模一样</li>
</ul>
<h3 id="转义符"><a href="#转义符" class="headerlink" title="转义符"></a>转义符</h3><table>
<thead>
<tr>
<th>代码</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>\t</td>
<td>一个制表位，实现对齐的功能</td>
</tr>
<tr>
<td>\n</td>
<td>换行符</td>
</tr>
<tr>
<td>\\</td>
<td>一个\</td>
</tr>
<tr>
<td>\“</td>
<td>一个”</td>
</tr>
<tr>
<td>\‘</td>
<td>一个’</td>
</tr>
<tr>
<td>\r</td>
<td>一个回车。注意，并不会换行！</td>
</tr>
</tbody></table>
<h3 id="DOS命令"><a href="#DOS命令" class="headerlink" title="DOS命令"></a>DOS命令</h3><table>
<thead>
<tr>
<th>代码</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>md XX</td>
<td>创建XX的目录</td>
</tr>
<tr>
<td>rd  XX</td>
<td>删除XX的目录</td>
</tr>
<tr>
<td>copy XX</td>
<td>拷贝XX文件</td>
</tr>
<tr>
<td>del XX</td>
<td>删除XX文件</td>
</tr>
<tr>
<td>echo XX &gt; YY</td>
<td>输入XX内容到文件YY</td>
</tr>
<tr>
<td>move</td>
<td>剪切</td>
</tr>
</tbody></table>
<h3 id="Java-API使用"><a href="#Java-API使用" class="headerlink" title="Java API使用"></a>Java API使用</h3><h3 id="java-API下载"><a href="#java-API下载" class="headerlink" title="java_API下载;"></a><a href="Java8_API.CHM">java_API下载</a>;</h3><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><h4 id="整数类型"><a href="#整数类型" class="headerlink" title="整数类型"></a>整数类型</h4><table>
<thead>
<tr>
<th>类型</th>
<th>占用空间</th>
<th>范围</th>
</tr>
</thead>
<tbody><tr>
<td>byte[字节]</td>
<td>1字节</td>
<td>-128~127</td>
</tr>
<tr>
<td>short[短整型]</td>
<td>2字节</td>
<td>-2^15~2^15-1</td>
</tr>
<tr>
<td>int[整型]</td>
<td>4字节</td>
<td>-2^31~2^31-1</td>
</tr>
<tr>
<td>long[长整型]</td>
<td>8字节</td>
<td>-2^63~2^63-1</td>
</tr>
</tbody></table>
<p>Java的整型常量（具体值）默认为int型，声明long类型之后需加上‘l’或者’L‘</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">long</span> <span class="variable">n3</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br></pre></td></tr></table></figure>

<h4 id="浮点类型"><a href="#浮点类型" class="headerlink" title="浮点类型"></a>浮点类型</h4><table>
<thead>
<tr>
<th></th>
<th>占用存储空间</th>
<th>范围</th>
</tr>
</thead>
<tbody><tr>
<td>float(单精度)</td>
<td>4字节</td>
<td>-3.403E38~3.403E38</td>
</tr>
<tr>
<td>double（双精度）</td>
<td>8字节</td>
<td>1.798E308~1.798E308</td>
</tr>
</tbody></table>
<p>浮点数的构成：</p>
<p>浮点数 &#x3D; 符号位 + 指数位 + 尾数位</p>
<p>其中尾数部分可能丢失，造成精度损失，小数都是近似值</p>
<p>例： </p>
<p>十进制  5.12   512.0f   .512</p>
<p>科学计数法： 5.12e2 [5.12<em>10^2]      5.12E-2 [5.12</em>&#x2F;10^2]</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">float</span> <span class="variable">num1</span> <span class="operator">=</span> <span class="number">1.1</span>; <span class="comment">//写法错误，会默认为double类型，double转化为float有损失</span></span><br><span class="line"><span class="type">float</span> <span class="variable">num1</span> <span class="operator">=</span> <span class="number">1.1F</span>; <span class="comment">//完全正确，写成1.1f也是可以的</span></span><br><span class="line"><span class="type">double</span> <span class="variable">num1</span> <span class="operator">=</span> <span class="number">1.1f</span>; <span class="comment">//可以编译，小的放到大的空间可以实现</span></span><br></pre></td></tr></table></figure>

<p>p.s.</p>
<ol>
<li><p>通常情况下应该使用double类型而不是float类型，因为double更加精确（float会舍去很多的尾巴部分）</p>
</li>
<li><p>使用陷阱：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> <span class="variable">num11</span> <span class="operator">=</span> <span class="number">2.7</span>;</span><br><span class="line"><span class="type">double</span> <span class="variable">num12</span> <span class="operator">=</span> <span class="number">8.1</span> / <span class="number">3</span>;<span class="comment">//根据数学计算的基本原则，这里的答案应该是2.7</span></span><br><span class="line">System.out.println(num11);</span><br><span class="line">System.out.println(num12);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">但是通过程序的计算和输出你会发现，这里num11输出很正常的2.7，但是num12输出的却是很奇怪的2.6999999999997。这个问题是计算机内部的问题而非数学的问题。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<p>由于这个情况而言，要谨慎使用两个计算后的小数进行比较是否相等，正确的方式应该是对于两个数的绝对值的差值大小分类比较（使用java API）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (num11 == num12)&#123; <span class="comment">//该写法错误</span></span><br><span class="line">    System.out.println(<span class="string">&quot;相等&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(Math.abs(num11 - num12)); <span class="comment">//使用java API 进行查看</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(Math.abs(num11 - num12) &lt; <span class="number">0.00001</span>)&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;差值非常小接近于规定的精度&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>对于系统自动的转化格式需要进行考虑</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">float</span> <span class="variable">d1</span> <span class="operator">=</span> <span class="number">10</span> + <span class="number">1.1</span>;<span class="comment">//在这个例子中是错误的</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.1在运算过程中默认转化的是double类型的，所以运算完之后也是double，当double转化为float自然就会报错。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">如果要进行修改的话可以</span></span><br><span class="line"><span class="comment">float = 10 + 1.1f; 或者float = 10 + 1.1F;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>牢记大空间不能赋值给小空间</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> a;<span class="comment">//会报错，因为原先就是int类型，即便数字并不大</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h4 id="字符类型"><a href="#字符类型" class="headerlink" title="字符类型"></a>字符类型</h4><p>具体编码方式是Unicode编码（Unicode编码ascii编码）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> <span class="variable">C1</span> <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="type">char</span> <span class="variable">C2</span> <span class="operator">=</span> <span class="string">&#x27;\t&#x27;</span>;</span><br><span class="line"><span class="type">char</span> <span class="variable">C3</span> <span class="operator">=</span> <span class="string">&#x27;虞&#x27;</span>;<span class="comment">//不能用&quot;&quot;因为&quot;&quot;表示的是字符串</span></span><br><span class="line"><span class="type">char</span> <span class="variable">C4</span> <span class="operator">=</span> <span class="number">97</span>;</span><br></pre></td></tr></table></figure>

<p>UTF-8实质上就是对于Unicode编码的一个改进。</p>
<p>P.S.（byte,short）类型和char类型之前无法自动转化，但是可以进行运算，运算后的结果为int类型，int无法自动转化为char,但是反过来可以</p>
<h4 id="布尔类型"><a href="#布尔类型" class="headerlink" title="布尔类型"></a>布尔类型</h4><p>占用空间：1字节（true和false两种状态）</p>
<p>适用逻辑运算，一般情况下用于if while等判断语句</p>
<p>不可以只用0或者非0的值来表示真假，只能使用true或者false</p>
<p>P.S.布尔类型不参与运算，也不能参与类型的自动转化</p>
<h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">i = i++;</span><br><span class="line">System.out.println(i);</span><br><span class="line"><span class="comment">//最后输出的结果依旧为1，因为会把i值先放到temp内部最后再赋值所以1保持不变</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">i = ++i;</span><br><span class="line">System.out.println(i);</span><br><span class="line"><span class="comment">//最后的输出结果为2，因为这里是先自增再赋值</span></span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>运算符</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>%</td>
<td>取余数</td>
</tr>
<tr>
<td>~</td>
<td>按位取反</td>
</tr>
<tr>
<td>&amp;</td>
<td>按位与</td>
</tr>
<tr>
<td>|</td>
<td>按位或</td>
</tr>
<tr>
<td>^</td>
<td>按位异或</td>
</tr>
<tr>
<td>&lt;&lt;</td>
<td>算术左移</td>
</tr>
<tr>
<td>&gt;&gt;</td>
<td>算术右移</td>
</tr>
<tr>
<td>&gt;&gt;&gt;</td>
<td>逻辑右移，不存在&lt;&lt;&lt;</td>
</tr>
</tbody></table>
<ol>
<li>算术右移：低位溢出，符号位不变，用符号位补溢出的高位</li>
<li>A % B 其中如果A为小数也是可以计算的但是结果和double一样存在着很小的误差</li>
</ol>
<h4 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h4><table>
<thead>
<tr>
<th>逻辑运算符</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>a^b</td>
<td>逻辑疑惑，ab不同则为true</td>
</tr>
</tbody></table>
<h4 id="符合阈值运算符"><a href="#符合阈值运算符" class="headerlink" title="符合阈值运算符"></a>符合阈值运算符</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">byte</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">6</span>;</span><br><span class="line">b += <span class="number">2</span>;<span class="comment">//这一项可以运行，因为等价为b = (byte)(b + 2);</span></span><br><span class="line">b = b + <span class="number">2</span>;<span class="comment">//这一项不可以运行，因为后面的2默认为int大到小的数据没法自动转化</span></span><br></pre></td></tr></table></figure>

<h4 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int a = 10;</span><br><span class="line">int b = 20;</span><br><span class="line">int result;</span><br><span class="line">result = a &gt; b a++ : b--;</span><br></pre></td></tr></table></figure>

<h3 id="原码、反码、补码"><a href="#原码、反码、补码" class="headerlink" title="原码、反码、补码"></a><font color = "#ff0000">原码、反码、补码</font></h3><ol>
<li>二进制的最高位表示符号位：0表示正数，1表示负数</li>
<li>正数的原码、反码、补码都一样</li>
<li>负数的反码 &#x3D; 符号位不变其余位取反</li>
<li>负数的补码 &#x3D; 负数的反码 + 1 负数的反码 &#x3D; 负数的补码 - 1 </li>
<li>0的反码和补码都是0</li>
<li>java没有无符号数，换言之，java中的数都是有符号的</li>
<li>计算机运算的时候都是以补码放方式进行运算的</li>
<li>当我们看运行结果的时候，需要看他的原码（！！！）</li>
</ol>
<h3 id="进制问题"><a href="#进制问题" class="headerlink" title="进制问题"></a>进制问题</h3><h4 id="表示"><a href="#表示" class="headerlink" title="表示"></a>表示</h4><p>2进制：0b1011010</p>
<p>8进制：05512</p>
<p>16进制：0x1dabb &#x2F;  0X1daabb</p>
<h4 id="转化"><a href="#转化" class="headerlink" title="转化"></a>转化</h4><h3 id="数组扩容"><a href="#数组扩容" class="headerlink" title="数组扩容"></a>数组扩容</h3><h3 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h3><ol>
<li>概念：Java DataBase Connectivity Java 数据库连接，Java语言操作数据库<ul>
<li>JDBC本质：其实是官方（sun公司）定义的一套操作所有关系型数据库的规则，即接口。各个数据库厂商去实现这套接口，提供数据库驱动jar包。我们可以使用这套接口（JDBC）编程，真正执行的代码是驱动jar包中的实现类</li>
</ul>
</li>
<li>快速入门<ul>
<li>步骤：<ol>
<li>导入驱动jar包<ol>
<li>复制mysql-connector-java-8.0.26.jar到项目的libs目录下</li>
<li>右键选择add as library</li>
</ol>
</li>
<li>注册驱动</li>
<li>获取数据库连接对象 Connection</li>
<li>定义sql</li>
<li>获取执行sql语句的对象 Statement</li>
<li>执行sql，接受返回操作</li>
<li>处理结果</li>
<li>释放内存</li>
</ol>
</li>
</ul>
</li>
</ol>
<h3 id="XML"><a href="#XML" class="headerlink" title="XML"></a>XML</h3><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><ol>
<li><p>概念：Extensible Markup Language 可扩展标记语言</p>
<ul>
<li>可扩展：标签都是自定义的。<user> <student></li>
</ul>
</li>
<li><p>功能</p>
<ul>
<li>存储数据<ol>
<li>配置文件</li>
<li>在网络中传输</li>
</ol>
</li>
</ul>
</li>
<li><p>xml与html的区别</p>
<ol>
<li>xml标签都是自定义，html标签是预定义</li>
<li>xml的语法严格，html的语法松散</li>
<li>xml用于存储数据，html用于展示数据</li>
</ol>
<p>两者都是w3c(万维网联盟)</p>
</li>
</ol>
<h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><ul>
<li><p>基本语法</p>
<ol>
<li>第一行必须是文档声明，空行都不行</li>
<li>xml文档中有且只有一个根标签</li>
<li>属性值必须用引号引起来（单双都可以）</li>
<li>文件结尾必须以.xml结尾</li>
<li>标签必须正确关闭（&lt;name&gt;&lt;&#x2F;name&gt; or &lt;br&#x2F;&gt;）</li>
<li>xml的标签名称区分大小写</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&#x27;1.0&#x27; ?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">users</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">user</span> <span class="attr">id</span>=<span class="string">&#x27;1&#x27;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>zhangsan<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">age</span>&gt;</span>23<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">gender</span>&gt;</span>male<span class="tag">&lt;/<span class="name">gender</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">user</span> <span class="attr">id</span>=<span class="string">&#x27;2&#x27;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>lisi<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">age</span>&gt;</span>24<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">gender</span>&gt;</span>female<span class="tag">&lt;/<span class="name">gender</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">users</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>组成部分</p>
<ol>
<li><p>文档声明</p>
<ol>
<li><p>格式:&lt;?xml 属性列表 ?&gt;</p>
</li>
<li><p>属性列表：</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>version</td>
<td>版本号（必须有）</td>
</tr>
<tr>
<td>encoding</td>
<td>编码方式</td>
</tr>
<tr>
<td>standalone</td>
<td>是否独立（yes&#x2F;no）</td>
</tr>
</tbody></table>
</li>
</ol>
</li>
<li><p>指令(了解即可)</p>
<p>结合CSS的：&lt;?xml-stylesheet trpe&#x3D;”text&#x2F;css” href&#x3D;”a.css” ?&gt;</p>
<p>xml文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&#x27;1.0&#x27; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml-stylesheet trpe=<span class="string">&quot;text/css&quot;</span> href=<span class="string">&quot;a.css&quot;</span> ?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">users</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">user</span> <span class="attr">id</span>=<span class="string">&#x27;1&#x27;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>zhangsan<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">age</span>&gt;</span>23<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">gender</span>&gt;</span>male<span class="tag">&lt;/<span class="name">gender</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">user</span> <span class="attr">id</span>=<span class="string">&#x27;2&#x27;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>lisi<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">age</span>&gt;</span>24<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">gender</span>&gt;</span>female<span class="tag">&lt;/<span class="name">gender</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">users</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>a.css文件</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">name&#123;</span><br><span class="line">	<span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


</li>
<li><p>标签:标签名称自定义的</p>
<ul>
<li>规则<ol>
<li>名称可以包含字母、数字以及其他字符</li>
<li>名称不能以数字或者标点符号开始</li>
<li>名称不能以字母 xml(或者XML、Xml 等等)开始</li>
<li>名称不能包含空格</li>
</ol>
</li>
</ul>
</li>
<li><p>属性</p>
<p>id属性值唯一</p>
</li>
<li><p>文本</p>
<p>注释方式和html一样</p>
<ul>
<li><p>CDATA区：在改区域中的数据会被原样展示</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">user</span> <span class="attr">id</span>=<span class="string">&#x27;2&#x27;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>lisi<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">age</span>&gt;</span>24<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">gender</span>&gt;</span>female<span class="tag">&lt;/<span class="name">gender</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    &lt;![CDATA[</span><br><span class="line">    	if (a &lt; b &amp;&amp; a &gt; c)&#123;&#125;</span><br><span class="line">    ]]&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ol>
<ul>
<li><p>约束：规定在xml文档的书写规则</p>
<ul>
<li><p>分类</p>
<ol>
<li>DTD：一种简单的约束技术</li>
<li>Schema：一种复杂的约束技术</li>
</ol>
</li>
<li><p>DTD：</p>
<p>引入dtd文档到xml文档中</p>
<ul>
<li><p>内部dtd：将约束规则定义在xml文档中</p>
<p>内部：&lt;!DOCTYPE 根标签名 [ 约束内容 ] SYSTEM “dtd文件的位置”&gt;</p>
</li>
<li><p>外部dtd：将约束规则定义在外部的dtd文件中</p>
<ul>
<li>本地：&lt;!DOCTYPE 根标签名 SYSTEM “dtd文件的位置”&gt;</li>
<li>网络：&lt;!DOCTYPE 根标签名 PUBLIC “dtd文件名字” “dtd文件的位置URL”&gt;</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h4><p>操作xml文档，将文档中的数据读取到内存中</p>
<ul>
<li>操作xml文档<ol>
<li>解析（读取）：将文档中的数据读取到内存中</li>
<li>写入：将内存中的数据保存到xml文档中。持久化的存储</li>
</ol>
</li>
<li>解析xml的方式<ol>
<li>DOM：将标记语言加载进内存，在内存中形成一颗dom树<ul>
<li>优点：操作方便，可以对文档进行CRUD的所有操作</li>
<li>缺点：占内存</li>
</ul>
</li>
<li>SAX：逐行读取，基于时间驱动。<ul>
<li>优点：不占内存</li>
<li>缺点：只能读取，不能增删改</li>
</ul>
</li>
</ol>
</li>
<li>xml常见的解析器<ol>
<li>JAXP：sun公司提供的解析器，支持dom和sax两种思想</li>
<li>DOM4J：一款非常优秀的解析器</li>
<li>Jsoup：java的HTML解析器，可以直接解析（URL、html等）<ul>
<li>快速入门<ul>
<li>步骤<ol>
<li>导入jar包</li>
<li>获取Document对象</li>
<li>获取对应的标签Element对象</li>
<li>获取数据</li>
</ol>
</li>
</ul>
</li>
</ul>
</li>
<li>PULL：Android操作系统内置的解析器（sax方式的）</li>
</ol>
</li>
</ul>
<h3 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h3><h3 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h3><p><img src="https://cdn.jsdelivr.net/gh/Nov8nana/pic-cdn@f764933c3477e95cc2e4541b64da4da67009d4b1/2021/09/25/aa4a1d849fead6799e36eb2010d727f8.png"></p>
<h4 id="获取Class对象的方式"><a href="#获取Class对象的方式" class="headerlink" title="获取Class对象的方式"></a>获取Class对象的方式</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Class.forName(<span class="string">&quot;全类名&quot;</span>);<span class="comment">//将字节码文件加载进内存，返回Class对象</span></span><br><span class="line">XX.class;<span class="comment">//通过类名XX的属性class获取</span></span><br><span class="line">XX.getClass();<span class="comment">//getClass()方法在Object类中定义XX表示对象</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*具体效果*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//1.Class.forName(&quot;全类名&quot;) 多用于配置文件，将类定义在配置文件中。读取文件，加载类</span></span><br><span class="line"><span class="type">Class</span> <span class="variable">cls1</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;cn.itcase.domain.Person&quot;</span>);</span><br><span class="line">System.out.println(cls1);</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.类名.class 多用于参数的传递</span></span><br><span class="line"><span class="type">Class</span> <span class="variable">cls2</span> <span class="operator">=</span> Person.class;</span><br><span class="line">System.out.println(cls2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.对象.getClass()  多用于对象的获取字节码的方式</span></span><br><span class="line"><span class="type">Person</span> <span class="variable">p</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line"><span class="type">Class</span> <span class="variable">cls3</span> <span class="operator">=</span> p.getClass();</span><br><span class="line">System.out.println(cls3);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">P.S. 同一个对象获取的Class值相同</span></span><br><span class="line"><span class="comment">     不同对象所获取的Class值不相同</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h4 id="Class对象功能"><a href="#Class对象功能" class="headerlink" title="Class对象功能"></a>Class对象功能</h4><ul>
<li><p>获取功能</p>
<ol>
<li>获取成员变量们<ul>
<li>Field[] getFields() &#x2F;&#x2F;获取所有public的成员变量</li>
<li>Field getField(String name) &#x2F;&#x2F;获取传入String的public成员变量</li>
<li>Field[] getDeclareFields() &#x2F;&#x2F;获取所有成员变量(包括其中private、protect等)</li>
<li>Field getDeclareFiled(String name) &#x2F;&#x2F;获取传入String的(包括其中private、protect等)</li>
</ul>
</li>
<li>获取构造方法们<ul>
<li>Constructor[] getConstructors()</li>
<li>Constructor getConstructor(类….parameterTypes)</li>
<li>Constructor[] getDeclaredConstructors()</li>
<li>Constructor getDeclaredConstructor(类….parameterTypes)</li>
</ul>
</li>
<li>获取成员方法们<ul>
<li>Method[] getMethods()</li>
<li>Method getMethod(String name,类… parameterTypes)</li>
<li>Method[] getDeclaredMethods()</li>
<li>Method getDeclaredMethod(String name,类… parameterTypes)</li>
</ul>
</li>
<li>获取类名<ul>
<li>String.getName();</li>
</ul>
</li>
</ol>
</li>
<li><p>Field : 成员变量</p>
<ul>
<li><p>操作</p>
<ol>
<li>设置值<ul>
<li>void set(Object obj, Object value)</li>
</ul>
</li>
<li>获取值<ul>
<li>get(Object obj)</li>
</ul>
</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Field</span> <span class="variable">a</span> <span class="operator">=</span> personClass.getField(<span class="string">&quot;a&quot;</span>);</span><br><span class="line"><span class="comment">//设置值</span></span><br><span class="line"><span class="comment">//这里需要注意，如果说设定的值为private类型等，那么前面的getField变成getDeclareField</span></span><br><span class="line"><span class="comment">//并且加上这么一句</span></span><br><span class="line"><span class="comment">//a.setAccessible(true);即可防止报错</span></span><br><span class="line">a.set(p.<span class="string">&quot;张三&quot;</span>); </span><br><span class="line">System.out.println(p)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//获取值</span></span><br><span class="line"><span class="type">Person</span> <span class="variable">p</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line"><span class="type">Object</span> <span class="variable">value</span> <span class="operator">=</span> a.get(p);</span><br><span class="line">System.out.println(value);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>软件学习</category>
        <category>JAVA</category>
        <category>JAVASE</category>
        <category>语言学习</category>
      </categories>
      <tags>
        <tag>软件学习笔记</tag>
        <tag>JAVA</tag>
        <tag>JAVASE</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript</title>
    <url>/2021/07/28/JavaScript/</url>
    <content><![CDATA[<h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><p>控制页面特效。象征前端的大脑和灵魂。WEB的脚本语言。</p>
<p>简单描述就是页面的特效展示。</p>
<p>脚本语言：无法独立执行，必须嵌入到其他语言中编译执行。</p>
<h2 id="语言特征及编程注意事项"><a href="#语言特征及编程注意事项" class="headerlink" title="语言特征及编程注意事项"></a>语言特征及编程注意事项</h2><ul>
<li>JavaScript 无需编译，直接被浏览器解释并执行</li>
<li>JavaScript无法单独运行，必须嵌入到HTML代码中运行</li>
<li>JavaScript的执行过程由上到下依次执行</li>
<li>JavaScript没有访问系统文件的权限</li>
<li>由于JavaScript无需要编译，是由上到下依次编译执行，在保证可读性的情况下，允许使用链式编程</li>
<li>JavaScript和java没有半毛钱关系</li>
</ul>
<h2 id="JavaScript的组成部分"><a href="#JavaScript的组成部分" class="headerlink" title="JavaScript的组成部分"></a>JavaScript的组成部分</h2><ul>
<li>ECMAScript (核心)：规定了JS的<strong>语法和基本对象</strong>。</li>
<li>DOM：文档对象模型：<strong>处理网页内容</strong>的方法和接口标记型文档。HTML</li>
<li>BOM：浏览器对象模型：与浏览器交互的方法和接口</li>
</ul>
<h2 id="JavaScript的引入方式"><a href="#JavaScript的引入方式" class="headerlink" title="JavaScript的引入方式"></a>JavaScript的引入方式</h2><h3 id="内部脚本"><a href="#内部脚本" class="headerlink" title="内部脚本"></a>内部脚本</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;我无敌！&quot;</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>



<h3 id="外部引入"><a href="#外部引入" class="headerlink" title="外部引入"></a>外部引入</h3><p>text.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;我无敌！&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>text.html</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;text.js&quot;</span>&gt;</span><br><span class="line">        </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>



<h3 id="规范化的放置"><a href="#规范化的放置" class="headerlink" title="规范化的放置"></a>规范化的放置</h3><p>放置在body结束之前</p>
<p>为了用户的快速响应的体验效果</p>
<h2 id="JavaScript语法及规则"><a href="#JavaScript语法及规则" class="headerlink" title="JavaScript语法及规则"></a>JavaScript语法及规则</h2><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><ul>
<li><p>单行注释   &#x2F;&#x2F;</p>
<p>CTRL+ &#x2F;</p>
</li>
<li><p>多行注释   &#x2F;* *&#x2F;</p>
<p>CRTL+SHIFT+ &#x2F;</p>
</li>
</ul>
<h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>变量如果没有声明就不能用</p>
<h4 id="变量的声明"><a href="#变量的声明" class="headerlink" title="变量的声明"></a>变量的声明</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> bianliang;</span><br><span class="line"><span class="comment">// 变量的类型为undefined 并且值为undefined</span></span><br></pre></td></tr></table></figure>

<h4 id="变量的声明和赋值"><a href="#变量的声明和赋值" class="headerlink" title="变量的声明和赋值"></a>变量的声明和赋值</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> bianliang = <span class="number">10</span>;</span><br><span class="line"><span class="comment">// 变量赋予对应的值</span></span><br></pre></td></tr></table></figure>

<h4 id="基本规范"><a href="#基本规范" class="headerlink" title="基本规范"></a>基本规范</h4><ul>
<li>必须以字母或下划线开头，中间可以是数字、字符或下划线</li>
<li>变量名不能包含空格等符号</li>
<li>不能使用JavaScript关键字作为变量名，如：function、this、class</li>
<li>严格区分大小写</li>
</ul>
<h4 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h4><table>
<thead>
<tr>
<th>数据类型</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>string</td>
<td>字符串类型””和’’都是字符串，没有单个字符</td>
</tr>
<tr>
<td>boolean</td>
<td>布尔类型，固定值为true和false</td>
</tr>
<tr>
<td>number</td>
<td>数字类型，任意数字(正负，整、小数)</td>
</tr>
<tr>
<td>null</td>
<td>空，一个占位符</td>
</tr>
<tr>
<td>undefined</td>
<td>未定义类型，只有一个固定值undefined</td>
</tr>
</tbody></table>
<p>通过 typeof() 来显示变量的数据类型。</p>
<p>null数据类型返回object，其余的数据类型返回值都为原先的数据类型。</p>
<h4 id="引用数据类型"><a href="#引用数据类型" class="headerlink" title="引用数据类型"></a>引用数据类型</h4><p>所处理的引用数据类型都是<strong>对象</strong></p>
<p>标准创建方式</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="title function_">newString</span>(); <span class="comment">//和java相同</span></span><br><span class="line"><span class="keyword">var</span> str = newString;   <span class="comment">//js独有的方式</span></span><br></pre></td></tr></table></figure>

<h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><p>JavaScript中只有&amp;&amp;和||不存在单个的&amp;和|运算符</p>
<h3 id="正则对象"><a href="#正则对象" class="headerlink" title="正则对象"></a>正则对象</h3><h4 id="RegExp对象"><a href="#RegExp对象" class="headerlink" title="RegExp对象"></a>RegExp对象</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&quot;表达式&quot;</span>); <span class="comment">//开发中基本不用（因为太麻烦）</span></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^表达式$/</span>;           <span class="comment">//开发中常用 直接量</span></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/表达式/</span>；            <span class="comment">//普通量方式</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>直接量中存在边界^代表开始；$代表结束</p>
<p>直接量的方式的正则是对象，不是字符串，不能用引号</p>
<p>直接量方式必须全部满足才可以为true 检查严格，适用于表单校验</p>
<p>普通量方式只要存在成立正则的字符就为true，检查不严格，适用于字符串查找</p>
<h4 id="test方法"><a href="#test方法" class="headerlink" title="test方法"></a>test方法</h4><p>通过reg.test(“”);可以拿来判断是否符合正则的规则</p>
<h3 id="JS数组对象"><a href="#JS数组对象" class="headerlink" title="JS数组对象"></a>JS数组对象</h3><h4 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h4><p><font color = #ff2500>JS数组可以看做是Java中的Arraylist集合</font></p>
<ul>
<li>数组中的每一个成员没有类型限制，及可以存放任意类型</li>
<li>数组的长度可以自动修改</li>
</ul>
<h4 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h4><ol>
<li><font color = #ff4400>var arr &#x3D;[1,2,3,”a”,true]; &#x2F;&#x2F;常用的JS数组。 长度为5</font></li>
<li><font color = #ff4400>var arr &#x3D;newArray();创建一个数组对象。数组长度默认为0</font></li>
<li>var arr &#x3D;newArray(4);创建一个长度为4的数组，其中每个元素都是undefined(仅仅在显示数组时进行处理)</li>
<li>var arr &#x3D; newArray(1,2，”a”); &#x2F;&#x2F;创建了一个数组，数组元素为1,2</li>
</ol>
<h3 id="自定义函数-x2F-方法"><a href="#自定义函数-x2F-方法" class="headerlink" title="自定义函数&#x2F;方法"></a>自定义函数&#x2F;方法</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//自定义函数/方法的创建</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">addthings</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">var</span> b = <span class="number">20</span>;</span><br><span class="line">    <span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="自定义对象"><a href="#自定义对象" class="headerlink" title="自定义对象"></a>自定义对象</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//自定义对象的创建</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = <span class="string">&quot;虞程龙&quot;</span>；</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">age</span> = <span class="number">18</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">sex</span> = <span class="string">&quot;男&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="自定义对象直接量"><a href="#自定义对象直接量" class="headerlink" title="自定义对象直接量"></a>自定义对象直接量</h4><p>格式：</p>
<p>var 对象名 &#x3D;{属性名1：”属性值1”，属性名2：”属性值2”……};</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">Person</span> = &#123;<span class="attr">name</span>:<span class="string">&quot;虞程龙&quot;</span>，<span class="attr">age</span>:<span class="number">18</span>,<span class="attr">sex</span>:<span class="string">&quot;男&quot;</span>&#125;;</span><br><span class="line"><span class="comment">//或者直接操作</span></span><br><span class="line"><span class="title class_">Person</span>.<span class="property">height</span> = <span class="number">173</span>;</span><br></pre></td></tr></table></figure>

<h2 id="BOM对象"><a href="#BOM对象" class="headerlink" title="BOM对象"></a>BOM对象</h2><p>BOM指的是浏览器对象模型或者称为windows对象。</p>
<h3 id="消息框"><a href="#消息框" class="headerlink" title="消息框"></a>消息框</h3><h4 id="警告框alert-“”"><a href="#警告框alert-“”" class="headerlink" title="警告框alert(“”);"></a>警告框alert(“”);</h4><h4 id="确认框confirm-“”"><a href="#确认框confirm-“”" class="headerlink" title="确认框confirm(“”);"></a>确认框confirm(“”);</h4><p>确认框存在返回值，点击确定返回值为true，点击取消返回值为false。</p>
<h3 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h3><h4 id="循环定时器"><a href="#循环定时器" class="headerlink" title="循环定时器"></a>循环定时器</h4><h5 id="启动循环计时器-setInterval"><a href="#启动循环计时器-setInterval" class="headerlink" title="启动循环计时器-setInterval()"></a>启动循环计时器-setInterval()</h5><p>格式：</p>
<p>setInterval(“调用方法”，毫秒值);</p>
<p>毫秒值：循环周期</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">run1</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;run1&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">setInterval</span>(<span class="string">&quot;run1()&quot;</span>,<span class="number">2000</span>);</span><br></pre></td></tr></table></figure>

<h5 id="取消循环计时器-clearInterval"><a href="#取消循环计时器-clearInterval" class="headerlink" title="取消循环计时器-clearInterval()"></a>取消循环计时器-clearInterval()</h5><p>需要返回计时器的ID</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">run1</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;run1&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> iid = <span class="built_in">setInterval</span>(<span class="string">&quot;run1()&quot;</span>,<span class="number">2000</span>);</span><br><span class="line"><span class="title function_">clearIntercal</span>(iid);</span><br></pre></td></tr></table></figure>

<h4 id="一次性定时器"><a href="#一次性定时器" class="headerlink" title="一次性定时器"></a>一次性定时器</h4><h5 id="启动一次性定时器-setTimeout"><a href="#启动一次性定时器-setTimeout" class="headerlink" title="启动一次性定时器-setTimeout()"></a>启动一次性定时器-setTimeout()</h5><p>格式：</p>
<p>setTimeout(调用方法，毫秒值);</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">run1</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;我是run1&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="string">&quot;run1()&quot;</span>,<span class="number">1000</span>);</span><br></pre></td></tr></table></figure>

<h5 id="取消一次性定时器-clearTimeout"><a href="#取消一次性定时器-clearTimeout" class="headerlink" title="取消一次性定时器-clearTimeout()"></a>取消一次性定时器-clearTimeout()</h5><p>方法和取消循环计时器一样，()里需要id才能取消。</p>
<h3 id="location-对象"><a href="#location-对象" class="headerlink" title="location 对象"></a>location 对象</h3><p>href : 设置或者返回当前的URL</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//设置URL地址（即跳转到设置的网页上）</span></span><br><span class="line">location.<span class="property">href</span> = <span class="string">&quot;http://www.baidu.com&quot;</span>;</span><br><span class="line"><span class="comment">//获取URL</span></span><br><span class="line"><span class="keyword">var</span> c = location.<span class="property">href</span>;</span><br></pre></td></tr></table></figure>

<h2 id="DOM对象"><a href="#DOM对象" class="headerlink" title="DOM对象"></a>DOM对象</h2><p>DOM 文档对象模型</p>
<p>文档：标记型文档（HTML等）</p>
<p>DOM 是将标记型文档中所有内容（标签、文本、属性）都封装成对象，通过操作对象的属性或者方法，来达到操作或者改变HTML展示的效果的目的。</p>
<h3 id="获取元素对象的四种方式"><a href="#获取元素对象的四种方式" class="headerlink" title="获取元素对象的四种方式"></a>获取元素对象的四种方式</h3><p>在JavaScript中，我们可以通过DOM对象的4种方式获取的对应的元素对象：</p>
<ul>
<li>getElementByld();        通过元素ID获取对应元素对象，找不到返回null</li>
<li>getElementByName();  通过元素的name属性获取符合要求的所有元素</li>
<li>getElementByTagName(); 通过元素的元素名属性获取符合要求的所有元素</li>
<li>getElementByClassName();  通过元素的class属性获取符合要求的所有元素</li>
</ul>
<h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><p>获取的元素节点对象，必须保证元素节点对象已经被加载到内存中。</p>
<h3 id="元素对象常见属性"><a href="#元素对象常见属性" class="headerlink" title="元素对象常见属性"></a>元素对象常见属性</h3><h4 id="value"><a href="#value" class="headerlink" title="value"></a>value</h4><p>元素对象.value，获取元素对象的value属性值。</p>
<p>元素对象.value&#x3D;属性值     设置元素对象的value属性值</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;t1&quot;</span> <span class="attr">value</span> =<span class="string">&quot;你好&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//取用value属性值</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> t1 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;t1&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">alert</span>(t1.<span class="property">value</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//修改value属性值</span></span></span><br><span class="line"><span class="language-javascript">    t1.<span class="property">value</span>=<span class="string">&quot;你好么&quot;</span>；</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h4 id="className"><a href="#className" class="headerlink" title="className"></a>className</h4><p>元素对象.className，获取元素对象的class属性值。</p>
<p>元素对象.className &#x3D; 属性值  设置元素对象的class属性值</p>
<h4 id="checked"><a href="#checked" class="headerlink" title="checked"></a>checked</h4><p>元素对象.checked，获取元素对象的checked属性值。</p>
<p>元素对象.checked &#x3D; 属性值  设置元素对象的checked属性值(html中用true和false表示是否选中)</p>
<p>innerHTML</p>
<p>元素对象.innerHTML 获取元素对象</p>
<p>元素对象.innerHTML &#x3D; 属性值  </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span> = <span class="string">&quot;s1&quot;</span>&gt;</span></span><br><span class="line">    今天天气好晴朗</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//获取span标签内的内容体</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> s1 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;s1&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">alert</span>(s1.<span class="property">innerHTML</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//设置span标签的内容体 今天好像要下雪</span></span></span><br><span class="line"><span class="language-javascript">    s1.<span class="property">innerHTML</span> = <span class="string">&quot;今天好像要下雪&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//向span标签内追加信息 ，今天0度</span></span></span><br><span class="line"><span class="language-javascript">    s1.<span class="property">innerHTML</span> += <span class="string">&quot;，今天0度&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="JS事件"><a href="#JS事件" class="headerlink" title="JS事件"></a>JS事件</h2><h3 id="常见JS事件"><a href="#常见JS事件" class="headerlink" title="常见JS事件"></a>常见JS事件</h3><table>
<thead>
<tr>
<th>事件代码</th>
<th>事件</th>
</tr>
</thead>
<tbody><tr>
<td>onclick</td>
<td>点击事件</td>
</tr>
<tr>
<td>onfocus</td>
<td>元素组件获取焦点</td>
</tr>
<tr>
<td>onblur</td>
<td>失去焦点事件</td>
</tr>
<tr>
<td>onchange</td>
<td>域内容改变事件值发生改变</td>
</tr>
<tr>
<td>onload</td>
<td>元素组件加载完毕</td>
</tr>
<tr>
<td>onsubmit</td>
<td>表单的提交按钮被点击时触发</td>
</tr>
<tr>
<td>onkeyup</td>
<td>键位弹起事件(键盘)</td>
</tr>
<tr>
<td>onmouseover</td>
<td>鼠标移入事件</td>
</tr>
<tr>
<td>onmouseout</td>
<td>鼠标移除事件</td>
</tr>
</tbody></table>
<h3 id="JS事件的绑定"><a href="#JS事件的绑定" class="headerlink" title="JS事件的绑定"></a>JS事件的绑定</h3><p>onclick &#x3D; “run1(),run2()”;</p>
<ul>
<li>开发方便</li>
<li>传参方便</li>
<li>可以绑定多个函数</li>
</ul>
<h4 id="DOM方式绑定"><a href="#DOM方式绑定" class="headerlink" title="DOM方式绑定"></a>DOM方式绑定</h4><p>window.onload&#x3D;run1;</p>
<p>window.onload&#x3D;function(){</p>
<p>​       run1();</p>
<p>​       run2();</p>
<p>};</p>
]]></content>
      <categories>
        <category>软件学习</category>
        <category>网页</category>
        <category>前端</category>
        <category>JavaScript学习笔记</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>前端</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaWeb第一次作业</title>
    <url>/2022/03/16/JavaWeb%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%BD%9C%E4%B8%9A/</url>
    <content><![CDATA[<h1 id="JavaWeb第一次作业"><a href="#JavaWeb第一次作业" class="headerlink" title="JavaWeb第一次作业"></a>JavaWeb第一次作业</h1><p><a href="Web%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%BD%9C%E4%B8%9A.zip" title="第一次作业压缩包">点击下载</a></p>
<p>ps</p>
<p>记得修改页面的title改成自己的名字！！！</p>
]]></content>
      <categories>
        <category>课程作业</category>
        <category>JavaWeb</category>
        <category>JavaWeb第一次作业</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux宝典</title>
    <url>/2022/04/24/Linux%E5%AE%9D%E5%85%B8/</url>
    <content><![CDATA[<h1 id="Linux个人宝典资料合集"><a href="#Linux个人宝典资料合集" class="headerlink" title="Linux个人宝典资料合集"></a>Linux个人宝典资料合集</h1><ul>
<li>学习路线</li>
</ul>
<p><img src="https://s3.bmp.ovh/imgs/2022/05/11/28f48e366401c7cf.png" alt="img"></p>
<h2 id="基本知识"><a href="#基本知识" class="headerlink" title="基本知识"></a>基本知识</h2><h3 id="内建命令与外部命令"><a href="#内建命令与外部命令" class="headerlink" title="内建命令与外部命令"></a>内建命令与外部命令</h3><blockquote>
<p><strong>内建命令</strong>实际上是 shell 程序的一部分，其中包含的是一些比较简单的 Linux 系统命令，这些命令是写在 bash 源码的 builtins 里面的，由 shell 程序识别并在 shell 程序内部完成运行，通常在 Linux 系统加载运行时 shell 就被加载并驻留在系统内存中。而且解析内部命令 shell 不需要创建子进程，因此其执行速度比外部命令快。比如：history、cd、exit 等等。</p>
<p>可以用help + 命令来看所有内建命令的帮助信息</p>
</blockquote>
<blockquote>
<p><strong>外部命令</strong>是 Linux 系统中的实用程序部分，因为实用程序的功能通常都比较强大，所以其包含的程序量也会很大，在系统加载时并不随系统一起被加载到内存中，而是在需要时才将其调入内存。虽然其不包含在 shell 中，但是其命令执行过程是由 shell 程序控制的。外部命令是在 Bash 之外额外安装的，通常放在&#x2F;bin，&#x2F;usr&#x2F;bin，&#x2F;sbin，&#x2F;usr&#x2F;sbin 等等。比如：ls、vi 等。</p>
<p>可以用命令 + –help 来获取外部命令的帮助信息</p>
</blockquote>
<p>用于区分类型的命令为：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">type</span> <span class="built_in">exit</span></span><br><span class="line"><span class="built_in">type</span> vim</span><br><span class="line"><span class="built_in">type</span> <span class="built_in">ls</span></span><br><span class="line">/*</span><br><span class="line"><span class="comment">#得到这样的结果说明是内建命令，正如上文所说内建命令都是在 bash 源码中的 builtins 的.def中</span></span><br><span class="line">xxx is a shell <span class="built_in">builtin</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#得到这样的结果说明是外部命令，正如上文所说，外部命令在/usr/bin or /usr/sbin等等中</span></span><br><span class="line">xxx is /usr/bin/xxx</span><br><span class="line"></span><br><span class="line"><span class="comment">#若是得到alias的结果，说明该指令为命令别名所设定的名称；</span></span><br><span class="line">xxx is an <span class="built_in">alias</span> <span class="keyword">for</span> xx --xxx</span><br><span class="line">*</span><br></pre></td></tr></table></figure>

<h3 id="FHS标准"><a href="#FHS标准" class="headerlink" title="FHS标准"></a>FHS标准</h3><blockquote>
<p>FHS（英文：Filesystem Hierarchy Standard 中文：文件系统层次结构标准），多数 Linux 版本采用这种文件组织形式，FHS 定义了系统中每个区域的用途、所需要的最小构成的文件和目录同时还给出了例外处理与矛盾处理。</p>
</blockquote>
<p><img src="https://i.bmp.ovh/imgs/2021/04/c6f535136315b734.png" alt="img"></p>
<p>关于上面提到的 FHS，这里还有个很重要的内容你一定要明白，FHS 是根据以往无数 Linux 用户和开发者的经验总结出来的，并且会维持更新，FHS 依据文件系统使用的频繁与否以及是否允许用户随意改动（注意，不是不能，学习过程中，不要怕这些），将目录定义为四种交互作用的形态，如下表所示：</p>
<p><img src="https://s3.bmp.ovh/imgs/2022/05/11/c21e44019e785e84.png" alt="img"></p>
<h3 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h3><p> Linux 默认提供了三个特殊设备，用于终端的显示和输出，分别为<code>stdin</code>（标准输入,对应于你在终端的输入），<code>stdout</code>（标准输出，对应于终端的输出），<code>stderr</code>（标准错误输出，对应于终端的输出）。</p>
<table>
<thead>
<tr>
<th>文件描述符</th>
<th>设备文件</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>0</code></td>
<td><code>/dev/stdin</code></td>
<td>标准输入</td>
</tr>
<tr>
<td><code>1</code></td>
<td><code>/dev/stdout</code></td>
<td>标准输出</td>
</tr>
<tr>
<td><code>2</code></td>
<td><code>/dev/stderr</code></td>
<td>标准错误</td>
</tr>
</tbody></table>
<blockquote>
<p>文件描述符：文件描述符在形式上是一个非负整数。实际上，它是一个索引值，指向内核为每一个进程所维护的该进程打开文件的记录表。当程序打开一个现有文件或者创建一个新文件时，内核向进程返回一个文件描述符。在程序设计中，一些涉及底层的程序编写往往会围绕着文件描述符展开。但是文件描述符这一概念往往只适用于 UNIX、Linux 这样的操作系统。</p>
</blockquote>
<h4 id="标准输出-重定向符-gt-gt-gt-lt-lt-lt"><a href="#标准输出-重定向符-gt-gt-gt-lt-lt-lt" class="headerlink" title="标准输出 | 重定向符 &gt;,&gt;&gt;,&lt;,&lt;&lt;"></a>标准输出 | 重定向符 &gt;,&gt;&gt;,&lt;,&lt;&lt;</h4><p><em>&gt;会覆盖目标的原有内容。当文件存在时会先删除原文件，再重新创建文件，然后把内容写入该文件；否则直接创建文件</em>。</p>
<p><em>&gt;&gt;会在目标原有内容后追加内容。当文件存在时直接在文件末尾进行内容追加，不会删除原文件；否则直接创建文件。</em></p>
<h4 id="标准错误的重定向"><a href="#标准错误的重定向" class="headerlink" title="标准错误的重定向"></a>标准错误的重定向</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将标准错误重定向到标准输出，再将标准输出重定向到文件，注意要将重定向到文件写到前面</span></span><br><span class="line"><span class="built_in">cat</span> Documents/test.c hello.c &gt;somefile  2&gt;&amp;1</span><br><span class="line"><span class="comment"># 或者只用bash提供的特殊的重定向符号&quot;&amp;&quot;将标准错误和标准输出同时重定向到文件</span></span><br><span class="line"><span class="built_in">cat</span> Documents/test.c hello.c &amp;&gt;somefilehell</span><br></pre></td></tr></table></figure>

<h4 id="永久重定向"><a href="#永久重定向" class="headerlink" title="永久重定向"></a>永久重定向</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 先开启一个子 Shell</span></span><br><span class="line">zsh</span><br><span class="line"><span class="comment"># 使用exec替换当前进程的重定向，将标准输出重定向到一个文件</span></span><br><span class="line"><span class="built_in">exec</span> 1&gt;somefile</span><br><span class="line"><span class="comment"># 后面你执行的命令的输出都将被重定向到文件中,直到你退出当前子shell，或取消exec的重定向（后面将告诉你怎么做）</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="built_in">cat</span> somefile</span><br></pre></td></tr></table></figure>

<p><img src="https://i.bmp.ovh/imgs/2022/05/17/ceec156ad37d5b64.png" alt="样例"></p>
<h4 id="创建输出文件描述符"><a href="#创建输出文件描述符" class="headerlink" title="创建输出文件描述符"></a>创建输出文件描述符</h4><p>在 Shell 中有 9 个文件描述符。上面我们使用了也是它默认提供的 0,1,2 号文件描述符。另外我们还可以使用 3-8 的文件描述符，只是它们默认没有打开而已。你可以使用下面命令查看当前 Shell 进程中打开的文件描述符：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /dev/fd/</span><br><span class="line"><span class="built_in">ls</span> -Al</span><br></pre></td></tr></table></figure>

<p>同样使用<code>exec</code>命令可以创建新的文件描述符</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">zsh</span><br><span class="line"><span class="built_in">exec</span> 3&gt;somefile</span><br><span class="line"><span class="comment"># 先进入目录，再查看，否则你可能不能得到正确的结果，然后再回到上一次的目录</span></span><br><span class="line"><span class="built_in">cd</span> /dev/fd/;<span class="built_in">ls</span> -Al;<span class="built_in">cd</span> -</span><br><span class="line"><span class="comment"># 注意下面的命令&gt;与&amp;之间不应该有空格，如果有空格则会出错</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;this is test&quot;</span> &gt;&amp;3</span><br><span class="line"><span class="built_in">cat</span> somefile</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure>

<h4 id="关闭文件描述符"><a href="#关闭文件描述符" class="headerlink" title="关闭文件描述符"></a>关闭文件描述符</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">exec</span> 3&gt;&amp;-</span><br><span class="line"><span class="built_in">cd</span> /dev/fd;<span class="built_in">ls</span> -Al;<span class="built_in">cd</span> -</span><br></pre></td></tr></table></figure>

<h4 id="完全屏蔽命令的输出"><a href="#完全屏蔽命令的输出" class="headerlink" title="完全屏蔽命令的输出"></a>完全屏蔽命令的输出</h4><p>我们可以利用<code>/dev/null</code>屏蔽命令的输出：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> Documents/test.c 1&gt;/dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure>

<p>上面这样的操作将使你得不到任何输出结果。</p>
<h3 id="组合命令小要点"><a href="#组合命令小要点" class="headerlink" title="组合命令小要点"></a>组合命令小要点</h3><h4 id="顺序执行多条命令"><a href="#顺序执行多条命令" class="headerlink" title="顺序执行多条命令"></a>顺序执行多条命令</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line"><span class="comment"># 等待——————————然后输入下面的命令</span></span><br><span class="line">sudo apt-get install some-tool //这里some-tool是指具体的软件包</span><br><span class="line"><span class="comment"># 等待——————————然后输入下面的命令</span></span><br><span class="line">some-tool</span><br></pre></td></tr></table></figure>

<p>将上述命令转化成一次性输入完</p>
<h5 id="全部执行"><a href="#全部执行" class="headerlink" title="全部执行"></a>全部执行</h5><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get update;sudo apt-get install some-tool;some-tool</span><br><span class="line"><span class="comment"># 让它自己运行</span></span><br></pre></td></tr></table></figure>

<h5 id="有选择的执行"><a href="#有选择的执行" class="headerlink" title="有选择的执行"></a>有选择的执行</h5><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">which</span> cowsay&gt;/dev/null &amp;&amp; cowsay -f head-in ohch~</span><br><span class="line"><span class="comment"># 上面的&amp;&amp;就是用来实现选择性执行的，它表示如果前面的命令执行结果（不是表示终端输出的内容，而是表示命令执行状态的结果）返回 0 则执行后面的，否则不执行，你可以从$?环境变量获取上一次命令的返回结果：</span></span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">which</span> cowsay&gt;/dev/null &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;exist&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;not exist&quot;</span></span><br></pre></td></tr></table></figure>

<p>可以从<code>$?</code>环境变量获取上一次命令的返回结果：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> $?</span><br></pre></td></tr></table></figure>

<p><img src="https://i.bmp.ovh/imgs/2022/05/17/f04098fd59c0a8dc.png" alt="流程图"></p>
<h4 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h4><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><h4 id="查看版本内核"><a href="#查看版本内核" class="headerlink" title="查看版本内核"></a>查看版本内核</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/redhat-release</span><br><span class="line"><span class="built_in">cat</span> /etc/issue</span><br><span class="line"><span class="built_in">uname</span> -r</span><br></pre></td></tr></table></figure>

<h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3><h4 id="帮助命令"><a href="#帮助命令" class="headerlink" title="帮助命令"></a>帮助命令</h4><h5 id="man命令"><a href="#man命令" class="headerlink" title="man命令"></a>man命令</h5><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">man <span class="built_in">ls</span></span><br></pre></td></tr></table></figure>

<p>man命令的章节说明</p>
<table>
<thead>
<tr>
<th>章节数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>1</code></td>
<td>Standard commands （标准命令）</td>
</tr>
<tr>
<td><code>2</code></td>
<td>System calls （系统调用）</td>
</tr>
<tr>
<td><code>3</code></td>
<td>Library functions （库函数）</td>
</tr>
<tr>
<td><code>4</code></td>
<td>Special devices （设备说明）</td>
</tr>
<tr>
<td><code>5</code></td>
<td>File formats （文件格式）</td>
</tr>
<tr>
<td><code>6</code></td>
<td>Games and toys （游戏和娱乐）</td>
</tr>
<tr>
<td><code>7</code></td>
<td>Miscellaneous （杂项）</td>
</tr>
<tr>
<td><code>8</code></td>
<td>Administrative Commands （管理员命令）</td>
</tr>
<tr>
<td><code>9</code></td>
<td>其他（Linux 特定的）， 用来存放内核例行程序的文档。</td>
</tr>
</tbody></table>
<p>打开手册之后我们可以通过 pgup 与 pgdn 或者上下键来上下翻看，可以按 q 退出当前页面</p>
<h5 id="info命令"><a href="#info命令" class="headerlink" title="info命令"></a>info命令</h5><ul>
<li>命令<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装 info</span></span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install info</span><br><span class="line"><span class="comment"># 查看 ls 命令的 info</span></span><br><span class="line">info <span class="built_in">ls</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h4><h5 id="touch命令"><a href="#touch命令" class="headerlink" title="touch命令"></a>touch命令</h5><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">touch</span> <span class="built_in">test</span></span><br></pre></td></tr></table></figure>

<h5 id="cp命令"><a href="#cp命令" class="headerlink" title="cp命令"></a>cp命令</h5><ol>
<li>复制文件<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> <span class="built_in">test</span> father/son/grandson <span class="comment">#将之前创建的 test 文件复制到 /home/shiyanlou/father/son/grandson 目录中</span></span><br></pre></td></tr></table></figure></li>
<li>复制目录<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/shiyanlou</span><br><span class="line"><span class="built_in">mkdir</span> family</span><br><span class="line"><span class="built_in">cp</span> -r father family</span><br><span class="line"><span class="comment">#要成功复制目录需要加上 -r 或者 -R 参数，表示递归复制，就是说有点目录及其下面的子目录层层进入复制的意思：</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h5 id="rm命令"><a href="#rm命令" class="headerlink" title="rm命令"></a>rm命令</h5><ul>
<li>删除文件<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> <span class="built_in">test</span></span><br><span class="line"><span class="comment">#删除一个文件</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -f <span class="built_in">test</span></span><br><span class="line"><span class="comment">#为了忽略删除只读文件的权限，可以直接使用-f参数强制删除</span></span><br></pre></td></tr></table></figure></li>
<li>删除目录<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> -r family</span><br><span class="line"><span class="comment"># 同复制目录一样，要删除一个目录也要加上一个-r或者-R参数 权限不足的时候也可以加上-f强制删除</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h5 id="mv命令"><a href="#mv命令" class="headerlink" title="mv命令"></a>mv命令</h5><ul>
<li>移动文件<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> Documents</span><br><span class="line"><span class="built_in">touch</span> file1</span><br><span class="line"><span class="built_in">mv</span> file1 Documents</span><br><span class="line"><span class="comment"># 将文件“ file1 ”移动到 Documents 目录</span></span><br></pre></td></tr></table></figure></li>
<li>重命名文件<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> file1 myfile</span><br><span class="line"><span class="comment">#file1为旧文件名 myfile为新文件名</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h5 id="rename命令"><a href="#rename命令" class="headerlink" title="rename命令"></a>rename命令</h5><p><code>rename</code> 命令并不是内置命令，若提示无该命令可以使用 <code>sudo apt-get install rename</code> 命令自行安装。</p>
<ul>
<li>批量重命名<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/shiyanlou/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用通配符批量创建 5 个文件:</span></span><br><span class="line"><span class="built_in">touch</span> file&#123;1..5&#125;.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 批量将这 5 个后缀为 .txt 的文本文件重命名为以 .c 为后缀的文件:</span></span><br><span class="line">rename <span class="string">&#x27;s/\.txt/\.c/&#x27;</span> *.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 批量将这 5 个文件，文件名和后缀改为大写:</span></span><br><span class="line">rename <span class="string">&#x27;y/a-z/A-Z/&#x27;</span> *.c</span><br></pre></td></tr></table></figure></li>
</ul>
<h5 id="cat命令与tac命令"><a href="#cat命令与tac命令" class="headerlink" title="cat命令与tac命令"></a>cat命令与tac命令</h5><p>前两个命令都是用来打印文件内容到标准输出（终端），其中 <code>cat</code> 为正序显示，<code>tac</code> 为倒序显示。</p>
<blockquote>
<p>标准输入输出：当我们执行一个 shell 命令行时通常会自动打开三个标准文件，即标准输入文件（stdin），默认对应终端的键盘、标准输出文件（stdout）和标准错误输出文件（stderr），后两个文件都对应被重定向到终端的屏幕，以便我们能直接看到输出内容。进程将从标准输入文件中得到输入数据，将正常输出数据输出到标准输出文件，而将错误信息送到标准错误文件中。</p>
</blockquote>
<ul>
<li>查看文件<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/shiyanlou</span><br><span class="line"><span class="built_in">cp</span> /etc/passwd passwd</span><br><span class="line"><span class="built_in">cat</span> passwd</span><br><span class="line"><span class="built_in">cat</span> -n passwd <span class="comment">#加上-n显示行号</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h5 id="nl命令"><a href="#nl命令" class="headerlink" title="nl命令"></a>nl命令</h5><p>添加行号并打印，这是个比 <code>cat -n</code> 更专业的行号打印命令。</p>
<blockquote>
<p>-b : 指定添加行号的方式，主要有两种：    </p>
<p>​        -b a:表示无论是否为空行，同样列出行号(“cat -n”就是这种方式)    </p>
<p>​        -b t:只列出非空行的编号并列出（默认为这种方式） </p>
<p>-n : 设置行号的样式，主要有三种：    </p>
<p>​        -n ln:在行号字段最左端显示    </p>
<p>​        -n rn:在行号字段最右边显示，且不加 0    </p>
<p>​        -n rz:在行号字段最右边显示，且加 0 -w : 行号字段占用的位数(默认为 6 位)</p>
</blockquote>
<h5 id="more命令与less命令"><a href="#more命令与less命令" class="headerlink" title="more命令与less命令"></a>more命令与less命令</h5><p>其中 <code>more</code> 命令比较简单，只能向一个方向滚动，而 <code>less</code> 为基于 <code>more</code> 和 <code>vi</code> （一个强大的编辑器，我们有单独的课程来让你学习）开发，功能更强大。<code>less</code> 的使用基本和 <code>more</code> 一致</p>
<ul>
<li>查看文件<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">more passwd</span><br></pre></td></tr></table></figure>

打开后默认只显示一屏内容，终端底部显示当前阅读的进度。可以使用 <code>Enter</code> 键向下滚动一行，使用 <code>Space</code> 键向下滚动一屏，按下 <code>h</code> 显示帮助，<code>q</code> 退出。</li>
</ul>
<h5 id="head命令与tail命令"><a href="#head命令与tail命令" class="headerlink" title="head命令与tail命令"></a>head命令与tail命令</h5><ul>
<li>查看文件<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">tail</span> /etc/passwd</span><br></pre></td></tr></table></figure></li>
<li>查看文件后几行<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">tail</span> -n 1 /etc/passwd</span><br><span class="line"><span class="comment"># 加上 -n 参数，后面紧跟行数</span></span><br><span class="line"><span class="comment"># -f可以动态查看日志，做到监视的目的</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h5 id="file命令"><a href="#file命令" class="headerlink" title="file命令"></a>file命令</h5><ul>
<li>查看文件类型<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">file /bin/ls</span><br></pre></td></tr></table></figure>

ps Linux中的文件类型不是通过后缀来区分的，而是依照文件的内容进行处理</li>
</ul>
<h5 id="whereis命令"><a href="#whereis命令" class="headerlink" title="whereis命令"></a>whereis命令</h5><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">whereis <span class="built_in">who</span></span><br><span class="line">whereis find</span><br></pre></td></tr></table></figure>

<p><code>whereis</code> 只能搜索二进制文件(-b)，man 帮助文件(-m)和源代码文件(-s)。如果想要获得更全面的搜索结果可以使用 <code>locate</code> 命令。</p>
<h5 id="locate命令"><a href="#locate命令" class="headerlink" title="locate命令"></a>locate命令</h5><p>使用 <code>locate</code> 命令查找文件也不会遍历硬盘，它通过查询 <code>/var/lib/mlocate/mlocate.db</code> 数据库来检索信息。不过这个数据库也不是实时更新的，系统会使用定时任务每天自动执行 <code>updatedb</code> 命令来更新数据库。所以有时候你刚添加的文件，它可能会找不到，需要手动执行一次 <code>updatedb</code> 命令（在我们的环境中必须先执行一次该命令）。注意这个命令也不是内置的命令，例如在我们的环境中就需要手动安装，然后执行更新。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install locate</span><br><span class="line">sudo updatedb</span><br></pre></td></tr></table></figure>

<p>它可以用来查找指定目录下的不同文件类型</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">locate /etc/sh</span><br><span class="line"><span class="comment"># 注意，它不只是在 /etc 目录下查找，还会自动递归子目录进行查找。</span></span><br></pre></td></tr></table></figure>

<ul>
<li>查找 &#x2F;usr&#x2F;share&#x2F; 下所有 jpg 文件<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">locate /usr/share/\*.jpg</span><br><span class="line"><span class="comment"># *号前面的反斜杠转义一定要添加，否则无法找到</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h5 id="which命令"><a href="#which命令" class="headerlink" title="which命令"></a>which命令</h5><p><code>which</code> 本身是 Shell 内建的一个命令，我们通常使用 <code>which</code> 来确定是否安装了某个指定的程序，因为它只从 <code>PATH</code> 环境变量指定的路径中去搜索命令并且返回第一个搜索到的结果。也就是说，我们可以看到某个系统命令是否存在以及执行的到底是哪一个地方的命令。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">which</span> man</span><br><span class="line"><span class="built_in">which</span> nginx</span><br><span class="line"><span class="built_in">which</span> ping</span><br></pre></td></tr></table></figure>

<h5 id="find命令"><a href="#find命令" class="headerlink" title="find命令"></a>find命令</h5><p><code>find</code> 应该是这几个命令中最强大的了，它不但可以通过文件类型、文件名进行查找而且可以根据文件的属性（如文件的时间戳，文件的权限等）进行搜索。<code>find</code> 命令强大到，要把它讲明白至少需要单独好几节课程才行，我们这里只介绍一些常用的内容。</p>
<ul>
<li>语法<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">find [path][option] [action] </span><br></pre></td></tr></table></figure></li>
</ul>
<h5 id="tee命令"><a href="#tee命令" class="headerlink" title="tee命令"></a>tee命令</h5><p>在标准输出到屏幕不变的情况下保存在文件中</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;Hello World!&#x27;</span> | <span class="built_in">tee</span> filename</span><br></pre></td></tr></table></figure>

<h5 id="tree命令"><a href="#tree命令" class="headerlink" title="tree命令"></a>tree命令</h5><h4 id="目录路径"><a href="#目录路径" class="headerlink" title="目录路径"></a>目录路径</h4><h5 id="cd命令"><a href="#cd命令" class="headerlink" title="cd命令"></a>cd命令</h5><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"><span class="built_in">cd</span> ~ <span class="comment">#进入home目录 # 或者 cd /home/&lt;你的用户名&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绝对路径</span></span><br><span class="line"><span class="built_in">cd</span> /usr/local/bin</span><br><span class="line"><span class="comment"># 相对路径</span></span><br><span class="line"><span class="built_in">cd</span> ../../usr/local/bin</span><br><span class="line"><span class="comment">#提示：在进行目录切换的过程中请多使用 Tab 键自动补全，可避免输入错误，连续按两次 Tab 可以显示全部候选结果。</span></span><br></pre></td></tr></table></figure>

<p>这个命令可以看到路径下的树结构</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">tree /</span><br><span class="line">/*</span><br><span class="line">如果没有安装那么需要先 sudo apt-get install tree (先update)</span><br><span class="line">*/</span><br></pre></td></tr></table></figure>

<p><img src="/linuxMenu.png" alt="img"></p>
<h5 id="cp命令-1"><a href="#cp命令-1" class="headerlink" title="cp命令"></a>cp命令</h5><ol>
<li>复制文件<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> <span class="built_in">test</span> father/son/grandson <span class="comment">#将之前创建的 test 文件复制到 /home/shiyanlou/father/son/grandson 目录中</span></span><br></pre></td></tr></table></figure></li>
<li>复制目录<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/shiyanlou</span><br><span class="line"><span class="built_in">mkdir</span> family</span><br><span class="line"><span class="built_in">cp</span> -r father family</span><br><span class="line"><span class="comment">#要成功复制目录需要加上 -r 或者 -R 参数，表示递归复制，就是说有点目录及其下面的子目录层层进入复制的意思：</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h5 id="pwd命令"><a href="#pwd命令" class="headerlink" title="pwd命令"></a>pwd命令</h5><p>获取当前路径</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">pwd</span> <span class="comment">#获取当前路径</span></span><br></pre></td></tr></table></figure>

<h5 id="mkdir命令"><a href="#mkdir命令" class="headerlink" title="mkdir命令"></a>mkdir命令</h5><p>新建目录</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> mydir <span class="comment">#当前路径下创建mydir目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p father/son/grandson</span><br><span class="line"><span class="comment"># 这里需要注意到-p参数可以同时创建一个多级目录，即便不存在父目录也是可以的</span></span><br></pre></td></tr></table></figure>

<p>还有一点需要注意的是，若当前目录已经创建了一个 test 文件，再使用 <code>mkdir test</code> 新建同名的文件夹，系统会报错文件已存在。这符合 Linux 一切介文件的理念。</p>
<p>若当前目录存在一个 test 文件夹，则 <code>touch</code> 命令，则会更改该文件夹的时间戳而不是新建文件。</p>
<h4 id="文本命令（文本编辑三剑客）"><a href="#文本命令（文本编辑三剑客）" class="headerlink" title="文本命令（文本编辑三剑客）"></a>文本命令（文本编辑三剑客）</h4><h5 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h5><h5 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h5><h5 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h5><h5 id="cut"><a href="#cut" class="headerlink" title="* cut"></a>* cut</h5><h4 id="文件打包压缩"><a href="#文件打包压缩" class="headerlink" title="文件打包压缩"></a>文件打包压缩</h4><p>压缩文件说明</p>
<table>
<thead>
<tr>
<th>文件后缀名</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>*.zip</code></td>
<td>zip 程序打包压缩的文件</td>
</tr>
<tr>
<td><code>*.rar</code></td>
<td>rar 程序压缩的文件</td>
</tr>
<tr>
<td><code>*.7z</code></td>
<td>7zip 程序压缩的文件</td>
</tr>
<tr>
<td><code>*.tar</code></td>
<td>tar 程序打包，未压缩的文件</td>
</tr>
<tr>
<td><code>*.gz</code></td>
<td>gzip 程序（GNU zip）压缩的文件</td>
</tr>
<tr>
<td><code>*.xz</code></td>
<td>xz 程序压缩的文件</td>
</tr>
<tr>
<td><code>*.bz2</code></td>
<td>bzip2 程序压缩的文件</td>
</tr>
<tr>
<td><code>*.tar.gz</code></td>
<td>tar 打包，gzip 程序压缩的文件</td>
</tr>
<tr>
<td><code>*.tar.xz</code></td>
<td>tar 打包，xz 程序压缩的文件</td>
</tr>
<tr>
<td><code>*tar.bz2</code></td>
<td>tar 打包，bzip2 程序压缩的文件</td>
</tr>
<tr>
<td><code>*.tar.7z</code></td>
<td>tar 打包，7z 程序压缩的文件</td>
</tr>
</tbody></table>
<h5 id="zip命令"><a href="#zip命令" class="headerlink" title="zip命令"></a>zip命令</h5><ul>
<li>打包文件夹<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">zip -r -q -o shiyanlou.zip /home/shiyanlou/Desktop</span><br><span class="line"><span class="built_in">du</span> -h shiyanlou.zip</span><br><span class="line">file shiyanlou.zip</span><br><span class="line"><span class="comment">#上面命令将目录 /home/shiyanlou/Desktop 打包成一个文件，并查看了打包后文件的大小和类型。第一行命令中，-r 参数表示递归打包包含子目录的全部内容，-q 参数表示为安静模式，即不向屏幕输出信息，-o，表示输出文件，需在其后紧跟打包输出文件名。后面使用 du 命令查看打包后文件的大小（后面会具体说明该命令）。</span></span><br></pre></td></tr></table></figure></li>
<li>设置压缩级别为 9 和 1（9 最大，1 最小），重新打包<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">zip -r -9 -q -o shiyanlou_9.zip /home/shiyanlou/Desktop -x ~/*.zip</span><br><span class="line">zip -r -1 -q -o shiyanlou_1.zip /home/shiyanlou/Desktop -x ~/*.zip</span><br><span class="line"><span class="comment">#这里添加了一个参数用于设置压缩级别 -[1-9]，1 表示最快压缩但体积大，9 表示体积最小但耗时最久。最后那个 -x 是为了排除我们上一次创建的 zip 文件，否则又会被打包进这一次的压缩文件中，注意：这里只能使用绝对路径，否则不起作用。</span></span><br></pre></td></tr></table></figure></li>
<li>创建加密zip包<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">zip -r -e -o shiyanlou_encryption.zip /home/shiyanlou/Desktop</span><br><span class="line"><span class="comment">#使用 -e 参数可以创建加密压缩包</span></span><br></pre></td></tr></table></figure></li>
<li>windows适配<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">zip -r -l -o shiyanlou.zip /home/shiyanlou/Desktop</span><br><span class="line"><span class="comment">#需要加上 -l 参数将 LF 转换为 CR+LF 来达到以上目的。</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h5 id="unzip命令"><a href="#unzip命令" class="headerlink" title="unzip命令"></a>unzip命令</h5><ul>
<li>解压命令<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">unzip shiyanlou.zip</span><br></pre></td></tr></table></figure></li>
<li>使用安静模式，将文件解压到指定目录：<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">unzip -q shiyanlou.zip -d ziptest</span><br><span class="line"><span class="comment"># -q表示安静模式 -d表示文件解压的指定目录，如果上述目录不存在，将会自动创建</span></span><br></pre></td></tr></table></figure></li>
<li>查看压缩包内的内容<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">unzip -l shiyanlou.zip</span><br><span class="line"><span class="comment"># -l参数可以查看压缩包的内容</span></span><br></pre></td></tr></table></figure></li>
</ul>
<p>PS</p>
<p><strong>注意：</strong> 使用 unzip 解压文件时我们同样应该注意兼容问题，不过这里我们关心的不再是上面的问题，而是中文编码的问题，通常 Windows 系统上面创建的压缩文件，如果有有包含中文的文档或以中文作为文件名的文件时默认会采用 GBK 或其它编码，而 Linux 上面默认使用的是 UTF-8 编码，如果不加任何处理，直接解压的话可能会出现中文乱码的问题（有时候它会自动帮你处理），为了解决这个问题，我们可以在解压时指定编码类型。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">unzip -O GBK 中文压缩文件.zip</span><br></pre></td></tr></table></figure>

<h5 id="du命令"><a href="#du命令" class="headerlink" title="du命令"></a>du命令</h5><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">du</span> -h -d 0 *.zip ~ | <span class="built_in">sort</span></span><br><span class="line"><span class="comment"># h， --human-readable（顾名思义，你可以试试不加的情况）</span></span><br><span class="line"><span class="comment"># d， --max-depth（所查看文件的深度）</span></span><br></pre></td></tr></table></figure>

<h5 id="tar命令"><a href="#tar命令" class="headerlink" title="tar命令"></a>tar命令</h5><p>在 Linux 上面更常用的是 <code>tar</code> 工具，tar 原本只是一个打包工具，只是同时还是实现了对 7z、gzip、xz、bzip2 等工具的支持，这些压缩工具本身只能实现对文件或目录（单独压缩目录中的文件）的压缩，没有实现对文件的打包压缩，所以我们也无需再单独去学习其他几个工具，tar 的解压和压缩都是同一个命令，只需参数不同，使用比较方便。</p>
<ul>
<li>创建一个tar包<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/shiyanlou</span><br><span class="line">tar -P -cf shiyanlou.tar /home/shiyanlou/Desktop</span><br><span class="line"><span class="comment">#上面命令中，-P 保留绝对路径符，-c 表示创建一个 tar 包文件，-f 用于指定创建的文件名，注意文件名必须紧跟在 -f 参数之后，比如不能写成 tar -fc shiyanlou.tar，可以写成 tar -f shiyanlou.tar -c ~。你还可以加上 -v 参数以可视的的方式输出打包的文件。</span></span><br></pre></td></tr></table></figure></li>
<li>解包一个文件到指定路径的已存在目录<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> tardir</span><br><span class="line">tar -xf shiyanlou.tar -C tardir</span><br><span class="line"><span class="comment">#  -x 参数 解包  -C参数 已存在路径</span></span><br></pre></td></tr></table></figure></li>
<li>只查看不解包文件<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">tar -tf shiyanlou.tar</span><br><span class="line"><span class="comment"># -t参数</span></span><br></pre></td></tr></table></figure></li>
<li>解包时保留文件属性和跟随链接（符号链接或软链接）<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">tar -cphf etc.tar /etc</span><br><span class="line"><span class="comment"># -p 保留文件的属性  -h 备份链接指向的源文件而不是链接本身</span></span><br></pre></td></tr></table></figure></li>
<li>对其他压缩文件格式解压<table>
<thead>
<tr>
<th>压缩文件格式</th>
<th>参数</th>
</tr>
</thead>
<tbody><tr>
<td><code>*.tar.gz</code></td>
<td><code>-z</code></td>
</tr>
<tr>
<td><code>*.tar.xz</code></td>
<td><code>-J</code></td>
</tr>
<tr>
<td><code>*tar.bz2</code></td>
<td><code>-j</code></td>
</tr>
</tbody></table>
<ul>
<li>创建tar.gz文件<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">tar -czf shiyanlou.tar.gz /home/shiyanlou/Desktop</span><br><span class="line"><span class="comment"># 这里的-z就是表示为gz文件</span></span><br></pre></td></tr></table></figure></li>
<li>解压 <code>*.tar.gz</code>文件<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">tar -xzf shiyanlou.tar.gz</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h4 id="组合命令"><a href="#组合命令" class="headerlink" title="组合命令"></a>组合命令</h4><h5 id="cut命令"><a href="#cut命令" class="headerlink" title="cut命令"></a>cut命令</h5><p>打印<code>/etc/passwd</code>文件中以<code>:</code>为分隔符的第 1 个字段和第 6 个字段分别表示用户名和其家目录：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cut</span> /etc/passwd -d <span class="string">&#x27;:&#x27;</span> -f 1,6</span><br></pre></td></tr></table></figure>

<p>打印<code>/etc/passwd</code>文件中每一行的前 N 个字符：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 前五个（包含第五个）</span></span><br><span class="line">$ <span class="built_in">cut</span> /etc/passwd -c -5</span><br><span class="line"><span class="comment"># 前五个之后的（包含第五个）</span></span><br><span class="line">$ <span class="built_in">cut</span> /etc/passwd -c 5-</span><br><span class="line"><span class="comment"># 第五个</span></span><br><span class="line">$ <span class="built_in">cut</span> /etc/passwd -c 5</span><br><span class="line"><span class="comment"># 2到5之间的（包含第五个）</span></span><br><span class="line">$ <span class="built_in">cut</span> /etc/passwd -c 2-5</span><br></pre></td></tr></table></figure>

<h5 id="grep命令"><a href="#grep命令" class="headerlink" title="grep命令"></a>grep命令</h5><p>结合正则表达式可以实现很复杂却很高效的匹配和查找</p>
<h6 id="一般形式"><a href="#一般形式" class="headerlink" title="一般形式"></a>一般形式</h6><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">grep [命令选项]... 用于匹配的表达式 [文件]...</span><br></pre></td></tr></table></figure>

<p>搜索<code>/home/shiyanlou</code>目录下所有包含”shiyanlou”的文本文件，并显示出现在文本中的行号：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ grep -rnI <span class="string">&quot;shiyanlou&quot;</span> ~</span><br><span class="line"><span class="comment"># -r 参数表示递归搜索子目录中的文件</span></span><br><span class="line"><span class="comment"># -n表示打印匹配项行号</span></span><br><span class="line"><span class="comment"># -I表示忽略二进制文件</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/04/24/Linux%E5%AE%9D%E5%85%B8/grepShow.png" alt="grepShow"></p>
<p>匹配字段中使用正则表达式</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看环境变量中以&quot;yanlou&quot;结尾的字符串</span></span><br><span class="line"><span class="variable">$</span> export | grep <span class="string">&quot;.*yanlou<span class="variable">$</span>&quot;</span></span><br><span class="line"><span class="comment"># $表示一行的末尾</span></span><br></pre></td></tr></table></figure>

<h5 id="wc命令"><a href="#wc命令" class="headerlink" title="wc命令"></a>wc命令</h5><p>统计并输出一个文件中行、单词和字节的数目，比如输出<code>/etc/passwd</code>文件的统计信息:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">wc</span> /etc/passwd</span><br></pre></td></tr></table></figure>

<p>分别只输出行数、单词数、字节数、字符数和输入文本中最长一行的字节数：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 行数</span></span><br><span class="line">$ <span class="built_in">wc</span> -l /etc/passwd</span><br><span class="line"><span class="comment"># 单词数</span></span><br><span class="line">$ <span class="built_in">wc</span> -w /etc/passwd</span><br><span class="line"><span class="comment"># 字节数</span></span><br><span class="line">$ <span class="built_in">wc</span> -c /etc/passwd</span><br><span class="line"><span class="comment"># 字符数</span></span><br><span class="line">$ <span class="built_in">wc</span> -m /etc/passwd</span><br><span class="line"><span class="comment"># 最长行字节数</span></span><br><span class="line">$ <span class="built_in">wc</span> -L /etc/passwd</span><br></pre></td></tr></table></figure>

<h5 id="xargs命令"><a href="#xargs命令" class="headerlink" title="xargs命令"></a>xargs命令</h5><blockquote>
<p>xargs 是一条 UNIX 和类 UNIX 操作系统的常用命令。它的作用是将参数列表转换成小块分段传递给其他命令，以避免参数列表过长的问题。</p>
</blockquote>
<p>处理产生大量输出结果的命令如 find，locate 和 grep 的结果</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$</span> cut <span class="literal">-d</span>: <span class="literal">-f1</span> &lt; /etc/passwd | <span class="built_in">sort</span> | xargs <span class="built_in">echo</span></span><br><span class="line"><span class="comment"># 将/etc/passwd文件按:分割取第一个字段排序后，使用echo命令生成一个列表</span></span><br></pre></td></tr></table></figure>

<p>PS</p>
<p><strong>注意：对于西文字符来说，一个字符就是一个字节，但对于中文字符一个汉字是大于 2 个字节的，具体数目是由字符编码决定的</strong></p>
<p><img src="https://doc.shiyanlou.com/document-uid735639labid63timestamp1532414808838.png" alt="此处输入图片的描述"></p>
<p>结合管道，统计 &#x2F;etc 下面所有目录数：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">ls</span> -dl /etc/*/ | <span class="built_in">wc</span> -l</span><br></pre></td></tr></table></figure>

<p><img src="https://doc.shiyanlou.com/document-uid600404labid6125timestamp1523946094712.png" alt="此处输入图片的描述"></p>
<h5 id="sort命令"><a href="#sort命令" class="headerlink" title="sort命令"></a>sort命令</h5><p>将输入按照一定方式排序，然后再输出</p>
<p>支持的排序：按字典排序，数字排序，按月份排序，随机排序，反转排序，指定特定字段进行排序等等</p>
<p>字典排序&#x2F;反转排序&#x2F;按特定字段排序：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> /etc/passwd | <span class="built_in">sort</span></span><br><span class="line">$ <span class="built_in">cat</span> /etc/passwd | <span class="built_in">sort</span> -r</span><br><span class="line">$ <span class="built_in">cat</span> /etc/passwd | <span class="built_in">sort</span> -t<span class="string">&#x27;:&#x27;</span> -k 3</span><br><span class="line"><span class="comment"># -t参数用于指定字段的分隔符，这里是以&quot;:&quot;作为分隔符</span></span><br><span class="line"><span class="comment"># -k [字段号] 用于指定对哪一个字段进行排序</span></span><br></pre></td></tr></table></figure>

<p>这里<code>/etc/passwd</code>文件的第三个字段为数字，默认情况下是以字典序排序的，如果要按照数字排序就要加上<code>-n</code>参数：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> /etc/passwd | <span class="built_in">sort</span> -t<span class="string">&#x27;:&#x27;</span> -k 3 -n</span><br></pre></td></tr></table></figure>

<p>注意观察第二个冒号后的数字：</p>
<p><img src="https://doc.shiyanlou.com/document-uid735639labid63timestamp1532414849333.png" alt="此处输入图片的描述"></p>
<h5 id="uniq命令"><a href="#uniq命令" class="headerlink" title="uniq命令"></a>uniq命令</h5><p>过滤或者输出重复行</p>
<h6 id="过滤重复行"><a href="#过滤重复行" class="headerlink" title="过滤重复行"></a>过滤重复行</h6><p>使用<code>history</code>命令查看最近执行过的命令（实际为读取${SHELL}_history 文件,如我们环境中的~&#x2F;.zsh_history 文件），去掉命令后面的参数然后去掉重复的命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">history</span> | <span class="built_in">cut</span> -c 8- | <span class="built_in">cut</span> -d <span class="string">&#x27; &#x27;</span> -f 1 | <span class="built_in">uniq</span></span><br></pre></td></tr></table></figure>

<p>去重效果不明显——<strong>因为<code>uniq</code>命令只能去连续重复的行，不是全文去重</strong></p>
<p>要达到预期效果，我们先排序：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">history</span> | <span class="built_in">cut</span> -c 8- | <span class="built_in">cut</span> -d <span class="string">&#x27; &#x27;</span> -f 1 | <span class="built_in">sort</span> | <span class="built_in">uniq</span></span><br><span class="line"><span class="comment"># 或者$ history | cut -c 8- | cut -d &#x27; &#x27; -f 1 | sort -u</span></span><br></pre></td></tr></table></figure>

<h6 id="输出重复行"><a href="#输出重复行" class="headerlink" title="输出重复行"></a>输出重复行</h6><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 输出重复过的行（重复的只输出一个）及重复次数</span></span><br><span class="line"><span class="built_in">history</span> | cut <span class="literal">-c</span> <span class="number">8</span>- | cut <span class="literal">-d</span> <span class="string">&#x27; &#x27;</span> <span class="operator">-f</span> <span class="number">1</span> | <span class="built_in">sort</span> | uniq <span class="literal">-dc</span></span><br><span class="line"><span class="comment"># 输出所有重复的行</span></span><br><span class="line"><span class="built_in">history</span> | cut <span class="literal">-c</span> <span class="number">8</span>- | cut <span class="literal">-d</span> <span class="string">&#x27; &#x27;</span> <span class="operator">-f</span> <span class="number">1</span> | <span class="built_in">sort</span> | uniq <span class="literal">-D</span></span><br></pre></td></tr></table></figure>

<h4 id="定时服务"><a href="#定时服务" class="headerlink" title="定时服务"></a>定时服务</h4><p><img src="https://labfile.oss.aliyuncs.com/courses/2585/at%2Bcron%2Banacron.png" alt="at+cron+anacron.png"></p>
<h5 id="at命令"><a href="#at命令" class="headerlink" title="at命令"></a>at命令</h5><ul>
<li><p>安装</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">apt-get install at</span><br></pre></td></tr></table></figure></li>
<li><p>检查at服务是否启动：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ps -ef | grep -v grep | grep atd</span><br></pre></td></tr></table></figure></li>
<li><p>启动</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo service atd start</span><br></pre></td></tr></table></figure>

<p><img src="https://labfile.oss.aliyuncs.com/courses/2585/at1.png" alt="at1.png"></p>
</li>
<li><p>使用</p>
<p>添加计划任务</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">at now + 1 minute</span><br><span class="line">at&gt; <span class="built_in">date</span> &gt;&gt; at.log</span><br><span class="line">at&gt; &lt;EOT&gt;  <span class="comment"># Ctrl+D结束</span></span><br><span class="line"><span class="comment"># 上述命令表示1分钟之后执行任务date</span></span><br><span class="line"><span class="comment"># 按Ctrl+D结束任务编辑</span></span><br></pre></td></tr></table></figure>

<p>灵活的指定时间的形式：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 2022年 05月 11日 星期三 10:24:00 CST</span></span><br><span class="line">at -f file now + 1 minutes <span class="comment"># job X at Wed May 11 10:25:00 2022</span></span><br><span class="line">at -f file 4pm + 3 days <span class="comment"># job 11 at Sat May 14 16:00:00 2022</span></span><br><span class="line">at -f file noon Jul 31 <span class="comment"># 12点</span></span><br><span class="line">at -f file 6:00 tomorrow</span><br><span class="line">at -f file tomorrow</span><br><span class="line">at -f file 10am 05/15/2022</span><br><span class="line">at -f file teatime <span class="comment">#下午4点</span></span><br><span class="line">at -f file.sh 05pm + 3 days  <span class="comment"># 3天后的下午5点</span></span><br><span class="line">at -f file.sh tomorrow <span class="comment"># 明天  today</span></span><br><span class="line">at -f file.sh noon <span class="comment"># 中午 midnight/teatime</span></span><br><span class="line">at -f file.sh 16:00 05/05/2021 <span class="comment"># 完整的日期和时间</span></span><br></pre></td></tr></table></figure></li>
<li><p>用户控制</p>
<ul>
<li>&#x2F;etc&#x2F;at.allow</li>
<li>&#x2F;etc&#x2F;at.deny</li>
</ul>
<p>at命令先查询 <code>/etc/at.allow</code> 文件，凡事出现在该文件中的用户都可以使用at命令，这个就是所谓的<code>白名单</code>。如果没有这个文件，则查找 <code>/etc/at.deny</code>，这个就是 <code>黑名单</code> ，凡是不在该文件中的用户都可以使用at命令。一般系统都是允许所有正常用户使用at命令，所以在&#x2F;etc目录中存放一个空的at.deny文件。</p>
<p>查看当前等待运行的任务。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">atq  <span class="comment">#查看当前还有哪些待执行任务</span></span><br><span class="line"></span><br><span class="line">atrm &lt;num&gt; <span class="comment">#删除计划任务，后跟的是任务的号码</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h5 id="crontab命令"><a href="#crontab命令" class="headerlink" title="crontab命令"></a>crontab命令</h5><p>常见于设置周期性被执行的命令，实现自动进行系统管理的目的</p>
<p>crontab 命令从输入设备读取指令，并将其存放于 crontab 文件中，以供之后读取和执行。通常，crontab 储存的指令被守护进程激活，crond 为其守护进程，crond 常常在后台运行，每一分钟会检查一次是否有预定的作业需要执行。</p>
<p>通过 crontab 命令，我们可以在固定的间隔时间执行指定的系统指令或 shell 　 script 脚本。时间间隔的单位可以是分钟、小时、日、月、周的任意组合。</p>
<h6 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h6><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Example of job definition:</span></span><br><span class="line"><span class="comment"># .---------------- minute (0 - 59)</span></span><br><span class="line"><span class="comment"># |  .------------- hour (0 - 23)</span></span><br><span class="line"><span class="comment"># |  |  .---------- day of month (1 - 31)</span></span><br><span class="line"><span class="comment"># |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...</span></span><br><span class="line"><span class="comment"># |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat</span></span><br><span class="line"><span class="comment"># |  |  |  |  |</span></span><br><span class="line"><span class="comment"># *  *  *  *  * user-name command to be executed</span></span><br></pre></td></tr></table></figure>

<h6 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h6><p>crontab 在本实验环境中需要做一些特殊的准备，首先我们会启动 rsyslog，以便我们可以通过日志中的信息来了解我们的任务是否真正的被执行了（在本实验环境中需要手动启动，而在自己本地中 Ubuntu 会默认自行启动不需要手动启动）</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get install -y rsyslog</span><br><span class="line">sudo service rsyslog start</span><br></pre></td></tr></table></figure>

<p><img src="https://dn-simplecloud.shiyanlou.com/1135081468201394787" alt="service-rsyslog-start"></p>
<p>在本实验环境中 crontab 也是不被默认启动的，同时不能在后台由 upstart 来管理，所以需要我们来启动它:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo cron -f &amp;</span><br></pre></td></tr></table></figure>

<p><img src="https://doc.shiyanlou.com/document-uid600404labid6124timestamp1523941816405.png" alt="此处输入图片的描述"></p>
<h6 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h6><p>添加一个计划任务</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure>

<p>第一次启动会出现这样一个画面，这是让我们选择编辑的工具，选择第二个基本的 vim 就可以了。有的系统中没有提示，直接就是vim编辑器，也有的系统中第一个选项是nano编辑器。</p>
<p><img src="https://doc.shiyanlou.com/document-uid600404labid6124timestamp1523941985569.png" alt="此处输入图片的描述"></p>
<p>而选择后我们会进入这样一个画面，这就是添加计划的地方了，与一般的配置文档相同，以#号开头的都是注释</p>
<p>每行的开头五个域，指定计划任务执行的时间和日期等，从左开始依次是：</p>
<ul>
<li>分钟 m(minute)</li>
<li>小时 h(hour)</li>
<li>日 dom(day of month)</li>
<li>月 mon(month)</li>
<li>星期 dow(day of week)</li>
</ul>
<p>最后是要执行的命令，也可以是脚本</p>
<p><img src="https://dn-simplecloud.shiyanlou.com/1135081468202029108" alt="实验楼"></p>
<p>详细的格式可以使用前面学习到的 man 命令查看帮助信息：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">man crontab</span><br></pre></td></tr></table></figure>

<p>在了解命令格式之后，我们通过这样的一个例子来完成一个任务的添加，在文档的最后一排加上这样一排命令，该任务是每分钟我们会在<code>/home/shiyanlou</code> 目录下创建一个以当前的年月日时分秒为名字的空白文件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">*/1 * * * * <span class="built_in">touch</span> /home/shiyanlou/$(<span class="built_in">date</span> +\%Y\%m\%d\%H\%M\%S)</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>注意</strong> “ % ” 在 crontab 文件中，有结束命令行、换行、重定向的作用，前面加 ” \ ” 符号转义，否则，“ % ” 符号将执行其结束命令行或者换行的作用，并且其后的内容会被做为标准输入发送给前面的命令。</p>
</blockquote>
<p>添加成功后我们会得到最后一排 <code>installing new crontab</code> 的一个提示。实际上，刚才编辑没有保存之前是一个临时文件，当保存成功的时候才添加了计划任务。这个保存的配置文件不是 <code>/etc/crontab</code>，而是在 <code>/var/spool/cron/crontabs</code> 目录中增加一个与用户名同名的配置文件。</p>
<p><img src="https://dn-simplecloud.shiyanlou.com/1135081468203483143" alt="实验楼"></p>
<p>可以通过如下指令来查看当前用户有哪些计划任务。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">crontab -l</span><br></pre></td></tr></table></figure>

<p>正确的保存并且添加成功了该任务</p>
<p><img src="https://dn-simplecloud.shiyanlou.com/1135081468204230683" alt="实验楼"></p>
<p>虽然我们添加了任务，但是如果 cron 的守护进程并没有启动，它根本不会监测到有任务，当然也就不会执行计划任务，可以通过以下 2 种方式来确定 cron 是否成功的在后台启动，默默的按计划执行任务，若是没有就得参照3.2中的准备命令。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ps aux | grep cron</span><br><span class="line"></span><br><span class="line">or</span><br><span class="line"></span><br><span class="line">pgrep cron</span><br></pre></td></tr></table></figure>

<p><img src="https://doc.shiyanlou.com/document-uid600404labid6124timestamp1523942683532.png" alt="此处输入图片的描述"></p>
<p>通过下图可以看到任务在创建之后，执行了几次，生成了一些文件，且每分钟生成一个：</p>
<p><img src="https://doc.shiyanlou.com/document-uid600404labid6124timestamp1523943532369.png" alt="此处输入图片的描述"></p>
<p>通过如下命令可以查看执行任务命令之后在日志中的信息反馈</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">tail</span> -f /var/log/syslog</span><br></pre></td></tr></table></figure>

<p>从图中我们可以看到分别在 13 点 28、29、30 分的 01 秒为我们在 shiyanlou 用户的家目录下创建了文件</p>
<p><img src="https://doc.shiyanlou.com/document-uid600404labid6124timestamp1523943327065.png" alt="此处输入图片的描述"></p>
<p>当我们并不需要这个任务的时候我们可以使用这么一个命令去删除任务</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">crontab -r</span><br></pre></td></tr></table></figure>

<p>通过图中我们可以看出我们删除之后再查看任务列表，系统显示该用户没有计划任务了。</p>
<p><img src="https://doc.shiyanlou.com/document-uid600404labid6124timestamp1523943647348.png" alt="此处输入图片的描述"></p>
<h6 id="深入"><a href="#深入" class="headerlink" title="深入"></a>深入</h6><p>每个用户使用 <code>crontab -e</code> 添加计划任务，都会在 <code>/var/spool/cron/crontabs</code> 中添加一个该用户自己的任务文档，这样目的是为了隔离。</p>
<p><img src="https://dn-simplecloud.shiyanlou.com/1135081468206283987" alt="实验楼"></p>
<p>如果是系统级别的定时任务，只需要以 sudo 权限编辑 <code>/etc/crontab</code> 文件就可以。</p>
<p>cron 服务监测时间最小单位是分钟，所以 cron 会每分钟去读取一次 <code>/etc/crontab</code> 与 <code>/var/spool/cron/crontabs</code> 里面的內容。</p>
<p>在 &#x2F;etc 目录下，cron 相关的目录有下面几个：</p>
<p><img src="https://dn-simplecloud.shiyanlou.com/1135081468206856712" alt="实验楼"></p>
<p>每个目录的作用：</p>
<ol>
<li><code>/etc/cron.daily</code>，目录下的脚本会每天执行一次，在每天的 6 点 25 分时运行；</li>
<li><code>/etc/cron.hourly</code>，目录下的脚本会每个小时执行一次，在每小时的 17 分钟时运行；</li>
<li><code>/etc/cron.monthly</code>，目录下的脚本会每月执行一次，在每月 1 号的 6 点 52 分时运行；</li>
<li><code>/etc/cron.weekly</code>，目录下的脚本会每周执行一次，在每周第七天的 6 点 47 分时运行；</li>
</ol>
<p>系统默认执行时间可以根据需求进行修改。</p>
<p>在 &#x2F;etc 目录中，还有一个 <code>/etc/cron.d</code> 目录，其中存放一些cron计划任务的配置文件，相应的任务也会得到执行，其配置格式与 <code>/etc/crontab</code> 文件相同。例如：可以放置跟apache的计划任务，文件名可以命名为 &#x2F;etc&#x2F;cron.d&#x2F;httpd。</p>
<h5 id="anacron命令"><a href="#anacron命令" class="headerlink" title="anacron命令"></a>anacron命令</h5><p>执行按天为最小计划时间单位的计划任务</p>
<p>并不要求计算机24×7连续运行，对于一些笔记本或者台式计算机来说，经常处于关机不工作状态，如果使用cron就会错过计划任务，但是使用anacron就可以在下一次启动后执行计划任务</p>
<h6 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h6><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get install -y anacron</span><br></pre></td></tr></table></figure>

<p>然后可以看到&#x2F;etc&#x2F;anacrontab文件，打开可以查看文件的内容</p>
<p><img src="https://labfile.oss.aliyuncs.com/courses/2585/anacron1.png" alt="anacron1.png"></p>
<p>anacron的配置跟cron配置不同，包含四个域：</p>
<p><img src="https://labfile.oss.aliyuncs.com/courses/2585/anacron2.png" alt="anacron2.png"></p>
<p>这四个域表示的含义如下图所示：</p>
<p><img src="https://labfile.oss.aliyuncs.com/courses/2585/anacron3.png" alt="anacron3.png"></p>
<ul>
<li><p>period： 指明天数</p>
<ul>
<li>1 - daily</li>
<li>7 - weekly</li>
<li>30 - monthly</li>
<li>N - number of days</li>
<li>@monthly - 每月执行job</li>
</ul>
</li>
<li><p>delay： 执行job之前延迟的分钟数</p>
</li>
<li><p>identifier：记录job执行的时间戳的文件名</p>
</li>
<li><p>command：要执行的job，命令或者shell脚本。</p>
<p>在&#x2F;var&#x2F;spool&#x2F;anacron&#x2F;目录下会出现一些文件，这些文件对应着配置的job，记录了最近一次执行job的日期。</p>
</li>
</ul>
<h4 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h4><h5 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h5><p> <code>top</code> 实时的查看进程的状态，以及系统的一些信息（如 CPU、内存信息等）</p>
<p> <code>ps</code> 来静态查看当前的进程信息</p>
<p> <code>pstree</code> 来查看当前活跃进程的树形结构</p>
<h6 id="top工具"><a href="#top工具" class="headerlink" title="top工具"></a>top工具</h6><p>常用的一个查看工具，能实时的查看我们系统的一些关键信息的变化:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">top</span><br></pre></td></tr></table></figure>

<p><img src="https://dn-simplecloud.shiyanlou.com/1135081469070319324" alt="实验楼"></p>
<p>top 是一个在前台执行的程序，所以执行后便进入到这样的一个交互界面，正是因为交互界面我们才可以实时的获取到系统与进程的信息。在交互界面中我们可以通过一些指令来操作和筛选。</p>
<p> top 显示的第一排</p>
<table>
<thead>
<tr>
<th>内容</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>top</td>
<td>表示当前程序的名称</td>
</tr>
<tr>
<td>11:05:18</td>
<td>表示当前的系统的时间</td>
</tr>
<tr>
<td>up 8 days,17:12</td>
<td>表示该机器已经启动了多长时间</td>
</tr>
<tr>
<td>1 user</td>
<td>表示当前系统中只有一个用户</td>
</tr>
<tr>
<td>load average: 0.29,0.20,0.25</td>
<td>分别对应 1、5、15 分钟内 cpu 的平均负载</td>
</tr>
</tbody></table>
<p>load average 在 wikipedia 中的解释是 the system load is a measure of the amount of work that a computer system is doing 也就是对当前 CPU 工作量的度量，具体来说也就是指运行队列的平均长度，也就是等待 CPU 的平均进程数相关的一个计算值。</p>
<p>假设我们的系统是单 CPU、单内核的，把它比喻成是一条单向的桥，把 CPU 任务比作汽车。</p>
<ul>
<li>load &#x3D; 0 的时候意味着这个桥上并没有车，cpu 没有任何任务；</li>
<li>load &lt; 1 的时候意味着桥上的车并不多，一切都还是很流畅的，cpu 的任务并不多，资源还很充足；</li>
<li>load &#x3D; 1 的时候就意味着桥已经被车给占满了，没有一点空隙，cpu 的已经在全力工作了，所有的资源都被用完了，当然还好，这还在能力范围之内，只是有点慢而已；</li>
<li>load &gt; 1 的时候就意味着不仅仅是桥上已经被车占满了，就连桥外都被占满了，cpu 已经在全力工作，系统资源的用完了，但是还是有大量的进程在请求，在等待。若是这个值大于２、大于３，表示进程请求超过 CPU 工作能力的 2 到 ３ 倍。而若是这个值 &gt; 5 说明系统已经在超负荷运作了。</li>
</ul>
<p>这是单个 CPU 单核的情况，而实际生活中我们需要将得到的这个值除以我们的核数来看。我们可以通过以下的命令来查看 CPU 的个数与核心数</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看物理CPU的个数</span></span><br><span class="line"><span class="comment">#cat /proc/cpuinfo |grep &quot;physical id&quot;|sort |uniq|wc -l</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#每个cpu的核心数</span></span><br><span class="line"><span class="built_in">cat</span> /proc/cpuinfo |grep <span class="string">&quot;physical id&quot;</span>|grep <span class="string">&quot;0&quot;</span>|<span class="built_in">wc</span> -l</span><br></pre></td></tr></table></figure>

<p>通过上面的指数我们可以得知 load 的临界值为 1 ，但是在实际生活中，比较有经验的运维或者系统管理员会将临界值定为 0.7。这里的指数都是除以核心数以后的值，不要混淆了</p>
<ul>
<li>若是 load &lt; 0.7 并不会去关注他；</li>
<li>若是 0.7&lt; load &lt; 1 的时候我们就需要稍微关注一下了，虽然还可以应付但是这个值已经离临界不远了；</li>
<li>若是 load &#x3D; 1 的时候我们就需要警惕了，因为这个时候已经没有更多的资源的了，已经在全力以赴了；</li>
<li>若是 load &gt; 5 的时候系统已经快不行了，这个时候你需要加班解决问题了</li>
</ul>
<p>通常我们都会先看 15 分钟的值来看这个大体的趋势，然后再看 5 分钟的值对比来看是否有下降的趋势。</p>
<p>查看 busybox 的代码可以知道，数据是每 5 秒钟就检查一次活跃的进程数，然后计算出该值，然后 load 从 <code>/proc/loadavg</code> 中读取的。而这个 load 的值是如何计算的呢，这是 load 的计算的源码</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#define FSHIFT      11          /* nr of bits of precision */</span></span><br><span class="line"><span class="comment">#define FIXED_1     (1&lt;&lt;FSHIFT) /* 1.0 as fixed-point(定点) */</span></span><br><span class="line"><span class="comment">#define LOAD_FREQ   (5*HZ)      /* 5 sec intervals，每隔5秒计算一次平均负载值 */</span></span><br><span class="line"><span class="comment">#define CALC_LOAD(load, exp, n)     \</span></span><br><span class="line">         load *= exp;               \</span><br><span class="line">         load += n*(FIXED_1 - exp); \</span><br><span class="line">         load &gt;&gt;= FSHIFT;</span><br><span class="line"></span><br><span class="line">unsigned long avenrun[3];</span><br><span class="line"></span><br><span class="line">EXPORT_SYMBOL(avenrun);</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">* calc_load - given tick count, update the avenrun load estimates.</span><br><span class="line">* This is called <span class="keyword">while</span> holding a write_lock on xtime_lock.</span><br><span class="line">*/</span><br><span class="line">static inline void calc_load(unsigned long ticks)</span><br><span class="line">&#123;</span><br><span class="line">        unsigned long active_tasks; /* fixed-point */</span><br><span class="line">        static int count = LOAD_FREQ;</span><br><span class="line">        count -= ticks;</span><br><span class="line">        <span class="keyword">if</span> (count &lt; 0) &#123;</span><br><span class="line">                count += LOAD_FREQ;</span><br><span class="line">                active_tasks = count_active_tasks();</span><br><span class="line">                CALC_LOAD(avenrun[0], EXP_1, active_tasks);</span><br><span class="line">                CALC_LOAD(avenrun[1], EXP_5, active_tasks);</span><br><span class="line">                CALC_LOAD(avenrun[2], EXP_15, active_tasks);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>有兴趣的朋友可以研究一下，是如何计算的。代码中的后面这部分相当于它的计算公式</p>
</blockquote>
<p>top 的第二行数据，基本上第二行是进程的一个情况统计</p>
<table>
<thead>
<tr>
<th>内容</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>Tasks: 26 total</td>
<td>进程总数</td>
</tr>
<tr>
<td>1 running</td>
<td>1 个正在运行的进程数</td>
</tr>
<tr>
<td>25 sleeping</td>
<td>25 个睡眠的进程数</td>
</tr>
<tr>
<td>0 stopped</td>
<td>没有停止的进程数</td>
</tr>
<tr>
<td>0 zombie</td>
<td>没有僵尸进程数</td>
</tr>
</tbody></table>
<p>来看 top 的第三行数据，这一行基本上是 CPU 的一个使用情况的统计了</p>
<table>
<thead>
<tr>
<th>内容</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>Cpu(s): 1.0%us</td>
<td>用户空间进程占用 CPU 百分比</td>
</tr>
<tr>
<td>1.0% sy</td>
<td>内核空间运行占用 CPU 百分比</td>
</tr>
<tr>
<td>0.0%ni</td>
<td>用户进程空间内改变过优先级的进程占用 CPU 百分比</td>
</tr>
<tr>
<td>97.9%id</td>
<td>空闲 CPU 百分比</td>
</tr>
<tr>
<td>0.0%wa</td>
<td>等待输入输出的 CPU 时间百分比</td>
</tr>
<tr>
<td>0.1%hi</td>
<td>硬中断(Hardware IRQ)占用 CPU 的百分比</td>
</tr>
<tr>
<td>0.0%si</td>
<td>软中断(Software IRQ)占用 CPU 的百分比</td>
</tr>
<tr>
<td>0.0%st</td>
<td>(Steal time) 是 hypervisor 等虚拟服务中，虚拟 CPU 等待实际 CPU 的时间的百分比</td>
</tr>
</tbody></table>
<p>CPU 利用率是对一个时间段内 CPU 使用状况的统计，通过这个指标可以看出在某一个时间段内 CPU 被占用的情况，而 Load Average 是 CPU 的 Load，它所包含的信息不是 CPU 的使用率状况，而是在一段时间内 CPU 正在处理以及等待 CPU 处理的进程数情况统计信息，这两个指标并不一样。</p>
<p>来看 top 的第四行数据，这一行基本上是内存的一个使用情况的统计了：</p>
<table>
<thead>
<tr>
<th>内容</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>8176740 total</td>
<td>物理内存总量</td>
</tr>
<tr>
<td>8032104 used</td>
<td>使用的物理内存总量</td>
</tr>
<tr>
<td>144636 free</td>
<td>空闲内存总量</td>
</tr>
<tr>
<td>313088 buffers</td>
<td>用作内核缓存的内存量</td>
</tr>
</tbody></table>
<blockquote>
<p><strong>注意</strong></p>
<p>系统中可用的物理内存最大值并不是 free 这个单一的值，而是 free + buffers + swap 中的 cached 的和</p>
</blockquote>
<p>来看 top 的第五行数据，这一行基本上是交换区的一个使用情况的统计了</p>
<table>
<thead>
<tr>
<th>内容</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>total</td>
<td>交换区总量</td>
</tr>
<tr>
<td>used</td>
<td>使用的交换区总量</td>
</tr>
<tr>
<td>free</td>
<td>空闲交换区总量</td>
</tr>
<tr>
<td>cached</td>
<td>缓冲的交换区总量,内存中的内容被换出到交换区，而后又被换入到内存，但使用过的交换区尚未被覆盖</td>
</tr>
</tbody></table>
<p>再下面就是进程的一个情况了</p>
<table>
<thead>
<tr>
<th>列名</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>PID</td>
<td>进程 id</td>
</tr>
<tr>
<td>USER</td>
<td>该进程的所属用户</td>
</tr>
<tr>
<td>PR</td>
<td>该进程执行的优先级 priority 值</td>
</tr>
<tr>
<td>NI</td>
<td>该进程的 nice 值</td>
</tr>
<tr>
<td>VIRT</td>
<td>该进程任务所使用的虚拟内存的总数</td>
</tr>
<tr>
<td>RES</td>
<td>该进程所使用的物理内存数，也称之为驻留内存数</td>
</tr>
<tr>
<td>SHR</td>
<td>该进程共享内存的大小</td>
</tr>
<tr>
<td>S</td>
<td>该进程进程的状态: S&#x3D;sleep R&#x3D;running Z&#x3D;zombie</td>
</tr>
<tr>
<td>%CPU</td>
<td>该进程 CPU 的利用率</td>
</tr>
<tr>
<td>%MEM</td>
<td>该进程内存的利用率</td>
</tr>
<tr>
<td>TIME+</td>
<td>该进程活跃的总时间</td>
</tr>
<tr>
<td>COMMAND</td>
<td>该进程运行的名字</td>
</tr>
</tbody></table>
<blockquote>
<p><strong>注意</strong></p>
</blockquote>
<blockquote>
<p><strong>NICE 值</strong>叫做静态优先级，是用户空间的一个优先级值，其取值范围是-20 至 19。这个值越小，表示进程”优先级”越高，而值越大“优先级”越低。nice 值中的 -20 到 19，中 -20 优先级最高， 0 是默认的值，而 19 优先级最低</p>
</blockquote>
<blockquote>
<p><strong>PR 值</strong>表示 Priority 值叫动态优先级，是进程在内核中实际的优先级值，进程优先级的取值范围是通过一个宏定义的，这个宏的名称是 MAX_PRIO，它的值为 140。Linux 实际上实现了 140 个优先级范围，取值范围是从 0-139，这个值越小，优先级越高。而这其中的 0 - 99 是实时进程的值，而 100 - 139 是给用户的。</p>
</blockquote>
<blockquote>
<p>其中 PR 中的 100 to 139 值部分有这么一个对应 <code>PR = 20 + (-20 to +19)</code>，这里的 -20 to +19 便是 nice 值，所以说两个虽然都是优先级，而且有千丝万缕的关系，但是他们的值，他们的作用范围并不相同</p>
</blockquote>
<blockquote>
<p><strong>VIRT</strong>任务所使用的虚拟内存的总数，其中包含所有的代码，数据，共享库和被换出 swap 空间的页面等所占据空间的总数</p>
</blockquote>
<p>在上文我们曾经说过 top 是一个前台程序，所以是一个可以交互的</p>
<table>
<thead>
<tr>
<th>常用交互命令</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>q</td>
<td>退出程序</td>
</tr>
<tr>
<td>I</td>
<td>切换显示平均负载和启动时间的信息</td>
</tr>
<tr>
<td>P</td>
<td>根据 CPU 使用百分比大小进行排序</td>
</tr>
<tr>
<td>M</td>
<td>根据驻留内存大小进行排序</td>
</tr>
<tr>
<td>i</td>
<td>忽略闲置和僵死的进程，这是一个开关式命令</td>
</tr>
<tr>
<td>k</td>
<td>终止一个进程，系统提示输入 PID 及发送的信号值。一般终止进程用 15 信号，不能正常结束则使用 9 信号。安全模式下该命令被屏蔽。</td>
</tr>
</tbody></table>
<h6 id="ps工具"><a href="#ps工具" class="headerlink" title="ps工具"></a>ps工具</h6><p>ps 也是我们最常用的查看进程的工具之一</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ps aux</span><br></pre></td></tr></table></figure>

<p><img src="https://dn-simplecloud.shiyanlou.com/1135081469086224826" alt="实验楼"></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ps axjf</span><br></pre></td></tr></table></figure>

<p><img src="https://dn-simplecloud.shiyanlou.com/1135081469086474033" alt="实验楼"></p>
<p>总体了解下会出现哪些信息给我们，这些信息又代表着什么（更多的 keywords 大家可以通过 <code>man ps</code> 了解）</p>
<table>
<thead>
<tr>
<th>内容</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>F</td>
<td>进程的标志（process flags），当 flags 值为 1 则表示此子程序只是 fork 但没有执行 exec，为 4 表示此程序使用超级管理员 root 权限</td>
</tr>
<tr>
<td>USER</td>
<td>进程的拥有用户</td>
</tr>
<tr>
<td>PID</td>
<td>进程的 ID</td>
</tr>
<tr>
<td>PPID</td>
<td>其父进程的 PID</td>
</tr>
<tr>
<td>SID</td>
<td>session 的 ID</td>
</tr>
<tr>
<td>TPGID</td>
<td>前台进程组的 ID</td>
</tr>
<tr>
<td>%CPU</td>
<td>进程占用的 CPU 百分比</td>
</tr>
<tr>
<td>%MEM</td>
<td>占用内存的百分比</td>
</tr>
<tr>
<td>NI</td>
<td>进程的 NICE 值</td>
</tr>
<tr>
<td>VSZ</td>
<td>进程使用虚拟内存大小</td>
</tr>
<tr>
<td>RSS</td>
<td>驻留内存中页的大小</td>
</tr>
<tr>
<td>TTY</td>
<td>终端 ID</td>
</tr>
<tr>
<td>S or STAT</td>
<td>进程状态</td>
</tr>
<tr>
<td>WCHAN</td>
<td>正在等待的进程资源</td>
</tr>
<tr>
<td>START</td>
<td>启动进程的时间</td>
</tr>
<tr>
<td>TIME</td>
<td>进程消耗 CPU 的时间</td>
</tr>
<tr>
<td>COMMAND</td>
<td>命令的名称和参数</td>
</tr>
</tbody></table>
<blockquote>
<p><strong>TPGID</strong>栏写着-1 的都是没有控制终端的进程，也就是守护进程</p>
</blockquote>
<blockquote>
<p><strong>STAT</strong>表示进程的状态，而进程的状态有很多，如下表所示</p>
</blockquote>
<table>
<thead>
<tr>
<th>状态</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>R</td>
<td>Running.运行中</td>
</tr>
<tr>
<td>S</td>
<td>Interruptible Sleep.等待调用</td>
</tr>
<tr>
<td>D</td>
<td>Uninterruptible Sleep.不可中断睡眠</td>
</tr>
<tr>
<td>T</td>
<td>Stoped.暂停或者跟踪状态</td>
</tr>
<tr>
<td>X</td>
<td>Dead.即将被撤销</td>
</tr>
<tr>
<td>Z</td>
<td>Zombie.僵尸进程</td>
</tr>
<tr>
<td>W</td>
<td>Paging.内存交换</td>
</tr>
<tr>
<td>N</td>
<td>优先级低的进程</td>
</tr>
<tr>
<td>&lt;</td>
<td>优先级高的进程</td>
</tr>
<tr>
<td>s</td>
<td>进程的领导者</td>
</tr>
<tr>
<td>L</td>
<td>锁定状态</td>
</tr>
<tr>
<td>l</td>
<td>多线程状态</td>
</tr>
<tr>
<td>+</td>
<td>前台进程</td>
</tr>
</tbody></table>
<blockquote>
<p>其中的 D 是不能被中断睡眠的状态，处在这种状态的进程不接受外来的任何 signal，所以无法使用 kill 命令杀掉处于 D 状态的进程，无论是 <code>kill</code>，<code>kill -9</code> 还是 <code>kill -15</code>，一般处于这种状态可能是进程 I&#x2F;O 的时候出问题了。</p>
</blockquote>
<p>ps 工具有许多的参数，下面解释部分常用的参数</p>
<p>使用 <code>-l</code> 参数可以显示自己这次登录的 bash 相关的进程信息罗列出来</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ps -l</span><br></pre></td></tr></table></figure>

<p><img src="https://dn-simplecloud.shiyanlou.com/1135081469088103140" alt="实验楼"></p>
<p>相对来说我们更加常用下面这个命令，他将会罗列出所有的进程信息</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ps aux</span><br></pre></td></tr></table></figure>

<p><img src="https://dn-simplecloud.shiyanlou.com/1135081469089342412" alt="实验楼"></p>
<p>若是查找其中的某个进程的话，我们还可以配合着 grep 和正则表达式一起使用</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ps aux | grep zsh</span><br></pre></td></tr></table></figure>

<p><img src="https://dn-simplecloud.shiyanlou.com/1135081469089837027" alt="实验楼"></p>
<p>此外我们还可以查看时，将连同部分的进程呈树状显示出来</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ps axjf</span><br></pre></td></tr></table></figure>

<p><img src="https://dn-simplecloud.shiyanlou.com/1135081469090040956" alt="实验楼"></p>
<p>自定义所需要的参数显示</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ps -afxo user,ppid,pid,pgid,<span class="built_in">command</span></span><br></pre></td></tr></table></figure>

<p><img src="https://dn-simplecloud.shiyanlou.com/1135081469004994601" alt="实验楼"></p>
<p>可以使用 man 来获取更多相关的信息</p>
<h6 id="pstree工具"><a href="#pstree工具" class="headerlink" title="pstree工具"></a>pstree工具</h6><p>很直接的看到相同的进程数量，最主要可以看到所有进程之间的相关性</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pstree</span><br></pre></td></tr></table></figure>

<p><img src="https://dn-simplecloud.shiyanlou.com/1135081469090893467" alt="实验楼"></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pstree -up</span><br><span class="line"></span><br><span class="line"><span class="comment">#参数选择：</span></span><br><span class="line"><span class="comment">#-A  ：各程序树之间以 ASCII 字元來連接；</span></span><br><span class="line"><span class="comment">#-p  ：同时列出每个 process 的 PID；</span></span><br><span class="line"><span class="comment">#-u  ：同时列出每个 process 的所屬账户名称。</span></span><br></pre></td></tr></table></figure>

<p><img src="https://dn-simplecloud.shiyanlou.com/1135081469091089249" alt="实验楼"></p>
<h5 id="管理"><a href="#管理" class="headerlink" title="管理"></a>管理</h5><h6 id="kill命令"><a href="#kill命令" class="headerlink" title="kill命令"></a>kill命令</h6><p>当一个进程结束的时候或者要异常结束的时候，会向其父进程返回一个或者接收一个 SIGHUP 信号而做出的结束进程或者其他的操作，这个 SIGHUP 信号不仅可以由系统发送，可以使用 kill 来发送这个信号来操作进程的结束或者重启等等</p>
<p>用 kill 来操作下一些不属于 job 范畴的进程，直接对 pid 下手</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#首先我们使用图形界面打开了 gedit、gvim，用 ps 可以查看到</span></span><br><span class="line">ps aux</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用9这个信号强制结束 gedit 进程</span></span><br><span class="line"><span class="built_in">kill</span> -9 1608</span><br><span class="line"></span><br><span class="line"><span class="comment">#我们再查找这个进程的时候就找不到了</span></span><br><span class="line">ps aux | grep gedit</span><br></pre></td></tr></table></figure>

<p><img src="https://dn-simplecloud.shiyanlou.com/1135081469092567061" alt="实验楼"></p>
<p><img src="https://dn-simplecloud.shiyanlou.com/1135081469092779938" alt="实验楼"></p>
<h6 id="执行顺序"><a href="#执行顺序" class="headerlink" title="执行顺序"></a>执行顺序</h6><p>靠该进程的优先级值来判定进程调度的优先级</p>
<p>优先级的值就是 PR 与 nice 来控制与体现</p>
<p>nice 的值我们是可以通过 nice 命令来修改的，而需要注意的是 nice 值可以调整的范围是 -20 ~ 19，其中 root 有着至高无上的权力，既可以调整自己的进程也可以调整其他用户的程序，并且是所有的值都可以用，而普通用户只可以调制属于自己的进程，并且其使用的范围只能是 0 ~ 19，因为系统为了避免一般用户抢占系统资源而设置的一个限制</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#这个实验在环境中无法做，因为权限不够，可以自己在本地尝试</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#打开一个程序放在后台，或者用图形界面打开</span></span><br><span class="line"><span class="built_in">nice</span> -n -5 vim &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment">#用 ps 查看其优先级</span></span><br><span class="line">ps -afxo user,ppid,pid,<span class="built_in">stat</span>,pri,ni,time,<span class="built_in">command</span> | grep vim</span><br></pre></td></tr></table></figure>

<p>还可以用 renice 来修改已经存在的进程的优先级，同样因为权限的原因在实验环境中无法尝试</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">renice -5 pid</span><br></pre></td></tr></table></figure>

<h4 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h4><h5 id="查看用户"><a href="#查看用户" class="headerlink" title="查看用户"></a>查看用户</h5><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">who</span> am i</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line"></span><br><span class="line">$ <span class="built_in">who</span> mom likes</span><br></pre></td></tr></table></figure>

<p><img src="https://doc.shiyanlou.com/document-uid735639labid3timestamp1531731170296.png" alt="3-2.1-1"></p>
<p>输出的第一列表示打开当前伪终端的用户的用户名（要查看当前登录用户的用户名，去掉空格直接使用 <code>whoami</code> 即可），第二列的 <code>pts/0</code> 中 <code>pts</code> 表示伪终端，所谓伪是相对于 <code>/dev/tty</code> 设备而言的，前面课程中控制台与终端时的那七个虚拟控制台吗？使用 <code>[Ctrl]</code>+<code>[Alt]</code>+<code>[F1]～[F7]</code> 进行切换的 <code>/dev/tty</code> 设备么，这是“真终端”，伪终端就是当你在图形用户界面使用 <code>/dev/tty7</code> 时每打开一个终端就会产生一个伪终端，<code>pts/0</code> 后面那个数字就表示打开的伪终端序号，你可以尝试再打开一个终端，然后在里面输入 <code>who am i</code>，看第二列是不是就变成 <code>pts/1</code> 了，第三列则表示当前伪终端的启动时间。</p>
<p>还有一点需要注意的是，在某些环境中 <code>who am i</code> 和 <code>who mom likes</code> 命令不会输出任何内容，这是因为当前使用的 SHELL 不是登录时的 SHELL，没有用户与 who 的 stdin 相关联，因此不会输出任何内容。例如：可能如下图所示，输入这些命令却没有任何提示。</p>
<p><img src="https://doc.shiyanlou.com/courses/uid871732-20200302-1583140204433" alt="图片描述"></p>
<p>此时如果打开一个登录 SHELL 的终端例如 Tmux，然后在新的终端里执行上述命令即可。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ tmux</span><br></pre></td></tr></table></figure>

<p><img src="https://doc.shiyanlou.com/courses/uid871732-20200302-1583140710447" alt="图片描述"></p>
<p><code>who</code> 命令其它常用参数</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>-a</code></td>
<td>打印能打印的全部</td>
</tr>
<tr>
<td><code>-d</code></td>
<td>打印死掉的进程</td>
</tr>
<tr>
<td><code>-m</code></td>
<td>同<code>am i</code>，<code>mom likes</code></td>
</tr>
<tr>
<td><code>-q</code></td>
<td>打印当前登录用户数及用户名</td>
</tr>
<tr>
<td><code>-u</code></td>
<td>打印当前登录用户登录信息</td>
</tr>
<tr>
<td><code>-r</code></td>
<td>打印运行等</td>
</tr>
</tbody></table>
<h5 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h5><p>在 Linux 系统里， <code>root</code> 账户拥有整个系统至高无上的权利，比如 新建&#x2F;添加 用户。</p>
<blockquote>
<p>root 权限，系统权限的一种，与 SYSTEM 权限可以理解成一个概念，但高于 Administrator 权限，root 是 Linux 和 UNIX 系统中的超级管理员用户帐户，该帐户拥有整个系统至高无上的权力，所有对象他都可以操作，所以很多黑客在入侵系统的时候，都要把权限提升到 root 权限，这个操作等同于在 Windows 下就是将新建的非法帐户添加到 Administrators 用户组。更比如安卓操作系统中（基于 Linux 内核）获得 root 权限之后就意味着已经获得了手机的最高权限，这时候你可以对手机中的任何文件（包括系统文件）执行所有增、删、改、查的操作。</p>
</blockquote>
<p>大部分 Linux 系统在安装时都会建议用户新建一个用户而不是直接使用 <code>root</code>用户进行登录，当然也有直接使用 <code>root</code> 登录的，例如 <code>Kali</code>（基于 Debian 的 Linux 发行版，集成大量工具软件，主要用于<strong>数字取证</strong>的操作系统）。一般我们登录系统时都是以普通账户的身份登录的，要创建用户需要 <code>root</code> 权限，这里就要用到 <code>sudo</code> 这个命令了。不过使用这个命令有两个前提：</p>
<ul>
<li>要知道当前登录用户的密码</li>
<li>当前用户必须在 <code>sudo</code> 用户组。</li>
</ul>
<p>说明：<code>shiyanlou</code> 用户也属于 <code>sudo</code> 用户组。</p>
<h6 id="su，su-与-sudo"><a href="#su，su-与-sudo" class="headerlink" title="su，su- 与 sudo"></a>su，su- 与 sudo</h6><p><strong>需要注意 Linux 环境下输入密码是不会显示的。</strong></p>
<p><code>su &lt;user&gt;</code> 可以切换到用户 <code>user</code>，执行时需要输入目标用户的密码，<code>sudo &lt;cmd&gt;</code> 可以以特权级别运行 <code>cmd</code> 命令，需要当前用户属于 <code>sudo</code> 组，且需要输入当前用户的密码。<code>su - &lt;user&gt;</code> 命令也是切换用户，但是同时用户的<strong>环境变量</strong>和<strong>工作目录</strong>也会跟着改变成目标用户所对应的。</p>
<p><strong>【试一试】</strong> 现在我们新建一个叫 <code>lilei</code> 的用户：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ sudo adduser lilei</span><br></pre></td></tr></table></figure>

<p>实验楼的环境目前设置为 <code>shiyanlou</code> 用户执行 <code>sudo</code> 不需要输入密码，通常此处需要按照提示输入 <code>shiyanlou</code> 密码（<strong>Linux 下密码输入是不显示任何内容的</strong>），<code>shiyanlou</code> 用户密码可以通过 <code>sudo passwd shiyanlou</code> 命令进行设置（建议不要更改，可能会影响后续检查通过）。</p>
<p><strong>【试一试】</strong> 现在请你使用<code>passwd</code>命令给 <code>lilei</code> 用户设置密码，其他选项的一些内容你可以选择直接回车使用默认值。</p>
<p><img src="https://doc.shiyanlou.com/document-uid735639labid3timestamp1531731216215.png" alt="3-2.2-1"></p>
<p>这个命令不但可以添加用户到系统，同时也会默认为新用户在 <code>/home</code> 目录下创建一个工作目录：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">ls</span> /home</span><br></pre></td></tr></table></figure>

<p><img src="https://doc.shiyanlou.com/courses/uid871732-20200302-1583141675216" alt="图片描述"></p>
<p>现在已经创建好一个用户，并且可以使用创建的用户登录了，使用如下命令切换登录用户：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ su -l lilei</span><br></pre></td></tr></table></figure>

<p>输入刚刚设置的 <code>lilei</code> 的密码，然后输入如下命令并查看输出：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">who</span> am i</span><br><span class="line">$ <span class="built_in">whoami</span></span><br><span class="line">$ <span class="built_in">pwd</span></span><br></pre></td></tr></table></figure>

<p><img src="https://doc.shiyanlou.com/courses/uid871732-20200302-1583142076115" alt="图片描述"></p>
<p>退出当前用户跟退出终端一样，可以使用 <code>exit</code> 命令或者使用快捷键 <code>Ctrl+D</code>。</p>
<p><img src="https://doc.shiyanlou.com/courses/uid871732-20200302-1583142261959" alt="图片描述"></p>
<h5 id="用户组"><a href="#用户组" class="headerlink" title="用户组"></a>用户组</h5><p>在 Linux 里面每个用户都有一个归属（用户组），用户组简单地理解就是一组用户的集合，它们共享一些资源和权限，同时拥有私有资源，就跟家的形式差不多。当然一个用户是可以属于多个用户组的。</p>
<h6 id="查看属于哪些用户组"><a href="#查看属于哪些用户组" class="headerlink" title="查看属于哪些用户组"></a>查看属于哪些用户组</h6><ul>
<li>方法一：使用 groups 命令</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">groups</span> shiyanlou</span><br></pre></td></tr></table></figure>

<p><img src="https://doc.shiyanlou.com/document-uid13labid3timestamp1454035714557.png" alt="此处输入图片的描述"></p>
<p>其中冒号之前表示用户，后面表示该用户所属的用户组。这里可以看到 <code>shiyanlou</code> 用户属于 <code>shiyanlou</code> 用户组，每次新建用户如果不指定用户组的话，默认会自动创建一个与用户名相同的用户组（差不多就相当于家长的意思）。</p>
<ul>
<li>方法二：查看 <code>/etc/group</code> 文件</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> /etc/group | <span class="built_in">sort</span></span><br></pre></td></tr></table></figure>

<p>你将看到如下一堆输出，在最下面看到 <code>shiyanlou</code> 的用户组信息：</p>
<p><img src="https://doc.shiyanlou.com/document-uid735639labid3timestamp1531731335264.png" alt="3-2.3-3"></p>
<p>没找到？没关系，你可以使用 <code>grep</code> 命令过滤掉一些你不想看到的结果：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> /etc/group | grep -E <span class="string">&quot;shiyanlou&quot;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://doc.shiyanlou.com/document-uid13labid3timestamp1454035698068.png" alt="此处输入图片的描述"></p>
<ul>
<li><p><code>/etc/group</code> 文件格式说明</p>
<p><code>/etc/group</code> 的内容包括用户组（Group）、用户组口令、GID（组 ID） 及该用户组所包含的用户（User），每个用户组一条记录。格式如下：    </p>
<blockquote>
<p>group_name:password:GID:user_list</p>
</blockquote>
<p>你看到上面的 password 字段为一个 <code>x</code>，并不是说密码就是它，只是表示密码不可见而已。</p>
<p>这里需要注意，如果用户的 GID 等于用户组的 GID，那么最后一个字段 <code>user_list</code> 就是空的，这里的 GID 是指用户默认所在组的 GID，可以使用 <code>id</code> 命令查看。比如 <code>shiyanlou</code> 用户，在 <code>/etc/group</code> 中的 <code>shiyanlou</code> 用户组后面是不会显示的。<code>lilei</code> 用户，在 <code>/etc/group</code> 中的 <code>lilei</code> 用户组后面是不会显示的。</p>
</li>
</ul>
<h6 id="将其它用户加入-sudo-用户组"><a href="#将其它用户加入-sudo-用户组" class="headerlink" title="将其它用户加入 sudo 用户组"></a>将其它用户加入 sudo 用户组</h6><p>默认情况下新创建的用户是不具有 root 权限的，也不在 sudo 用户组，可以让其加入 sudo 用户组从而获取 root 权限：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 注意 Linux 上输入密码是不会显示的</span></span><br><span class="line">$ su -l lilei</span><br><span class="line">$ sudo <span class="built_in">ls</span></span><br></pre></td></tr></table></figure>

<p><img src="https://doc.shiyanlou.com/courses/uid871732-20200302-1583145040679" alt="图片描述"></p>
<p>会提示 lilei 不在 sudoers 文件中，意思就是 lilei 不在 sudo 用户组中，至于 sudoers 文件（&#x2F;etc&#x2F;sudoers）最好不要动它，操作不慎会导致比较麻烦的后果。</p>
<p>使用 <code>usermod</code> 命令可以为用户添加用户组，同样使用该命令你必需有 root 权限，你可以直接使用 root 用户为其它用户添加用户组，或者用其它已经在 sudo 用户组的用户使用 sudo 命令获取权限来执行该命令。</p>
<p>用 shiyanlou 用户执行 sudo 命令将 lilei 添加到 sudo 用户组，让它也可以使用 sudo 命令获得 root 权限</p>
<p>首先切换回 shiyanlou 用户</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ su - shiyanlou</span><br></pre></td></tr></table></figure>

<p>此处需要输入 shiyanlou 用户密码，shiyanlou 的密码可以在右侧工具栏，SSH 直连里看到。</p>
<p><img src="https://doc.shiyanlou.com/courses/uid871732-20200302-1583145439247" alt="图片描述"></p>
<p>当然也可以通过 <code>sudo passwd shiyanlou</code> 进行设置，或者你直接关闭当前终端打开一个新的终端。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">groups</span> lilei</span><br><span class="line">$ sudo usermod -G sudo lilei</span><br><span class="line">$ <span class="built_in">groups</span> lilei</span><br></pre></td></tr></table></figure>

<p><img src="https://doc.shiyanlou.com/courses/uid871732-20200302-1583145514469" alt="图片描述"></p>
<p>然后你再切换回 lilei 用户，现在就可以使用 sudo 获取 root 权限了。</p>
<p><img src="https://doc.shiyanlou.com/courses/uid871732-20200302-1583145591124" alt="图片描述"></p>
<h5 id="删除用户和用户组"><a href="#删除用户和用户组" class="headerlink" title="删除用户和用户组"></a>删除用户和用户组</h5><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ sudo deluser lilei --remove-home</span><br></pre></td></tr></table></figure>

<p><img src="https://doc.shiyanlou.com/document-uid735639labid3timestamp1531731417990.png" alt="3-2.4-1"></p>
<p>使用 <code>--remove-home</code> 参数在删除用户时候会一并<strong>将该用户的工作目录一并删除</strong>。如果不使用那么系统会自动在 &#x2F;home 目录为该用户保留工作目录。</p>
<p><img src="https://doc.shiyanlou.com/courses/uid871732-20200302-1583146790310" alt="图片描述"></p>
<p>删除用户组可以使用 <code>groupdel</code> 命令，倘若该群组中仍包括某些用户，则<strong>必须先删除群组中用户后，才能删除群组</strong>。</p>
<h4 id="文件权限管理"><a href="#文件权限管理" class="headerlink" title="文件权限管理"></a>文件权限管理</h4><p>文件的访问控制权限，即哪些用户和组群可以访问文件以及可以执行什么样的操作。</p>
<p>Unix&#x2F;Linux 系统是一个典型的多用户系统，不同的用户处于不同的地位，对文件和目录有不同的访问权限。为了保护系统的安全性，Unix&#x2F;Linux 系统除了对用户权限作了严格的界定外，还在用户身份认证、访问控制、传输安全、文件读写权限等方面作了周密的控制。</p>
<p>在 Unix&#x2F;Linux 中的每一个文件或目录都包含有访问权限，这些访问权限决定了谁能访问和如何访问这些文件和目录。</p>
<h5 id="查看文件权限"><a href="#查看文件权限" class="headerlink" title="查看文件权限"></a>查看文件权限</h5><p> <code>ls</code> 命令</p>
<p>使用较长格式列出文件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">ls</span> -l</span><br></pre></td></tr></table></figure>

<p><img src="https://doc.shiyanlou.com/courses/uid871732-20200302-1583147815919" alt="图片描述"></p>
<p><img src="https://doc.shiyanlou.com/linux_base/3-9.png" alt="img"></p>
<p><img src="https://doc.shiyanlou.com/linux_base/3-10.png" alt="img"></p>
<ul>
<li>文件类型</li>
</ul>
<p> <strong>Linux 里面一切皆文件</strong></p>
<p>正因为这一点才有了设备文件这一说</p>
<p> <code>/dev</code> 目录下有各种设备文件，大都跟具体的硬件设备相关</p>
<p> <code>socket</code>：网络套接字</p>
<p><code>pipe</code> 管道，这个东西很重要，大家已经多次使用了</p>
<p><code>软链接文件</code>：链接文件是分为两种的，一种是“软链接”，另一种当然是“硬链接”。软链接等同于 Windows 上的快捷方式</p>
<ul>
<li>文件权限</li>
</ul>
<p><strong>读权限</strong>，表示你可以使用 <code>cat &lt;file name&gt;</code> 之类的命令来读取某个文件的内容；</p>
<p><strong>写权限</strong>，表示你可以编辑和修改某个文件的内容； </p>
<p><strong>执行权限</strong>，通常指可以运行的二进制程序文件或者脚本文件，如同 Windows 上的 <code>exe</code> 后缀的文件，不过 Linux 上不是通过文件后缀名来区分文件的类型。</p>
<p><strong>一个目录同时具有读权限和执行权限才可以打开并查看内部文件，而一个目录要有写权限才允许在其中创建其它文件</strong>，这是因为目录文件实际保存着该目录里面的文件的列表等信息。</p>
<p>所属用户组权限，是指你所在的用户组中的所有其它用户对于该文件的权限。</p>
<ul>
<li>链接数</li>
</ul>
<blockquote>
<p>链接到该文件所在的 inode 结点的文件名数目（涉及到 Linux 文件系统的相关概念知识，感兴趣查看 <a href="https://www.ibm.com/developerworks/cn/linux/l-cn-hardandsymb-links/index.html#major2">硬链接和软链接的联系与区别</a>）。</p>
</blockquote>
<ul>
<li>文件大小</li>
</ul>
<blockquote>
<p>以 inode 结点大小为单位来表示的文件大小，可以给 ls 加上 <code>-lh</code> 参数来更直观的查看文件的大小。</p>
</blockquote>
<p> <code>ls</code> 命令的一些其它常用的用法：</p>
<ul>
<li>显示除了 <code>.</code>（当前目录）和 <code>..</code>（上一级目录）之外的所有文件，包括隐藏文件（Linux 下以 <code>.</code> 开头的文件为隐藏文件）。</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">ls</span> -a</span><br></pre></td></tr></table></figure>

<p><img src="https://doc.shiyanlou.com/courses/uid871732-20200302-1583148438097" alt="图片描述"></p>
<p>可以同时使用 <code>-a</code> 和 <code>-l</code> 参数：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">ls</span> -al</span><br></pre></td></tr></table></figure>

<p>查看某一个目录的完整属性，而不是显示目录里面的文件属性：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">ls</span> -dl &lt;目录名&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>显示所有文件大小，并以普通人类能看懂的方式呈现：</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">ls</span> -asSh</span><br></pre></td></tr></table></figure>

<p><img src="https://doc.shiyanlou.com/courses/uid871732-20200302-1583148552984" alt="图片描述"></p>
<p>其中小 s 为显示文件大小，大 S 为按文件大小排序，若需要知道如何按其它方式排序，可以使用 <code>man ls</code> 命令查询。</p>
<h5 id="变更文件所有者"><a href="#变更文件所有者" class="headerlink" title="变更文件所有者"></a>变更文件所有者</h5><p><strong>若前面已经执行删除 lilei 用户的命令，这里重新创建一下。</strong></p>
<p>切换到 <code>lilei</code> 用户，然后在 <code>/home/lilei</code> 目录新建一个文件，命名为 <code>iphone11</code>。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ su - lilei</span><br><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line">$ <span class="built_in">touch</span> iphone11</span><br><span class="line">$ <span class="built_in">ls</span> -alh iphone11</span><br></pre></td></tr></table></figure>

<p>可见文件所有者是 lilei ：</p>
<p><img src="https://doc.shiyanlou.com/courses/uid871732-20200302-1583148845314" alt="图片描述"></p>
<p>现在切换回到 shiyanlou 用户，使用以下命令变更文件所有者为 <code>shiyanlou</code>。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 需要切换到 shiyanlou 用户执行以下操作</span></span><br><span class="line">$ <span class="built_in">cd</span> /home/lilei</span><br><span class="line">$ <span class="built_in">ls</span> iphone11</span><br><span class="line">$ sudo <span class="built_in">chown</span> shiyanlou iphone11</span><br></pre></td></tr></table></figure>

<p>现在查看，发现文件所有者成功修改为 shiyanlou。</p>
<p><img src="https://doc.shiyanlou.com/courses/uid871732-20200302-1583148964757" alt="图片描述"></p>
<h5 id="修改文件权限"><a href="#修改文件权限" class="headerlink" title="修改文件权限"></a>修改文件权限</h5><p>文件的权限有两种表示方式：</p>
<ul>
<li>方式一：二进制数字表示</li>
</ul>
<p><img src="https://doc.shiyanlou.com/linux_base/3-14.png" alt="img"></p>
<p>每个文件有三组固定的权限，分别对应拥有者，所属用户组，其他用户，<strong>这个顺序是固定的</strong>。</p>
<p>文件的读写执行对应字母 <code>rwx</code>，以二进制表示就是 <code>111</code>，用十进制表示就是 <code>7</code>，对进制转换不熟悉的同学可以看看 <a href="https://baike.baidu.com/item/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/3117222">进制转换</a>。例如我们刚刚新建的文件 iphone11 的权限是 <code>rw-rw-rw-</code>，换成对应的十进制表示就是 666，这就表示这个文件的拥有者，所属用户组和其他用户具有读写权限，不具有执行权限。</p>
<p>如果要将文件 <code>iphone11</code> 的权限改为只有我自己可以用，那么就可以用这个方法更改它的权限。</p>
<p>为了演示，先在文件里加点内容：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;echo \&quot;hello shiyanlou\&quot;&quot;</span> &gt; iphone11</span><br></pre></td></tr></table></figure>

<p>然后修改权限：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">chmod</span> 600 iphone11</span><br><span class="line">$ <span class="built_in">ls</span> -alh iphone11</span><br></pre></td></tr></table></figure>

<p><img src="https://doc.shiyanlou.com/courses/uid871732-20200302-1583149616295" alt="图片描述"></p>
<p>切换到 lilei 用户，尝试写入和读取操作，可以看到 lilei 用户已经不能读写这个 iphone11 文件了：</p>
<p><img src="https://doc.shiyanlou.com/courses/uid871732-20200302-1583149700161" alt="图片描述"></p>
<ul>
<li>方式二：加减赋值操作</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">chmod</span> go-rw iphone11</span><br></pre></td></tr></table></figure>

<p><img src="https://doc.shiyanlou.com/courses/uid871732-20200302-1583150177369" alt="图片描述"></p>
<p><code>g</code>、<code>o</code> 还有 <code>u</code> 分别表示 group（用户组）、others（其他用户） 和 user（用户），<code>+</code> 和 <code>-</code> 分别表示增加和去掉相应的权限。</p>
<h4 id="拓展学习"><a href="#拓展学习" class="headerlink" title="拓展学习"></a>拓展学习</h4><h5 id="adduser-和-useradd-的区别"><a href="#adduser-和-useradd-的区别" class="headerlink" title="adduser 和 useradd 的区别"></a><code>adduser</code> 和 <code>useradd</code> 的区别</h5><p><code>useradd</code> 只创建用户，不会创建用户密码和工作目录，创建完了需要使用 <code>passwd &lt;username&gt;</code> 去设置新用户的密码。</p>
<p><code>adduser</code> 在创建用户的同时，会创建工作目录和密码（提示你设置），做这一系列的操作。</p>
<p><code>useradd</code>、<code>userdel</code> 这类操作更像是一种命令，执行完了就返回。</p>
<p><code>adduser</code> 更像是一种程序，需要你输入、确定等一系列操作。</p>
<h2 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h2><table>
<thead>
<tr>
<th>按键</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td><code>Ctrl+d</code></td>
<td>键盘输入结束或退出终端</td>
</tr>
<tr>
<td><code>Ctrl+s</code></td>
<td>暂停当前程序，暂停后按下任意键恢复运行</td>
</tr>
<tr>
<td><code>Ctrl+z</code></td>
<td>将当前程序放到后台运行，恢复到前台为命令<code>fg</code></td>
</tr>
<tr>
<td><code>Ctrl+a</code></td>
<td>将光标移至输入行头，相当于<code>Home</code>键</td>
</tr>
<tr>
<td><code>Ctrl+e</code></td>
<td>将光标移至输入行末，相当于<code>End</code>键</td>
</tr>
<tr>
<td><code>Ctrl+k</code></td>
<td>删除从光标所在位置到行末</td>
</tr>
<tr>
<td><code>Alt+Backspace</code></td>
<td>向前删除一个单词</td>
</tr>
<tr>
<td><code>Shift+PgUp</code></td>
<td>将终端显示向上滚动</td>
</tr>
<tr>
<td><code>Shift+PgDn</code></td>
<td>将终端显示向下滚动</td>
</tr>
</tbody></table>
<h2 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h2><h3 id="Banner"><a href="#Banner" class="headerlink" title="Banner"></a>Banner</h3><ul>
<li>环境配置<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get update </span><br><span class="line">sudo apt-get install sysvbanner</span><br></pre></td></tr></table></figure></li>
<li>命令代码<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">printerbanner -w 50 A</span><br><span class="line">/*</span><br><span class="line">-w 参数指定打印宽度，因为我们的环境在屏幕中显示比较小，必须要加上宽度限制。</span><br><span class="line">还有两个类似的命令toilet,figlet，也可以安装试用。</span><br><span class="line">*/</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="aafire"><a href="#aafire" class="headerlink" title="aafire"></a>aafire</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get install libaa-bin</span><br><span class="line"><span class="comment"># 提示 command not found ，请自行解决</span></span><br><span class="line">aafire</span><br></pre></td></tr></table></figure>

<p><img src="https://s3.bmp.ovh/imgs/2022/05/11/8a3a00fbf9df6005.gif" alt="gif"></p>
<h3 id="cacaview"><a href="#cacaview" class="headerlink" title="cacaview"></a>cacaview</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get install caca-utils</span><br><span class="line">cacaview &lt;pic_file&gt;</span><br><span class="line">cacademo</span><br><span class="line">cacafire</span><br></pre></td></tr></table></figure>

<p><img src="https://s3.bmp.ovh/imgs/2022/05/17/9033169fe3c5d33b.gif"></p>
<h3 id="asciiview"><a href="#asciiview" class="headerlink" title="asciiview"></a>asciiview</h3><p>执行以下命令安装工具包并下载图片：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install -y aview imagemagick</span><br><span class="line">wget https://labfile.oss.aliyuncs.com/courses/1/Linus.png</span><br></pre></td></tr></table></figure>

<p>执行 <code>asciiview [图片文件名]</code> 即可打开图片</p>
]]></content>
      <categories>
        <category>软件学习</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>软件学习笔记</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL学习</title>
    <url>/2021/07/15/MySQL%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p><strong>本文章针对的是win10&#x2F;win11+MySQL8.0.25</strong></p>
<h1 id="MySQL基础命令"><a href="#MySQL基础命令" class="headerlink" title="MySQL基础命令"></a>MySQL基础命令</h1><h2 id="服务的开启"><a href="#服务的开启" class="headerlink" title="服务的开启"></a>服务的开启</h2><p>可以通过计算机管理中服务查看运行状态</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net stop MySQL80</span><br><span class="line">//关闭MySQL服务器后面可以跟相应的服务</span><br><span class="line">net start MySQL80</span><br><span class="line">//启动MySQL服务器后面可以跟相应的服务</span><br></pre></td></tr></table></figure>

<h2 id="Mysql-登录和退出"><a href="#Mysql-登录和退出" class="headerlink" title="Mysql 登录和退出"></a>Mysql 登录和退出</h2><ul>
<li><p>登录</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mysql<span class="literal">-uroot</span> <span class="literal">-p</span></span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mysql <span class="literal">-hip</span> <span class="literal">-uroot</span> <span class="literal">-p</span>连接目标密码</span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mysql <span class="literal">--host</span>=ip <span class="literal">--user</span>=root <span class="literal">--password</span>=连接目标的密码</span><br></pre></td></tr></table></figure>
</li>
<li><p>退出</p>
<ol>
<li>exit</li>
<li>quit</li>
</ol>
</li>
</ul>
<h2 id="Mysql-8-0密码修改"><a href="#Mysql-8-0密码修改" class="headerlink" title="Mysql 8.0密码修改"></a>Mysql 8.0密码修改</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br><span class="line">use mysql;</span><br><span class="line">update user set authentication_string=&#x27;&#x27; where user=&#x27;root&#x27;;</span><br><span class="line">alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;password&#x27;;-- password(密码)</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>

<h2 id="Mysql-8-0目录结构"><a href="#Mysql-8-0目录结构" class="headerlink" title="Mysql 8.0目录结构"></a>Mysql 8.0目录结构</h2><ul>
<li><p>安装目录</p>
<p>因为8.0以上版本的特殊原因，mysql的my.ini文件位置在C:\ProgramData\MySQL\MySQL Server 8.0的位置上</p>
</li>
</ul>
<h1 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h1><h2 id="SQL定义"><a href="#SQL定义" class="headerlink" title="SQL定义"></a>SQL定义</h2><p>Structured Query Language: 结构化查询语言</p>
<p>其实就是定义了操作所有关系数据库的规则，每一种数据库操作的方式存在不一样的地方。</p>
<h2 id="SQL通用语法"><a href="#SQL通用语法" class="headerlink" title="SQL通用语法"></a>SQL通用语法</h2><ol>
<li>SQL语句可以单行或多行书写，以分句结尾。</li>
<li>可使用空格和缩进来增强语句的可读性</li>
<li>MySQL数据库的SQL语句不区分大小写，关键字建议使用大写</li>
<li>3种注释<ul>
<li>单行注释：– 注释或 # 注释（mysql 特有）（–必须加空格，#可以不加空格）</li>
<li>多行注释：&#x2F;* 注释 *&#x2F;</li>
</ul>
</li>
</ol>
<h2 id="SQL分类"><a href="#SQL分类" class="headerlink" title="SQL分类"></a>SQL分类</h2><p>数据查询语言（所有带有select的语句都是查询语句）</p>
<h3 id="DQL："><a href="#DQL：" class="headerlink" title="DQL："></a>DQL：</h3><h4 id="基本内容"><a href="#基本内容" class="headerlink" title="基本内容"></a>基本内容</h4><ol>
<li><p>语法</p>
<p>select </p>
<p>​	字段列表</p>
<p>from</p>
<p>​	表名列表</p>
<p>where</p>
<p>​	条件列表</p>
<p>group by</p>
<p>​	分组之后的条件</p>
<p>order by</p>
<p>​	排序</p>
<p>limit</p>
<p>​	分页限定</p>
</li>
</ol>
<h4 id="查询方式"><a href="#查询方式" class="headerlink" title="查询方式"></a>查询方式</h4><h5 id="基础查询"><a href="#基础查询" class="headerlink" title="基础查询"></a>基础查询</h5><ol>
<li><p>多个字段的查询</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 查询 姓名 和 年龄</span><br><span class="line">SELECT </span><br><span class="line">	name, -- 姓名</span><br><span class="line">	age -- 年龄</span><br><span class="line">FROM </span><br><span class="line">	student; -- 表格</span><br></pre></td></tr></table></figure>
</li>
<li><p>去除重复</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 去除重复的结果集</span><br><span class="line">SELECT DISTINCT address FROM student;</span><br></pre></td></tr></table></figure>


</li>
<li><p>计算列 </p>
<ul>
<li>一般可以使用四则运算计算一些列的值</li>
<li>ifnull(a,b) 表示a字段的值如果是null将自动转化成b来计算</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT name 名字, math+IFNULL(english,0) FROM student; -- 将其中有null的值换成0</span><br></pre></td></tr></table></figure>
</li>
<li><p>起别名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT name 名字, math+IFNULL(english,0) AS &quot;总分&quot; FROM student; -- 其中as可写可不写，总分的引号可写可不写</span><br></pre></td></tr></table></figure></li>
</ol>
<h5 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h5><ol>
<li><p>where子句后跟条件</p>
</li>
<li><p>运算符</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; 、 &lt; 、 &lt;= 、 &gt;= 、 = 、&lt;&gt;</span><br><span class="line">between ... and ...</span><br><span class="line">in</span><br><span class="line">like; --  _:单个任意字符  %:多个任意字符</span><br><span class="line">is null</span><br><span class="line">and /  &amp;&amp;</span><br><span class="line">or  /  ||</span><br><span class="line">not /  !</span><br></pre></td></tr></table></figure>
</li>
<li><p>示例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 查询年龄大于等于20 小于等于30</span><br><span class="line">select * from student where age &gt;= 20 and age &lt;=30;</span><br><span class="line">select * from student where age between 20 and 30;</span><br><span class="line"></span><br><span class="line">-- 查询年龄为20、 25 、18岁的信息</span><br><span class="line">select * from student where age = 20 or age = 18 or age = 25;</span><br><span class="line">select * from student where age in(20,18,25);</span><br><span class="line"></span><br><span class="line">-- 查询英语成绩为null</span><br><span class="line">select * from student where english = NULL;-- 不正确，因为null值不能用=来判断</span><br><span class="line">select * from student where english is null;</span><br></pre></td></tr></table></figure>
</li>
<li><p>like 查询方式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from student where name like &#x27;马%&#x27;;</span><br><span class="line">select * from student where name like &#x27;_云&#x27;;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ol>
<h5 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h5><ul>
<li><p>语法(order by)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from stu order by math asc;</span><br><span class="line">/*</span><br><span class="line">对stu数据库中的数据根据math字段 从低到高升序排序</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">select * from stu order by math asc, english asc;</span><br><span class="line">/*</span><br><span class="line">先按照数学，后按照英语排序</span><br><span class="line">*/</span><br></pre></td></tr></table></figure>
</li>
<li><p>排序方式</p>
<ul>
<li>ASC：升序，默认使用</li>
<li>DESC：降序</li>
<li>如果有多个排序条件，当前面条件一致时，才继续用后面的排序</li>
</ul>
</li>
</ul>
<h5 id="聚合排序"><a href="#聚合排序" class="headerlink" title="聚合排序"></a>聚合排序</h5><ul>
<li><p>count：计算个数</p>
<ol>
<li>一般选择非空的列：主键</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select count(name) from student;</span><br><span class="line">/*</span><br><span class="line">从student的数据表中，计算有name字段的数据条数(排除NULL的值)</span><br><span class="line">如果要查找所有的数据，也可以打下面的命令</span><br><span class="line">select count(*) from student;</span><br><span class="line">*/</span><br></pre></td></tr></table></figure>
</li>
<li><p>max：计算最大值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select MAX(math) from student;</span><br></pre></td></tr></table></figure>


</li>
<li><p>min：计算最小值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select MIN(math) from student;</span><br></pre></td></tr></table></figure>
</li>
<li><p>sum：求和</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select SUM(math) from student;</span><br><span class="line">/*</span><br><span class="line">这里在计算的时候会排除null的值</span><br><span class="line">*/</span><br></pre></td></tr></table></figure>
</li>
<li><p>avg：计算平均值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select AVG(math) from student;</span><br><span class="line">/*</span><br><span class="line">这里在计算的时候会排除null的值</span><br><span class="line">*/</span><br></pre></td></tr></table></figure></li>
</ul>
<h5 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h5><ol>
<li><p>语法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 按照性别分组。分别查询男、女同学的平均分</span><br><span class="line">select sex, AVG(math) from student group by sex;</span><br><span class="line"></span><br><span class="line">-- 按照性别分组。分别查询男、女同学的平均分，人数</span><br><span class="line">select sex, AVG(math), COUNT(id) from student group by sex;</span><br><span class="line"></span><br><span class="line">-- 按照性别分组。分别查询男、女同学的平均分，人数。要求：分数低于70分的人不参与分组</span><br><span class="line">select sex,AVG(math), COUNT(id) from student where math &gt; 70 group by sex;</span><br><span class="line"></span><br><span class="line">-- 按照性别分组。分别查询男、女同学的平均分，人数。要求：分数低于70分的人不参与分组，分组之后人数必须大于2个人</span><br><span class="line">select sex,AVG(math), COUNT(id) from student where math &gt; 70 group by sex having COUNT(id) &gt;= 2;</span><br></pre></td></tr></table></figure>
</li>
<li><p>注意：</p>
<ul>
<li>选择不包括非空的列进行计算</li>
<li>where 和 having 的区别？<ol>
<li>where 在分组之前进项限定，如果不满足条件，则不参与分组。having 在分组之后进行限定，如果不满足结果，则不会被查询出来</li>
<li>where 后不可以跟聚合函数，having可以进行聚合函数的判断</li>
</ol>
</li>
</ul>
</li>
</ol>
<h5 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h5><ol>
<li><p>语法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 每页显示3条记录</span><br><span class="line">select * from student limit 0,3; -- 第一页</span><br><span class="line">select * from student limit 3,3; -- 第二页</span><br></pre></td></tr></table></figure>
</li>
<li><p>公式</p>
<p>开始的索引 &#x3D; （当前页码-1）* 每页显示的条数</p>
</li>
<li><p>limit 是一个MySQL的方言</p>
</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from table1;-- 从table1中找到所有数据</span><br></pre></td></tr></table></figure>

<h4 id="进阶查询"><a href="#进阶查询" class="headerlink" title="进阶查询"></a>进阶查询</h4><h5 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h5><h4 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h4><ul>
<li><p>概念：对表中的数据进行限定，保证数据的正确性、有效性和完整性</p>
</li>
<li><p>分类</p>
<ol>
<li>主键约束：primary key (非空且唯一)</li>
<li>非空约束：not null</li>
<li>唯一约束：unique  （mysql中唯一约束限定列的值可以有多个null）</li>
<li>外键约束：foreign key</li>
</ol>
</li>
<li><p>用法</p>
<ol>
<li><p>主键约束(primary key)   一张表只能有一个字段为主键即唯一标识</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 创建表的时候添加主键元素</span><br><span class="line">create table student(</span><br><span class="line">	id int primary key,-- 给id添加主键约束</span><br><span class="line">	name varchar(20)</span><br><span class="line">);</span><br><span class="line">-- 删除主键约束</span><br><span class="line">alter table student drop primary key;-- 不需要告诉是哪个字段，因为主键只有一个</span><br><span class="line">-- 建表后添加主键约束的操作</span><br><span class="line">alter table student modify id int primary key;</span><br><span class="line"></span><br><span class="line">-- 创建表时，添加主键约束，并且完成主键自增长</span><br><span class="line">create table student(</span><br><span class="line">	id int primary key AUTO_INCREMENT,-- auto_increment表示自增长（会读取最大的key值从而实现自增）</span><br><span class="line">	name varchar(20)</span><br><span class="line">);</span><br><span class="line"> -- 使用时：</span><br><span class="line"> insert into student value(NULL,&#x27;ccc&#x27;);-- 这里的NULL对应的虽然是主键，但是因为auto_increment所以不会报错</span><br><span class="line"> -- 删除自增长的</span><br><span class="line"> alter table student modify id int;</span><br><span class="line"> -- 添加自动增长</span><br><span class="line"> alter table student modify id int AUTO_INCREMENT;</span><br></pre></td></tr></table></figure>
</li>
<li><p>非空约束</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 创建表时添加约束</span><br><span class="line">create table student(</span><br><span class="line">	id int,</span><br><span class="line">	name varchar(20) not null-- 具体的约束直接写在后面即可</span><br><span class="line">);</span><br><span class="line">-- 创建表后添加约束</span><br><span class="line">alter table student modify name varchar(20) not null;</span><br><span class="line"></span><br><span class="line">-- 将name的非空约束删除</span><br><span class="line">alter table student modify name varchar(20);-- 所以其实只需要重新附上类型即可</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>唯一约束 （mysql中唯一约束限定列的值可以有多个null）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 创建表</span><br><span class="line">create table student(</span><br><span class="line">	id int,</span><br><span class="line">	photo_number varchar(20) unique-- 唯一约束的添加</span><br><span class="line">);</span><br><span class="line">-- 删除唯一约束的唯一办法</span><br><span class="line">alter table student drop index name;</span><br><span class="line"></span><br><span class="line">-- 已经创建表后添加唯一约束的方式</span><br><span class="line">alter table student modify name varchar(20) unique;</span><br></pre></td></tr></table></figure>
</li>
<li><p>外键约束</p>
<ol>
<li><p>创建表时可以添加外键</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table employee(</span><br><span class="line">    dep_id int;-- 外键对应主表的主键</span><br><span class="line">    constraint emp_dept_fk foreign key (dep_id) references department(id)</span><br><span class="line">    -- 注意一定要先创建了department表不然无法连接</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
</li>
<li><p>删除外键</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table employee drop foreign key emp_dept_fk;</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建表之后添加外键</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table employee add constraint emp_dept_fk foreign key (dep_id) references department(id);</span><br></pre></td></tr></table></figure>
</li>
<li><p>级联操作</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 级联更新</span><br><span class="line">alter table employee add constraint emp_dept_fk foreign key (dep_id) references department(id) on update cascade;</span><br><span class="line">-- 级联更新操作就是在原先添加外键的基础上加上 on update cascade 操作</span><br><span class="line"></span><br><span class="line">-- 级联删除</span><br><span class="line">alter table employee add constraint emp_dept_fk foreign key (dep_id) references department(id) on delete cascade;</span><br><span class="line">-- 级联删除操作就是在原先的添加外键的基础上加上 on delete cascade 操作</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
</ol>
</li>
</ul>
<h3 id="DML："><a href="#DML：" class="headerlink" title="DML："></a>DML：</h3><p>数据操作语言（凡是对表当中的数据进行增删改的都是DML）</p>
<h4 id="查看数据"><a href="#查看数据" class="headerlink" title="查看数据"></a>查看数据</h4><ul>
<li><p>语法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from table1;-- 从table1中找到所有数据</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h4><ul>
<li><p>语法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">insert into table1(name,age) value(John,56); </span><br><span class="line">insert into stu value(John,56,NULL);</span><br><span class="line">/*这是一种简化版本，但是必须按顺序给出所有的字段*/</span><br><span class="line">insert into stu value(John,17,&quot;1987-11-11&quot;);</span><br><span class="line">/*注意这里的日期格式的方式*/</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h4><ul>
<li><p>语法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">delete from table1 where id=1;</span><br><span class="line">/*(不推荐使用)注意，其中如果没有where的条件判断，有可能删除所有的数据！！！*/</span><br><span class="line">truncate table stu;</span><br><span class="line">/*(推荐使用)删除表，然后再创建一个一模一样的空表*/</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h4><ul>
<li><p>语法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">updata stu set age = 117 where id = 56;</span><br><span class="line">/*</span><br><span class="line">在stu数据表中，对id为56的数据 修改其age的值为117</span><br><span class="line">updata 表名 set 列名1 = 值1, 列名2 = 值2,... where 条件</span><br><span class="line">如果不加where的操作，将会对表所有的数据进行修改</span><br><span class="line">*/</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="DDL："><a href="#DDL：" class="headerlink" title="DDL："></a>DDL：</h3><h4 id="对数据库的操作"><a href="#对数据库的操作" class="headerlink" title="对数据库的操作"></a>对数据库的操作</h4><h5 id="create-新建"><a href="#create-新建" class="headerlink" title="create 新建"></a>create 新建</h5><ul>
<li><p>创建数据库(不判断是否已经创建)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create database db2;-- (db2表示要建的表的名字)</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建数据库(已经创建的数据库，也不会报错)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create database if not exists db2;</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建db4数据库，判断是否存在，并制定字符集为gbk</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create database if not exists db4 character set gbk;</span><br></pre></td></tr></table></figure></li>
</ul>
<h5 id="rerieve-查询"><a href="#rerieve-查询" class="headerlink" title="rerieve 查询"></a>rerieve 查询</h5><ul>
<li><p>查询所有数据库名称</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure>
</li>
<li><p>查询某个数据库的字符集：查询某个数据库的创建语句</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show create database 数据库名称;</span><br></pre></td></tr></table></figure></li>
</ul>
<h5 id="drop-删除"><a href="#drop-删除" class="headerlink" title="drop 删除"></a>drop 删除</h5><ul>
<li><p>删除数据库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">drop database db2;-- db2(数据库名称)</span><br></pre></td></tr></table></figure>
</li>
<li><p>判断数据库存在，存在再删除</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">drop databases if exists db2;</span><br></pre></td></tr></table></figure></li>
</ul>
<h5 id="alter-修改"><a href="#alter-修改" class="headerlink" title="alter 修改"></a>alter 修改</h5><ul>
<li><p>修改数据库的字符集</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter database db3 character set utf8;-- db3(数据库名称),utf8(字符集名称)</span><br></pre></td></tr></table></figure></li>
</ul>
<h5 id="使用数据库"><a href="#使用数据库" class="headerlink" title="使用数据库"></a>使用数据库</h5><ul>
<li><p>查询当前正在使用的数据库名称</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select database();</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用数据库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use db2;-- db2(数据库名称)</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="对数据库的表进行操作"><a href="#对数据库的表进行操作" class="headerlink" title="对数据库的表进行操作"></a>对数据库的表进行操作</h4><p>insert 增</p>
<ul>
<li><p>语法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table table1(</span><br><span class="line">    列名1 数据类型1,</span><br><span class="line">    列名2 数据类型2,</span><br><span class="line">    列名3 数据类型3,</span><br><span class="line">    列名4 数据类型4,</span><br><span class="line">    列名5 数据类型5</span><br><span class="line">);-- talbe1(表名)并且最后一列不需要加逗号</span><br></pre></td></tr></table></figure>

<p><a href="#shuJuType">数据类型详情</a>（点击跳转）</p>
</li>
<li><p>创建表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table student(</span><br><span class="line">    id int,</span><br><span class="line">    name varchar(32),</span><br><span class="line">    age int,</span><br><span class="line">    score double(4,1), -- 这里的4表示有效数字位数 1表示保留到小数后1位</span><br><span class="line">    birthday date,</span><br><span class="line">    timeshow timestamp</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
</li>
<li><p>赋值表：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table stu like student;-- 这里的student就是上面创建的表</span><br></pre></td></tr></table></figure></li>
</ul>
<p>delete 删</p>
<ul>
<li><p>直接删除</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">drop table student;-- 这里的student就是表名</span><br></pre></td></tr></table></figure>
</li>
<li><p>判断后删除</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">drop table if exists student;-- 这里的student就是表名</span><br></pre></td></tr></table></figure></li>
</ul>
<h5 id="update改"><a href="#update改" class="headerlink" title="update改"></a>update改</h5><ol>
<li><p>修改表名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table table1 rename to table2;-- 这里是将表table1改名为table2</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改表的字符集</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table table1 character set utf8;-- 这里的utf8表示字符集名称</span><br></pre></td></tr></table></figure>
</li>
<li><p>添加一列</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table table1 add name varchar(2); -- 这里的表示添加叫name的一列</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改列名称 类型</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table stu change name1 name2 varchar(10);-- 既改名字又改类型</span><br><span class="line">alter table stu modify name1 varchar(10);-- 修改表的数据类型</span><br></pre></td></tr></table></figure>
</li>
<li><p>删除列</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table stu drop namee;-- 将stu表中的namee列删除</span><br></pre></td></tr></table></figure></li>
</ol>
<h5 id="retrieve查"><a href="#retrieve查" class="headerlink" title="retrieve查"></a>retrieve查</h5><ul>
<li><p>查询某个数据库中所有的表名称</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show tables;</span><br></pre></td></tr></table></figure>
</li>
<li><p>查询表结构</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">desc table1;-- table1(表名)</span><br></pre></td></tr></table></figure></li>
</ul>
<p>主要针对表中的数据进行更改</p>
<h3 id="TCL"><a href="#TCL" class="headerlink" title="TCL:"></a>TCL:</h3><p>事务控制语言</p>
<p><span id="jump">跳转到的地方</span></p>
<p>commit; 事务提交</p>
<p>rollback;事务回滚</p>
<h3 id="DCL："><a href="#DCL：" class="headerlink" title="DCL："></a>DCL：</h3><p>是数据控制语言。</p>
<p>grant；授权</p>
<p>revoke；撤销权限</p>
<h2 id="数据库的设计"><a href="#数据库的设计" class="headerlink" title="数据库的设计"></a>数据库的设计</h2><h3 id="多表之间的关系"><a href="#多表之间的关系" class="headerlink" title="多表之间的关系"></a>多表之间的关系</h3><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><ul>
<li>一对一（了解）</li>
<li>一对多（多对一）</li>
<li>多对多</li>
</ul>
<h4 id="实现关系"><a href="#实现关系" class="headerlink" title="实现关系"></a>实现关系</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 创建旅游线路分类表tab_category</span><br><span class="line">-- cid旅游线路分类主键，自动增长</span><br><span class="line">-- cname旅游线路分类名称非空，唯一，字符串100</span><br><span class="line">create table tab_category (</span><br><span class="line">cid int primary key auto_increment,</span><br><span class="line">cname varchar(100) not null unique</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 创建旅游线路表tab_route</span><br><span class="line">/*</span><br><span class="line">rid旅游线路主键，自动增长</span><br><span class="line">rname旅游线路名称非空，唯一，字符串100</span><br><span class="line">price价格</span><br><span class="line">rdate 上架时间，日期类型</span><br><span class="line">cid 外键，所属分类</span><br><span class="line">*/</span><br><span class="line">create table tab_route(</span><br><span class="line">rid int primary key auto_increment,</span><br><span class="line">rname varchar(100) not null unique,</span><br><span class="line">price double,</span><br><span class="line">rdate date,</span><br><span class="line">cid int,</span><br><span class="line">foreign key (cid) references tab_category(cid)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 创建旅游使用表tab_user</span><br><span class="line">create table tab_user (</span><br><span class="line">uid int primary key auto_increment,</span><br><span class="line">username varchar(100) unique not null,</span><br><span class="line">password varchar(30) not null,</span><br><span class="line">name varchar(100),</span><br><span class="line">birthday date,</span><br><span class="line">sex char(1) default &#x27;男&#x27;,</span><br><span class="line">telephone varchar(11),</span><br><span class="line">email varchar(100)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">创建收藏表tab_favorite</span><br><span class="line">rid 旅游线路id，外键</span><br><span class="line">date 收藏时间</span><br><span class="line">uid用户id，外键</span><br><span class="line">rid和uid不能重复，设置复合主键，同一个用户不能收藏同一个线路两次</span><br><span class="line">*/</span><br><span class="line">create table tab_favorite (</span><br><span class="line">rid int,</span><br><span class="line">date datetime,</span><br><span class="line">uid int,</span><br><span class="line">-- 创建复合主键</span><br><span class="line">primary key(rid,uid),</span><br><span class="line">foreign key (rid) references tab_route(rid),</span><br><span class="line">foreign key(uid) references tab_user(uid)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>



<h3 id="数据库设计的范式"><a href="#数据库设计的范式" class="headerlink" title="数据库设计的范式"></a>数据库设计的范式</h3><ul>
<li><p>概念：设计数据库时，需要遵循一些规范，要遵循后面的范式的时候必须先遵循前面所有的范式</p>
<p>设计关系数据库时，遵从 不同的规范要求，设计出合理的关系型数据库，这些不同的规范要求被称为不同的范式，各种范式呈递次规范，越高的范式数据库冗余越小。</p>
<p>目前关系数据库有六种范式</p>
<ul>
<li>第一范式（1NF）</li>
<li>第二范式（2NF）</li>
<li>第三范式（3NF）</li>
<li>巴斯-科德范式（BCNF）</li>
<li>第四范式（4NF）</li>
<li>第五范式（5NF，完美范式）</li>
</ul>
</li>
<li><p>分类</p>
<ul>
<li><p>第一范式：每一列都是不可分割的原子数据项（即不可拆分）</p>
<p>问题：</p>
<ul>
<li>存在非常严重的数据冗余（重复）：姓名、系名、系主任</li>
<li>数据添加存在问题，存在数据不合法的问题</li>
<li>删除数据存在问题，存在一起消除数据的问题</li>
</ul>
</li>
<li><p>第二范式：在第一范式基础上，非码属性必须完全依赖于候选码（在1NF基础上消除非主属性对主码的部分函数依赖）</p>
<ul>
<li><p>基础概念</p>
<ol>
<li>函数依赖：A–&gt;B，如果通过A属性（属性组）的值，可以确定唯一B属性的值。则称B依赖于A</li>
<li>完全函数依赖：A–&gt;B，如果A是一个属性组，则B属性值得确定需要依赖于A属性组中所有的属性值</li>
<li>部分函数依赖：A–&gt;B，如果A是一个属性组，则B属性值得确定只需要依赖于A属性组中某一些值即可。</li>
<li>传递函数依赖：A–&gt;B，B–&gt;C。如果通过A属性（属性组）的值，可以确定唯一B属性的值，在通过B的属性（属性组）的值可以确定唯一C属性的值，则称C传递函数依赖于A</li>
<li>码：如果一个属性或属性组被其他所有属性完全依赖，则称这个属性或者属性组为该表的码</li>
</ol>
</li>
</ul>
</li>
<li><p>第三范式：在2NF的基础上任何非主属性不依赖于其他非主属性（在2NF基础上消除传递依赖）</p>
</li>
</ul>
</li>
</ul>
<h3 id="数据库的备份和还原"><a href="#数据库的备份和还原" class="headerlink" title="数据库的备份和还原"></a>数据库的备份和还原</h3><ol>
<li><p>命令行：</p>
<p>语法：</p>
<ul>
<li>备份：mysqldump -u用户名 -p密码 数据库名&gt; 保存的路径\保存的名字（a.sql）</li>
</ul>
</li>
</ol>
<h2 id="客户端图形化工具"><a href="#客户端图形化工具" class="headerlink" title="客户端图形化工具"></a>客户端图形化工具</h2><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a><span id="shuJuType">数据类型</span></h2><h3 id="数值类型"><a href="#数值类型" class="headerlink" title="数值类型"></a>数值类型</h3><table>
<thead>
<tr>
<th>类型</th>
<th>大小</th>
<th>范围（有符号）</th>
<th>范围（无符号）</th>
<th>用途</th>
</tr>
</thead>
<tbody><tr>
<td>TINYINT</td>
<td>1 Bytes</td>
<td>(-128，127)</td>
<td>(0，255)</td>
<td>小整数值</td>
</tr>
<tr>
<td>SMALLINT</td>
<td>2 Bytes</td>
<td>(-32 768，32 767)</td>
<td>(0，65 535)</td>
<td>大整数值</td>
</tr>
<tr>
<td>MEDIUMINT</td>
<td>3 Bytes</td>
<td>(-8 388 608，8 388 607)</td>
<td>(0，16 777 215)</td>
<td>大整数值</td>
</tr>
<tr>
<td>INT&#x2F;INTEGER</td>
<td>4 Bytes</td>
<td>(-2 147 483 648，2 147 483 647)</td>
<td>(0，4 294 967 295)</td>
<td>大整数值</td>
</tr>
<tr>
<td>BIGINT</td>
<td>8 Bytes</td>
<td>(-9,223,372,036,854,775,808，9 223 372 036 854 775 807)</td>
<td>(0，18 446 744 073 709 551 615)</td>
<td>极大整数值</td>
</tr>
<tr>
<td>FLOAT</td>
<td>4 Bytes</td>
<td>(-3.402 823 466 E+38，-1.175 494 351 E-38)，0，(1.175 494 351 E-38，3.402 823 466 351 E+38)</td>
<td>0，(1.175 494 351 E-38，3.402 823 466 E+38)</td>
<td>单精度 浮点数值</td>
</tr>
<tr>
<td>DOUBLE</td>
<td>8 Bytes</td>
<td>(-1.797 693 134 862 315 7 E+308，-2.225 073 858 507 201 4 E-308)，0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td>
<td>0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td>
<td>双精度 浮点数值</td>
</tr>
<tr>
<td>DECIMAL</td>
<td>对DECIMAL(M,D) ，如果M&gt;D，为M+2否则为D+2</td>
<td>依赖于M和D的值</td>
<td>依赖于M和D的值</td>
<td>小数值</td>
</tr>
</tbody></table>
<h3 id="日期和时间类型"><a href="#日期和时间类型" class="headerlink" title="日期和时间类型"></a>日期和时间类型</h3><table>
<thead>
<tr>
<th>类型</th>
<th>大小 ( bytes)</th>
<th>范围</th>
<th>格式</th>
<th>用途</th>
</tr>
</thead>
<tbody><tr>
<td><font color="red">DATE</font></td>
<td>3</td>
<td>1000-01-01&#x2F;9999-12-31</td>
<td>YYYY-MM-DD</td>
<td>日期值</td>
</tr>
<tr>
<td>TIME</td>
<td>3</td>
<td>‘-838:59:59’&#x2F;‘838:59:59’</td>
<td>HH:MM:SS</td>
<td>时间值或持续时间</td>
</tr>
<tr>
<td>YEAR</td>
<td>1</td>
<td>1901&#x2F;2155</td>
<td>YYYY</td>
<td>年份值</td>
</tr>
<tr>
<td><font color="red">DATETIME</font></td>
<td>8</td>
<td>1000-01-01 00:00:00&#x2F;9999-12-31 23:59:59</td>
<td>YYYY-MM-DD HH:MM:SS</td>
<td>混合日期和时间值</td>
</tr>
<tr>
<td><font color="red">TIMESTAMP</font></td>
<td>4</td>
<td>1970-01-01 00:00:00&#x2F;2038结束时间是第 <strong>2147483647</strong> 秒，北京时间 <strong>2038-1-19 11:14:07</strong>，格林尼治时间 2038年1月19日 凌晨 03:14:07</td>
<td>YYYYMMDD HHMMSS</td>
<td>混合日期和时间值，时间戳</td>
</tr>
</tbody></table>
<ul>
<li>注意，这里用TIMESTAMP的时候，如果没有赋值，那么默认使用当前的系统时间来自动赋值</li>
</ul>
<h3 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h3><table>
<thead>
<tr>
<th>类型</th>
<th>大小</th>
<th>用途</th>
</tr>
</thead>
<tbody><tr>
<td>CHAR</td>
<td>0-255 bytes</td>
<td>定长字符串</td>
</tr>
<tr>
<td><font color="red">VARCHAR</font></td>
<td>0-65535 bytes</td>
<td>变长字符串 varchar(20)表示20个字</td>
</tr>
<tr>
<td>TINYBLOB</td>
<td>0-255 bytes</td>
<td>不超过 255 个字符的二进制字符串</td>
</tr>
<tr>
<td>TINYTEXT</td>
<td>0-255 bytes</td>
<td>短文本字符串</td>
</tr>
<tr>
<td>BLOB</td>
<td>0-65 535 bytes</td>
<td>二进制形式的长文本数据</td>
</tr>
<tr>
<td>TEXT</td>
<td>0-65 535 bytes</td>
<td>长文本数据</td>
</tr>
<tr>
<td>MEDIUMBLOB</td>
<td>0-16 777 215 bytes</td>
<td>二进制形式的中等长度文本数据</td>
</tr>
<tr>
<td>MEDIUMTEXT</td>
<td>0-16 777 215 bytes</td>
<td>中等长度文本数据</td>
</tr>
<tr>
<td>LONGBLOB</td>
<td>0-4 294 967 295 bytes</td>
<td>二进制形式的极大文本数据</td>
</tr>
<tr>
<td>LONGTEXT</td>
<td>0-4 294 967 295 bytes</td>
<td>极大文本数据</td>
</tr>
</tbody></table>
<h2 id="MySQL代码的登录登出"><a href="#MySQL代码的登录登出" class="headerlink" title="MySQL代码的登录登出"></a>MySQL代码的登录登出</h2><ol>
<li>进入对应的文件夹内，按住shift同时右击打开windowsPowerShell输入cmd</li>
<li>在命令行中输入mysql -u+账户 -p+密码（如果不想显示出来可以先不填密码，后续会让你填的）</li>
<li>成功进入后左下方会显示mysql&gt;的语言表示登录成功！</li>
<li>退出时直接输入exit回车即可</li>
</ol>
<h2 id="MySQL中数据库操作"><a href="#MySQL中数据库操作" class="headerlink" title="MySQL中数据库操作"></a>MySQL中数据库操作</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show databases;                        //查看已有的数据库</span><br><span class="line">create database + 新数据库名字;        //创建数据库</span><br><span class="line">use + 数据库名;                        //表示使用数据库</span><br><span class="line">show tables;                          //在上一行的基础上个表示展示这个数据库中的所有的表</span><br><span class="line">source + 路径;                        //表示将sql文件中的数据导入数据库中</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>软件学习</category>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>软件学习笔记</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Typora快捷键</title>
    <url>/2021/08/11/Typora%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<h1 id="Typora快捷键"><a href="#Typora快捷键" class="headerlink" title="Typora快捷键"></a>Typora快捷键</h1><table>
<thead>
<tr>
<th>按键</th>
<th>操作</th>
</tr>
</thead>
<tbody><tr>
<td>shift + tab</td>
<td>在代码区的代码自动排版</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>软件学习</category>
        <category>Typora快捷键</category>
      </categories>
      <tags>
        <tag>MD语法</tag>
        <tag>MarkDown</tag>
        <tag>markdowm</tag>
        <tag>Typora快捷键</tag>
      </tags>
  </entry>
  <entry>
    <title>VS文件无法在其他电脑运行的问题</title>
    <url>/2021/06/21/VS%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E5%9C%A8%E5%85%B6%E4%BB%96%E7%94%B5%E8%84%91%E8%BF%90%E8%A1%8C%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h2 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a>问题现象</h2><p>当我们在用visual stdio创建工程项目的时候，将含有exe的文件发给别人的时候有可能别人的电脑打不开该文件，报错窗口如下：</p>
<p><img src="/2021/06/21/VS%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E5%9C%A8%E5%85%B6%E4%BB%96%E7%94%B5%E8%84%91%E8%BF%90%E8%A1%8C%E7%9A%84%E9%97%AE%E9%A2%98/vswrong1.png" alt="img"></p>
<p>或者</p>
<p><img src="/2021/06/21/VS%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E5%9C%A8%E5%85%B6%E4%BB%96%E7%94%B5%E8%84%91%E8%BF%90%E8%A1%8C%E7%9A%84%E9%97%AE%E9%A2%98/vswrong2.png" alt="img"></p>
<p>或者</p>
<p><img src="/2021/06/21/VS%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E5%9C%A8%E5%85%B6%E4%BB%96%E7%94%B5%E8%84%91%E8%BF%90%E8%A1%8C%E7%9A%84%E9%97%AE%E9%A2%98/vswrong3.png" alt="img"></p>
<h2 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h2><p>在电脑上拥有vs软件的时候，会自动默认调用相应的文件，但在其他电脑上可能并没有相应的VS软件，自然就不能够打开文件。</p>
<h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><p>该问题分为不同版本进行讲解，请根据自己电脑上的VS版本进行相应的操作</p>
<p>如果是接受文件端想要运行的话，那么就得自行下载VS软件再打开文件，这里附上官方下载的地址：</p>
<p><a href="https://visualstudio.microsoft.com/zh-hans/free-developer-offers/">点击进入VS官网</a></p>
<p>如果是提供软件端想要能适配不同的电脑那么按照下面进行操作：</p>
<h3 id="version2019"><a href="#version2019" class="headerlink" title="version2019"></a>version2019</h3><p>在生成项目的窗口中进行如下操作：</p>
<p><img src="/2021/06/21/VS%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E5%9C%A8%E5%85%B6%E4%BB%96%E7%94%B5%E8%84%91%E8%BF%90%E8%A1%8C%E7%9A%84%E9%97%AE%E9%A2%98/vschuli1.png" alt="img"></p>
<p>在如图所示的界面中依次点击项目，##属性（p）;</p>
<p>随后会跳出下面的界面：</p>
<p><img src="/2021/06/21/VS%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E5%9C%A8%E5%85%B6%E4%BB%96%E7%94%B5%E8%84%91%E8%BF%90%E8%A1%8C%E7%9A%84%E9%97%AE%E9%A2%98/vschuli2.png" alt="img"></p>
<p>在如图所示的界面中依次点击C&#x2F;C++，代码生成，运行库，在运行库的栏目修改为<strong>多线程调试（&#x2F;MTd）</strong></p>
<p><img src="/2021/06/21/VS%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E5%9C%A8%E5%85%B6%E4%BB%96%E7%94%B5%E8%84%91%E8%BF%90%E8%A1%8C%E7%9A%84%E9%97%AE%E9%A2%98/vschuli3.png" alt="img"></p>
<p>随后重新编译相应的代码文件：</p>
<p><img src="/2021/06/21/VS%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E5%9C%A8%E5%85%B6%E4%BB%96%E7%94%B5%E8%84%91%E8%BF%90%E8%A1%8C%E7%9A%84%E9%97%AE%E9%A2%98/vschuli4.png" alt="img"></p>
<p>重新调试后在根目录文件中找到相应的文件即可发送。</p>
<p>如果你不知道exe文件在何处请继续看下面的部分；</p>
<p>一般情况下先找到你的VS工程文件所在的文件夹例如我的工程文件名为Migong</p>
<p><img src="/2021/06/21/VS%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E5%9C%A8%E5%85%B6%E4%BB%96%E7%94%B5%E8%84%91%E8%BF%90%E8%A1%8C%E7%9A%84%E9%97%AE%E9%A2%98/vschuli5.png" alt="img"></p>
<p>点开debug里面的exe文件即是我们需要的exe文件</p>
<p><img src="/2021/06/21/VS%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E5%9C%A8%E5%85%B6%E4%BB%96%E7%94%B5%E8%84%91%E8%BF%90%E8%A1%8C%E7%9A%84%E9%97%AE%E9%A2%98/vschuli6.png" alt="img"></p>
<p>当然如果你的是X64的需要先点开X64的文件夹再找Debug文件夹再打开</p>
<h3 id="version2010"><a href="#version2010" class="headerlink" title="version2010"></a>version2010</h3><p>在这个版本下先按照上个版本打开属性界面</p>
<p><img src="/2021/06/21/VS%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E5%9C%A8%E5%85%B6%E4%BB%96%E7%94%B5%E8%84%91%E8%BF%90%E8%A1%8C%E7%9A%84%E9%97%AE%E9%A2%98/vschuli7.png" alt="img"></p>
<p>然后找到图示的位置，修改为图示的值重新按照上面的方式重新编译即可生成任何win电脑都能打开的exe文件了。</p>
<p>如果你喜欢的话，求打赏哦~</p>
]]></content>
      <categories>
        <category>技术问题</category>
        <category>C语言</category>
        <category>Visual Stdio</category>
      </categories>
      <tags>
        <tag>技术上的问题</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue</title>
    <url>/2021/09/05/Vue/</url>
    <content><![CDATA[<h1 id="Vue学习笔记"><a href="#Vue学习笔记" class="headerlink" title="Vue学习笔记"></a>Vue学习笔记</h1><h2 id="webpack"><a href="#webpack" class="headerlink" title="webpack"></a>webpack</h2><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>在相应的空白根目录下运行</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm init <span class="literal">-y</span></span><br></pre></td></tr></table></figure>

<p>而后就会生成一个名为package.json的配置文件</p>
<p>在当前目录，新建src文件夹</p>
<p>在src文件夹内新建index.html和index.js文件</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">ul&gt;li&#123;这是第$个li&#125;*9</span><br><span class="line"><span class="comment">&lt;!--上述代码回车后的效果同下--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第1个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第2个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第3个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第4个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第5个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第6个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第7个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第8个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第9个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>在根目录下运行</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm install jquery <span class="literal">-S</span> //安装jQuery</span><br></pre></td></tr></table></figure>

<p>在index.js中输入</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1.使用ES6导入语法 jQuery</span></span><br><span class="line"><span class="keyword">import</span> $ <span class="keyword">from</span> <span class="string">&#x27;jquery&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义jQuery的入口函数</span></span><br><span class="line"></span><br><span class="line">$(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    $(<span class="string">&#x27;li:odd&#x27;</span>).<span class="title function_">css</span>(<span class="string">&#x27;background-color&#x27;</span>, <span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">    $(<span class="string">&#x27;li:even&#x27;</span>).<span class="title function_">css</span>(<span class="string">&#x27;background-color&#x27;</span>, <span class="string">&#x27;pink&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>结果在展示的时候发现，这个css效果并没有展示出来。</p>
<p>具体原因是因为浏览器目前不支持ES6的高级语法，</p>
<p>因此我们需要用到webpack</p>
<h3 id="webpack的安装"><a href="#webpack的安装" class="headerlink" title="webpack的安装"></a>webpack的安装</h3><p>在终端运行如下命令，安装webpack相关的两个包</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm install webpack webpack<span class="literal">-cli</span> <span class="literal">-D</span></span><br></pre></td></tr></table></figure>

<p>在原先的package.json的devDependencies框架下能看到相应的包装情况</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;devDependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;webpack&quot;</span>: <span class="string">&quot;^5.52.0&quot;</span>,</span><br><span class="line">        <span class="string">&quot;webpack-cli&quot;</span>: <span class="string">&quot;^4.8.0&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="webpack的配置"><a href="#webpack的配置" class="headerlink" title="webpack的配置"></a>webpack的配置</h3><p>在根目录中，创建名为webpack.config.js的webpack的配置文件并初始化如下的基本配置</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">mode</span>:<span class="string">&#x27;development&#x27;</span> <span class="comment">// mode用来指定构建模式 development 或 production</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在package.json的scripts节点下，新增dev脚本如下</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;script&quot;</span>:&#123;</span><br><span class="line">    <span class="string">&quot;dev&quot;</span>:<span class="string">&quot;webpack&quot;</span></span><br><span class="line">    <span class="comment">//script 节点下的脚本，可以通过npm run执行。例如npm run dev</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>最后在终端中运行npm run dev命令，启动webpack进行项目的打包构建，这其实也就是我们所说的vue的启动</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">asset main.js <span class="number">323</span> KiB [<span class="type">emitted</span>] (name: main)</span><br><span class="line">runtime modules <span class="number">937</span> bytes <span class="number">4</span> modules</span><br><span class="line">cacheable modules <span class="number">282</span> KiB</span><br><span class="line">  ./src/index.js <span class="number">210</span> bytes [<span class="type">built</span>] [<span class="type">code</span> <span class="type">generated</span>]</span><br><span class="line">  ./node_modules/jquery/dist/jquery.js <span class="number">282</span> KiB [<span class="type">built</span>] [<span class="type">code</span> <span class="type">generated</span>]</span><br><span class="line">webpack <span class="number">5.52</span>.<span class="number">0</span> compiled successfully <span class="keyword">in</span> <span class="number">350</span> ms</span><br></pre></td></tr></table></figure>



<p>此外，在运行文件的时候，调用的不在是原先的index.js而是调用在自动生成的dist文件夹下的main.js文件</p>
<h3 id="webpack的压缩"><a href="#webpack的压缩" class="headerlink" title="webpack的压缩"></a>webpack的压缩</h3><p>在原先的webpack.config.js的webpack的配置文件中修改mode参数为production重新run代码即可</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">mode</span>:<span class="string">&#x27;production&#x27;</span> <span class="comment">// mode用来指定构建模式 development 或 production</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></table></figure>

<p>但是压缩会比较慢，所以在开发阶段采用的是development在发布产品的时候修改为production</p>
<h3 id="webpack的默认约定"><a href="#webpack的默认约定" class="headerlink" title="webpack的默认约定"></a>webpack的默认约定</h3><p>在webpack 4.x和5.x的版本，有如下默认的约定</p>
<ol>
<li>默认的打包入口文件为src -&gt;index.js</li>
<li>默认的输出文件路径为dist -&gt;main.js</li>
</ol>
<p>P.S. 可以在webpack.config.js中修改打包的默认约定</p>
<p>在webpack.config.js配置文件中，通过entry节点指定打包的入口。通过output节点指定打包的出口。</p>
<p>例如（在module外加入）：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>(module中加入)</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">entry : path.<span class="title function_">join</span>(_dirname,<span class="string">&#x27;./src/index.js&#x27;</span>)</span><br><span class="line"><span class="comment">//这里的_dirname表示的是pack.config.js当前所在的根目录</span></span><br><span class="line"><span class="attr">output</span>:&#123;</span><br><span class="line">    <span class="attr">path</span>: path.<span class="title function_">join</span>(__dirname,)</span><br><span class="line">    <span class="attr">filename</span>:<span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>最终效果</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&#x27;development&#x27;</span>,<span class="comment">// mode用来指定构建模式 development 或 production</span></span><br><span class="line">    <span class="attr">entry</span>:path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;./src/index.js&#x27;</span>),</span><br><span class="line">    <span class="comment">//告诉需要转化的js相应的路径</span></span><br><span class="line">    <span class="attr">output</span>:&#123;</span><br><span class="line">        <span class="attr">path</span>: path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;./dist&#x27;</span>)<span class="comment">//生成的文件路径</span></span><br><span class="line">        <span class="attr">filename</span>:<span class="string">&#x27;main.js&#x27;</span><span class="comment">//生成的文件名</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>P.S.在这个情况下，虽然可以实现相关的内容，但是存在的问题是每次都需要重新编译，非常的麻烦，所以需要后续的插件</p>
<h3 id="webpack的插件"><a href="#webpack的插件" class="headerlink" title="webpack的插件"></a>webpack的插件</h3><p>通过安装和配置第三方的插件，可以拓展webpack的能力，从而让webpack用起来更方便。最常用的webpack插件有如下两个</p>
<ol>
<li>webpack-dev-server</li>
</ol>
<ul>
<li>类似于node.js阶段用到的nodemon工具（详细信息可以看我的node.js的学习笔记）</li>
<li>每当修改了源代码，webpack会自动进行项目的打包和构建</li>
</ul>
<ol start="2">
<li>html-webpack-plugin</li>
</ol>
<ul>
<li>webpack中的html插件（类似于一个模板引擎插件）</li>
<li>可以通过此插件自定制index.html页面的内容</li>
</ul>
<h4 id="webpack-dev-server的安装"><a href="#webpack-dev-server的安装" class="headerlink" title="webpack-dev-server的安装"></a>webpack-dev-server的安装</h4><p>运行以下命令，在项目中安装此插件</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm install webpack<span class="literal">-dev-server</span> <span class="literal">-D</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>软件学习</category>
        <category>网页</category>
        <category>前端</category>
        <category>Vue学习笔记</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>前端</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>java快捷键</title>
    <url>/2021/07/21/java%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<h1 id="本文章主要是一些IntelliJ-IDEA上面的主要快捷方式"><a href="#本文章主要是一些IntelliJ-IDEA上面的主要快捷方式" class="headerlink" title="本文章主要是一些IntelliJ IDEA上面的主要快捷方式"></a>本文章主要是一些IntelliJ IDEA上面的主要快捷方式</h1><table>
<thead>
<tr>
<th>快捷键</th>
<th align="left">功能</th>
</tr>
</thead>
<tbody><tr>
<td>alt+Enter</td>
<td align="left">中等文本</td>
</tr>
<tr>
<td>Ctrl+Y</td>
<td align="left">删除光标所在行</td>
</tr>
<tr>
<td>Ctrl+D</td>
<td align="left">复制光标所在行的内容，插入光标位置下面</td>
</tr>
<tr>
<td>Ctrl+Alt+L</td>
<td align="left">格式化代码（也就是对齐）</td>
</tr>
<tr>
<td>Ctrl+&#x2F;</td>
<td align="left">单行注释再按取消注释</td>
</tr>
<tr>
<td>Ctrl+Shift+&#x2F;</td>
<td align="left">选中代码注释，多行注释，再按取消</td>
</tr>
<tr>
<td>Alt+Ins</td>
<td align="left">自动生成代码，toString,get,set等方法</td>
</tr>
<tr>
<td>Alt+Shift+上下箭头</td>
<td align="left">移动当前代码行（很好用）</td>
</tr>
<tr>
<td>Shift+F6</td>
<td align="left">将代码所有与选中部分一样的内容进行更改</td>
</tr>
<tr>
<td>Ctrl+F5</td>
<td align="left">编译运行代码</td>
</tr>
<tr>
<td>Ctrl+F2</td>
<td align="left">代码停止运行</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>软件学习</category>
        <category>JAVA</category>
        <category>JAVASE</category>
        <category>快捷键</category>
      </categories>
      <tags>
        <tag>软件学习笔记</tag>
        <tag>JAVA</tag>
        <tag>JAVASE</tag>
      </tags>
  </entry>
  <entry>
    <title>html基础语言</title>
    <url>/2021/07/23/html%E5%9F%BA%E7%A1%80%E8%AF%AD%E8%A8%80/</url>
    <content><![CDATA[<h1 id="一些基本的HTML语法以及CSS语法"><a href="#一些基本的HTML语法以及CSS语法" class="headerlink" title="一些基本的HTML语法以及CSS语法"></a>一些基本的HTML语法以及CSS语法</h1><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--表示使用的网页为html的格式,不是html的标签，而是文档的声明标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--都可以写中文和英文 zh-CN / en--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--UTF-8 万国码 不写就会显示乱码的情况--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>智能财务创新首页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">strong或者b可以加粗      更推荐strong</span></span><br><span class="line"><span class="comment">em或者i可以倾斜          更推荐em</span></span><br><span class="line"><span class="comment">del或者s都可以加删除线   更推荐del</span></span><br><span class="line"><span class="comment">ins或者u都可以加下划线   更推荐ins</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">盒子区域</span></span><br><span class="line"><span class="comment">div 是大盒子，单独占一行</span></span><br><span class="line"><span class="comment">span是小盒子，一行可以有很多个</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;img src = &quot;XXX.jpg&quot; alt = &quot;我叫智能财务网页&quot; title = &quot;我是最棒的智能财务网页&quot; width = &quot;500&quot;/&gt; </span></span><br><span class="line"><span class="comment">该语句块中width即为图像的宽度  height即为图像的高度， 如果两个量只写了一个那么就是按比例缩放， 上述代码即是按宽度等比例缩放</span></span><br><span class="line"><span class="comment">除此之外还有border属性，用于设置图像的边框粗细默认为黑色</span></span><br><span class="line"><span class="comment">编写的时候没有前后顺序，但是每个属性前面都要加上空格</span></span><br><span class="line"><span class="comment">格式为：key = &quot;value&quot;。</span></span><br><span class="line"><span class="comment">alt为替换功能，当图像显示不出来的时候会显示alt中的内容</span></span><br><span class="line"><span class="comment">title是提示功能，鼠标放上去即可在右下方显示出来</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">相对路径</span></span><br><span class="line"><span class="comment">    同一级的路径</span></span><br><span class="line"><span class="comment">/   下一个路径 示例：images/img.jpg 表示的就是在images文件夹下一级内部的img.jpg文件</span></span><br><span class="line"><span class="comment">../ 上一级路径</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;a&gt;可以定义超链接</span></span><br><span class="line"><span class="comment">&lt;a href = &quot;跳转目标&quot; target = &quot;目标窗口的弹出方式&quot;&gt;文本或图像&lt;/a&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">href 用于指定链接目标的url地址，（必须属性）当为标签应用href属性时，它就具有了超链接的功能。（有a就有href）</span></span><br><span class="line"><span class="comment">其中如果说地址还没有想好那么就可以选择用#来暂时性输入，表示空链接，页面中显示的样例也会不一样的</span></span><br><span class="line"><span class="comment">如果睡哦href里面的地址是一个文件或者压缩包，那么就会直接下载这个文件</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">target 用于指定链接页面的打开方式，其中_self为默认值，_blank为在新窗口中打开方式。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">锚点链接的实现(网页内部的跳转)</span></span><br><span class="line"><span class="comment">href里面必须带有# 例：href = &quot;#live&quot;</span></span><br><span class="line"><span class="comment">与之对应的为id = &quot;&quot;</span></span><br><span class="line"><span class="comment">其中需要注意的是id必须加载标签里面；例如：&lt;h3 id = &quot;live&quot;&gt;作品&lt;/h3&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&amp;nbsp;这整一个表示一个空格</span></span><br><span class="line"><span class="comment">%lt;表示小于号</span></span><br><span class="line"><span class="comment">%gt;表示大鱼号</span></span><br><span class="line"><span class="comment">&amp;amp;和号</span></span><br><span class="line"><span class="comment">&amp;yen;人名币符号</span></span><br><span class="line"><span class="comment">&amp;copy;版权符号</span></span><br><span class="line"><span class="comment">&amp;reg;注册商标符号</span></span><br><span class="line"><span class="comment">%deg;摄氏度℃</span></span><br><span class="line"><span class="comment">%plusmm;正负号</span></span><br><span class="line"><span class="comment">%times;乘号</span></span><br><span class="line"><span class="comment">%divide;除号</span></span><br><span class="line"><span class="comment">%sup2;2次方</span></span><br><span class="line"><span class="comment">%sup3:3次方</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">表格标签</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;table&gt;用于定义表格的标签</span></span><br><span class="line"><span class="comment">    &lt;tr&gt; 标签用于定义表格中的行，必须嵌套在&lt;table&gt;&lt;/table&gt;标签中</span></span><br><span class="line"><span class="comment">        &lt;th&gt;单元格内的文字&lt;/th&gt; &lt;th&gt;单元格内的文字&lt;/th&gt; &lt;th&gt;单元格内的文字&lt;/th&gt;</span></span><br><span class="line"><span class="comment">        &lt;td&gt;单元格内的文字&lt;/td&gt; &lt;td&gt;单元格内的文字&lt;/td&gt;&lt;td&gt;单元格内的文字&lt;/td&gt; </span></span><br><span class="line"><span class="comment">        用于定义表格中的单元格，必须嵌套在&lt;tr&gt;&lt;/tr&gt;标签中（指表格数据，也就是单元格的内容）</span></span><br><span class="line"><span class="comment">    &lt;/tr&gt;</span></span><br><span class="line"><span class="comment">&lt;/table&gt;</span></span><br><span class="line"><span class="comment">th为表头单元格标签，剩余的可以用td来显示数据</span></span><br><span class="line"><span class="comment">一般情况加th作为表头单元格会加粗</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">border 表示的是边框，默认为 &quot;&quot;,表示没有边框 可以填写1</span></span><br><span class="line"><span class="comment">cellpadding 像素值  规定单元边沿与其内容之间的空白，默认1像素。（主要指的是内容）</span></span><br><span class="line"><span class="comment">cellspacing 像素值  规定单元格之间的空白，默认2像素。（单元格和单元格之间的空白距离 为0即为没有空隙）</span></span><br><span class="line"><span class="comment">width       像素值或者百分比  规定表格的宽度。</span></span><br><span class="line"><span class="comment">height      (同理)表示高度     （width 和 height 如果单单改变其中一个部分的内容的时候，那么会整体一起发生改变。）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">标签内部加入 align = &quot;center&quot; 可以使得该部分变成居中的设计</span></span><br><span class="line"><span class="comment">除此之外还有left和right分别表示左右的对齐</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;thead&gt;&lt;/thead&gt; 表格头区域</span></span><br><span class="line"><span class="comment">&lt;tbody&gt;&lt;/tbody&gt; 表格主体区域</span></span><br><span class="line"><span class="comment">（但是上述的两个只能放在&lt;table&gt;&lt;/table&gt;里面）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">合并单元格方式</span></span><br><span class="line"><span class="comment">rowspan 跨行合并单元格</span></span><br><span class="line"><span class="comment">colspan 跨列合并单元格</span></span><br><span class="line"><span class="comment">（后续加入= &quot;合并单元格个数&quot;）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;ul&gt;无序列表 //里面只能放li标签，什么其他什么都不行 显示的时候会自动在前面加上一个&#x27; · &#x27;符号</span></span><br><span class="line"><span class="comment">    中间可以加入&lt;li&gt;列表项&lt;/li&gt; //li里面放什么都可以</span></span><br><span class="line"><span class="comment">&lt;\ul&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;ol&gt;有序列表，结果会自己加上一些小序号</span></span><br><span class="line"><span class="comment">    &lt;li&gt;列表项1&lt;/li&gt;</span></span><br><span class="line"><span class="comment">    &lt;li&gt;列表项2&lt;/li&gt;</span></span><br><span class="line"><span class="comment">    &lt;li&gt;列表项3&lt;/li&gt;</span></span><br><span class="line"><span class="comment">    &lt;li&gt;列表项4&lt;/li&gt;</span></span><br><span class="line"><span class="comment">&lt;/ol&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;dl&gt;自定义列表，结果上下会有一定的小分隔，其中dd部分前面会有空格部分</span></span><br><span class="line"><span class="comment">   &lt;dt&gt;自定义列表的第一行&lt;/dt&gt;</span></span><br><span class="line"><span class="comment">   &lt;dd&gt;自定义列表后面的小窗口&lt;/dd&gt;</span></span><br><span class="line"><span class="comment">&lt;/dl&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">表单的格式</span></span><br><span class="line"><span class="comment">&lt;form action = &quot;dempo.php&quot; method = &quot;POST&quot; name = &quot;name1&quot;&gt; oiiio09 </span></span><br><span class="line"><span class="comment">&lt;/form&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;label&gt;</span></span><br><span class="line"><span class="comment">&lt;/lable&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;form&gt;</span></span><br><span class="line"><span class="comment">&lt;select&gt;</span></span><br><span class="line"><span class="comment">    &lt;option&gt;选项一&lt;/option&gt;</span></span><br><span class="line"><span class="comment">    &lt;option selected = &quot;selected&quot;&gt;选项二&lt;/option&gt;   //表示先显示的是选项二</span></span><br><span class="line"><span class="comment">&lt;/select&gt;</span></span><br><span class="line"><span class="comment">&lt;/form&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;style&gt; 必须写在head中</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    p &#123;</span></span><br><span class="line"><span class="comment">        color : red; </span></span><br><span class="line"><span class="comment">        font-size : 15px; </span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    表示对p格式的内容进行修改样式</span></span><br><span class="line"><span class="comment">    表示修改颜色</span></span><br><span class="line"><span class="comment">    表示修改字体大小</span></span><br><span class="line"><span class="comment">&lt;/style&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">选择器部分！！！</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">基础选择器</span></span><br><span class="line"><span class="comment">类选择器</span></span><br><span class="line"><span class="comment">id选择器</span></span><br><span class="line"><span class="comment">通配符选择器</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><h3 id="背景属性"><a href="#背景属性" class="headerlink" title="背景属性"></a>背景属性</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">background-color</span>: <span class="number">#FFFFFF</span>;</span><br><span class="line"><span class="comment">/*背景颜色*/</span></span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">url</span>();</span><br><span class="line"><span class="comment">/*背景图片*/</span></span><br><span class="line"><span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line"><span class="comment">/*背景图片重复 </span></span><br><span class="line"><span class="comment">repeat 默认。背景图像将在垂直方向和水平方向上重复</span></span><br><span class="line"><span class="comment">repeat-x 背景图片将在水平方向上重复</span></span><br><span class="line"><span class="comment">repeat-y 背景图片将在垂直方向上重复</span></span><br><span class="line"><span class="comment">no-repeat 背景图像只显示一次 </span></span><br><span class="line"><span class="comment">inherit 规定应该从父元素继承 background-repeat属性的设置*/</span></span><br></pre></td></tr></table></figure>



<h3 id="边界样式"><a href="#边界样式" class="headerlink" title="边界样式"></a>边界样式</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">margin-top</span>:<span class="number">10px</span>;</span><br><span class="line"><span class="comment">/*上边界值*/</span></span><br><span class="line"><span class="attribute">margin-right</span>: <span class="number">10px</span>;</span><br><span class="line"><span class="comment">/*右边界值*/</span></span><br><span class="line"><span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line"><span class="comment">/*下边界值*/</span></span><br><span class="line"><span class="attribute">margin-left</span>: <span class="number">10px</span>;</span><br><span class="line"><span class="comment">/*左边界值*/</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>软件学习</category>
        <category>HTML</category>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>前端</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>jenkins项目搭建</title>
    <url>/2023/08/21/jenkins%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Java</category>
        <category>Jenkins</category>
      </categories>
      <tags>
        <tag>Jenkins</tag>
        <tag>部署</tag>
      </tags>
  </entry>
  <entry>
    <title>交叉验证法</title>
    <url>/2021/05/21/%E4%BA%A4%E5%8F%89%E9%AA%8C%E8%AF%81%E6%B3%95/</url>
    <content><![CDATA[<h1 id="原理及应用"><a href="#原理及应用" class="headerlink" title="原理及应用"></a>原理及应用</h1><p>“交叉验证法”(cross validation)先将数据集£1划分为fc个大小相似的互斥子集,即D &#x3D; D1U D2 U… U D&amp;, Di n Dj 二 0 (i # j).每个子集A都尽可能保持数据分布的一致性,即从D中通过分层采样得到.然后,每次用k - 1个子集的并集作为训练集,余下的那个子集作为测试集;这样就可获得fc 组训练&#x2F;测试集,从而可进行A次训练和测试,最终返回的是这A个测试结果的均值.显然,交叉验证法评估结果的稳定性和保真性在很大程度上取决于fc 的取值,为强调这一点,通常把交叉验证法称为”A折交叉验证”(fc-fold cross validation). k最常用的取值是10,此时称为10折交叉验证;其他常用的k值有5、 20等.图2.2给出了 10折交叉验证的示意图.</p>
<p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@68a80616bcfb14f0cc070a29a18a728a1f96d4db/2021/05/24/79caea00be4f5a50ba8747494528e974.png"></p>
]]></content>
      <categories>
        <category>人工智能学习</category>
        <category>理论技术</category>
        <category>评估方法</category>
      </categories>
      <tags>
        <tag>人工智能学习</tag>
        <tag>交叉验验证法</tag>
      </tags>
  </entry>
  <entry>
    <title>中级财务会计考试要点汇总</title>
    <url>/2021/07/01/%E4%B8%AD%E7%BA%A7%E8%B4%A2%E5%8A%A1%E4%BC%9A%E8%AE%A1%E8%80%83%E8%AF%95%E8%A6%81%E7%82%B9%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[<h2 id="第一章-总论"><a href="#第一章-总论" class="headerlink" title="第一章 总论"></a>第一章 总论</h2><h3 id="会计的基本前提"><a href="#会计的基本前提" class="headerlink" title="会计的基本前提"></a>会计的基本前提</h3><p>会计假设，是会计确认、计量和报告赖以存在的基本前提条件，包括会计主体、持续经营、会计分期和货币计量</p>
<h4 id="会计主体"><a href="#会计主体" class="headerlink" title="会计主体"></a>会计主体</h4><p>会计主体，是指会计工作为之服务的特定单位，是企业会计确认、计量和报告的空间范围。</p>
<p>可以是一个特定的企业，也可以是一个企业的某一特定部分（分厂、分公司等），也可以是由若干家企业通过控股关系组织起来的集团公司</p>
<p>会计主体不同于法律主体</p>
<h4 id="持续经营"><a href="#持续经营" class="headerlink" title="持续经营"></a>持续经营</h4><ul>
<li><strong>持续经营是会计分期的前提</strong></li>
</ul>
<p>持续经营是指在可以预见的将来，企业将会按照当前的规模和状态继续经营下去，不会停业，也不会大规模削减业务</p>
<h4 id="会计分期"><a href="#会计分期" class="headerlink" title="会计分期"></a>会计分期</h4><p>会计分期，是指将一个企业持续经营的生产经营活动划分为一个个连续的、长短相同的期间，分期确定各个会计期间的收入、费用和利润，反映每一会计期末的资产、负债和所有者权益，从而及时向财务报告使用者提供有关企业财务状况、经营成果和现金流量的信息</p>
<h4 id="货币计量"><a href="#货币计量" class="headerlink" title="货币计量"></a>货币计量</h4><p>货币计量，是指会计主体在财务会计确认、计量和报告时以货币计量，反映会计主体的生产经营活动。</p>
<p>在会计确认、计量和报告过程中之所以选择货币为基础进行计量，是由货币本身的属性决定的。</p>
<h3 id="财务会计信息质量要求的解释"><a href="#财务会计信息质量要求的解释" class="headerlink" title="财务会计信息质量要求的解释"></a>财务会计信息质量要求的解释</h3><p><img src="/2021/07/01/%E4%B8%AD%E7%BA%A7%E8%B4%A2%E5%8A%A1%E4%BC%9A%E8%AE%A1%E8%80%83%E8%AF%95%E8%A6%81%E7%82%B9%E6%B1%87%E6%80%BB/1.1.png" alt="img"></p>
<p>其中需要特别注意的是<font color=#ff0099><strong>实质重于形式</strong></font>（尤其是在融资类题目中需要注意！）</p>
<h4 id="相关性"><a href="#相关性" class="headerlink" title="相关性"></a>相关性</h4><p>指财务报告提供的会计信息应与信息使用者决策相关</p>
<ul>
<li>预测价值</li>
</ul>
<p>指会计信息能够帮助投资者预测企业的财务状况、经营成果和现金流量等情况。</p>
<ul>
<li>反馈价值</li>
</ul>
<p>指投资者在获得会计信息后，能够据以修正某些过去的决策和实施方案，把过去决策所产生的结果反馈给决策者，进行对比来验证过去的决策是否正确，来防止犯同样的 错误。也有助于未来的决策</p>
<h4 id="可靠性"><a href="#可靠性" class="headerlink" title="可靠性"></a>可靠性</h4><p>指会计信息应如实表述所要反映的对象，不受错误或偏向的影响</p>
<p>可靠性要求会计信息具有<strong>可验证性</strong>、<strong>如实反馈</strong>、和<strong>中立性</strong></p>
<ul>
<li>可验证性</li>
</ul>
<p>是指会计信息可经得住复核和验证，即由不同的会计人员分别采用同一会计方法，对同一事项加以会计处理，可以得到相同或者相似的结果</p>
<ul>
<li>如实反馈</li>
</ul>
<p>简言之会计记录和报告不加任何修饰，内容真实、数字准确</p>
<ul>
<li>中立性</li>
</ul>
<p>指会计人员形成会计信息的过程和结果不能有特定的偏向，不能在客观的信息上附加某种主观成分以满足特定信息使用集团的需要，即会计人员处理会计信息时应保持不偏不倚的态度，否则信息的可靠性就会收到质疑</p>
<h4 id="可比性"><a href="#可比性" class="headerlink" title="可比性"></a>可比性</h4><p>指财务会计信息在同一企业不同时期之间和不同企业同一时期之间应当相互可比，从而使会计信息使用者能识别不同企业经济事项之间的相似之处和不同之处。</p>
<ul>
<li>同一企业不同时期可比</li>
</ul>
<p>内涵即为采用的会计政策应当前后保持一致，不得随意变更</p>
<ul>
<li>不同企业相同会计期间可比</li>
</ul>
<p>方法：制定统一的会计准则或者会计制度</p>
<h4 id="可理解性"><a href="#可理解性" class="headerlink" title="可理解性"></a>可理解性</h4><p>要求提供的会计信息应当清晰明了、易于理解</p>
<p>其中需要两方面的配合</p>
<ul>
<li>1 信息的使用者应当具备对信息的理解能力</li>
<li>2 财务信息的提供者应当了解不同信息使用者的需求，按照会计准则的要求，尽量以最易于被接受和理解的方式来提供会计信息，以满足使用者的需要</li>
</ul>
<h4 id="实质重于形式实质重于形式（特别是融资的情况下）"><a href="#实质重于形式实质重于形式（特别是融资的情况下）" class="headerlink" title="实质重于形式实质重于形式（特别是融资的情况下）"></a><font color=#ff0099><strong>实质重于形式实质重于形式（特别是融资的情况下）</strong></font></h4><p>当在企业发生的交易或者事项其经济实质和法律性质不一致的时候，要按照<strong>经济实质</strong>经行会计确认、计量和报告</p>
<p><font color = #ff0099><strong>融资租入固定资产按照固有固定资产进行折旧</strong></font></p>
<h4 id="重要性"><a href="#重要性" class="headerlink" title="重要性"></a>重要性</h4><p>要求企业提供的会计信息应当反映与企业财务状况、经营成果和现金流量有关的所有重要交易或者事项</p>
<h4 id="谨慎性（稳健性）"><a href="#谨慎性（稳健性）" class="headerlink" title="谨慎性（稳健性）"></a>谨慎性（稳健性）</h4><p>不应高估资产或者收益、低估负债或者费用。</p>
<p>通常的处理为：</p>
<ul>
<li>应预计可能应预计可能产生的损失</li>
<li>但不预计可能产生的收益和过高估计资产的价值</li>
</ul>
<h4 id="及时性"><a href="#及时性" class="headerlink" title="及时性"></a>及时性</h4><p>这个很简单，就是应当及时进行确认、计量和报告，不得<strong>提前</strong>或者<strong>延后</strong>。<strong>提前</strong>不能忽略</p>
<h3 id="计量属性"><a href="#计量属性" class="headerlink" title="计量属性"></a><font color=#ff0099><strong>计量属性</strong></font></h3><p>指被计量客体的特征或者外在表现形式， 如一个物体的长、宽、 高、体积、 数址等。 具体到会计要素就是指资产、 负债等要素可以用财务形式定量化的方面， 即能用货币单位计量的方面。</p>
<p>简言之即为将一个物体通过一些方式变为可以用货币单位计量</p>
<h4 id="历史成本"><a href="#历史成本" class="headerlink" title="历史成本"></a>历史成本</h4><p>历史成本又称为实际成本， 就是取得或制造某项财产物资时 所实际支付的现金或者其他等价物。</p>
<p>在历史成本计量下， 资产按照其购置时支 付的现金或者现金等价物的金额， 或者按照购置资产时所付出的对价的公允价 值计批。 </p>
<p>历史成本是最基本的计量属性， 长期以来在财务会计中受到普遍运用。</p>
<p><font color=#ff0099><strong>财务报表上全都是历史成本</strong></font></p>
<h4 id="重置成本（现行成本）"><a href="#重置成本（现行成本）" class="headerlink" title="重置成本（现行成本）"></a>重置成本（现行成本）</h4><p>指按照当前市场条件， 重新取得同样一项资产所需支付的现金或现金等价物金额。 </p>
<p>在重置成本计量下：</p>
<ul>
<li>资产按照现在购买相同或者相似资产所需支付的现金或者现金等价物的金额计量。 </li>
<li>负债按照现在偿付该项债务所需支付的现金或者现金等价物的金额计量。</li>
</ul>
<p>主要优点：</p>
<ul>
<li>按现行成本计证的费用与按现 行价格计量的收入配比， <strong>可以避免在价格变动时虚计利润</strong></li>
<li>期末资产负债表提供以现行成本为基础的现时信息， <strong>反映了现时财务状况</strong></li>
<li>现行价格的收入与现行成本相配比实现逻辑上的统一性</li>
<li>便于区分管理当局的经营业绩和资产持有利得。</li>
</ul>
<h4 id="可变现净值（预期脱手价格）"><a href="#可变现净值（预期脱手价格）" class="headerlink" title="可变现净值（预期脱手价格）"></a>可变现净值（预期脱手价格）</h4><p>指在正常生产经营过程中， 以预计售价减去进一步加工成本和销售所必需的预计税金、 费用后的净值。</p>
<p>在可变现净值计量下， 资产按照其正常对外销售所能收到现金或者现金等价物的金额扣减该资产至完工时估计将要发生的成本、 估计的销售费用以及相关税金后的金额计量。</p>
<h4 id="现值（不考，建议跳过）"><a href="#现值（不考，建议跳过）" class="headerlink" title="现值（不考，建议跳过）"></a>现值（不考，建议跳过）</h4><p>指对未来现金流扯以恰当的折现率进行折现后的价值， 是考虑货币时间价值因素等的一种计量属性。</p>
<p> 从严格意义上来讲， 现值并不是一项独立的计量属性， 现值只是任何一种现金流量同利率的结合， 是一种可以达到某种计量属性的手段和技术。 </p>
<p>从实务操作的角度看，现值的可靠性也较差。</p>
<h4 id="公允价值（重点）"><a href="#公允价值（重点）" class="headerlink" title="公允价值（重点）"></a><font color=#ff0099><strong>公允价值（重点）</strong></font></h4><p>公允价值是指市场参与者在计量日发生的有序交易中， 出售一项资产所能收到或者转移一项负债所需支付的价格</p>
<h2 id="第二章-货币资金"><a href="#第二章-货币资金" class="headerlink" title="第二章 货币资金"></a>第二章 货币资金</h2><h3 id="货币资金的内容"><a href="#货币资金的内容" class="headerlink" title="货币资金的内容"></a>货币资金的内容</h3><p>货币资金即存在于货币形态的资金，是指可以立即投入流通，用以购买商品或劳务，或用以偿还债务的交换媒介。</p>
<p>按其形态和用途不同可分为<font color=#ff0099><strong>库存现金、银行存款和其他货币资金</strong></font>。其他货币资金又包括外埠存款、银行汇票存款、银行本票存款、信用证保证金存款、信用卡存款、存出投资款等。</p>
<h3 id="现金的使用范围"><a href="#现金的使用范围" class="headerlink" title="现金的使用范围"></a><font color=#ff0099><strong>现金的使用范围</strong></font></h3><p>(1)	职工工资、 津贴<br>(2)	个人劳务报酬<br>(3)	根据国家规定颁发给个人的科学技术、文化艺术、体育等各种奖金<br>(4)	各种劳保、 福利费用以及国家规定的对个人的其他支出<br>(5)	向个人收购衣副产品和其他物资的价款<br>(6)	出差人员必须随身携带的差旅费<br>(7)	结算起点以下的零星支出<br>(8)	中国人民银行确定需要支付现金的其他支出</p>
<h3 id="现金的核算（老师就提了一下下）"><a href="#现金的核算（老师就提了一下下）" class="headerlink" title="现金的核算（老师就提了一下下）"></a>现金的核算（老师就提了一下下）</h3><h4 id="现全的序时核算"><a href="#现全的序时核算" class="headerlink" title="现全的序时核算"></a>现全的序时核算</h4><p>指根据现金的收支业务逐日逐笔地记录现金的增减及结存情况。 方法是设置与登记现金日记账。</p>
<p>现金日记账是核算和监督现金日常收付结 存情况的序时账簿， 通过它可以全面、 连续地了解和掌握企业每日现金的收支动态和库存余额， 为日常分析、 检查企业的现金收支活动提供资料。</p>
<h4 id="现金的总分类核算"><a href="#现金的总分类核算" class="headerlink" title="现金的总分类核算"></a>现金的总分类核算</h4><p>库存现金总分类账， 可以根据现金收、付款凭证和从银行提取现金时填制的银行存款付款凭证逐笔登记， 如果企业日常现金收支业务量较大， 为了简化核算 工作， 可以根据实际情况， 采用科目汇总表或汇总记账凭证的核算形式， 根据科目汇总表或汇总收付款凭证定期或月终登记 “库存现金” 总账。</p>
<h4 id="备用金的核算"><a href="#备用金的核算" class="headerlink" title="备用金的核算"></a>备用金的核算</h4><p>备用金是指企业预付给职工和内部有关单位用作差旅费、 零星采购和零星开支事后需要报销的款项。</p>
<p>用金的总分类核算， 应设置 <strong>“其他应收款”</strong>科目， 用来核算企业的备用金与各种赔款、 罚款及应向职工收取的各种垫付款项等。在备用金数额较大或业务较多的企业中， 可以将备用金业务从 “其他应收款“ 科目中划分出来， 单独 设置 <strong>“备用金”</strong>科目进行核算。</p>
<h3 id="现金的清查"><a href="#现金的清查" class="headerlink" title="现金的清查"></a><font color=#ff0099><strong>现金的清查</strong></font></h3><p>对于现金清查中发现的账实不符， 即现金溢缺情况， 通过<font color=#ff0099><strong>待处理财产损溢一待处理流动资产损溢</strong></font>科目进行核算。</p>
<h4 id="查明原因前"><a href="#查明原因前" class="headerlink" title="查明原因前"></a>查明原因前</h4><h5 id="发现短缺的现金"><a href="#发现短缺的现金" class="headerlink" title="发现短缺的现金"></a>发现短缺的现金</h5><p>按短缺的金额</p>
<ul>
<li>借记 待处理财产损溢一待处理流动资产损溢 科目</li>
<li>贷记 库存现金 科目</li>
</ul>
<h5 id="发现溢余的现金"><a href="#发现溢余的现金" class="headerlink" title="发现溢余的现金"></a>发现溢余的现金</h5><p>按溢余的金额</p>
<ul>
<li>借记 库存现金 科目</li>
<li>贷记 待处理财产损溢一待处理流动资产损溢 科目</li>
</ul>
<h4 id="查明原因后"><a href="#查明原因后" class="headerlink" title="查明原因后"></a>查明原因后</h4><h5 id="如为现金短缺"><a href="#如为现金短缺" class="headerlink" title="如为现金短缺"></a>如为现金短缺</h5><h6 id="属于应由责任人赔偿的部分"><a href="#属于应由责任人赔偿的部分" class="headerlink" title="属于应由责任人赔偿的部分"></a>属于应由责任人赔偿的部分</h6><ul>
<li>借记 <font color=#ff0099><strong>其他应收款一应收现金短缺款</strong></font> 科目</li>
<li>贷记 待处理财产损溢一—待处理流动资产损溢 科目</li>
</ul>
<h6 id="属于无法查明的其他原因"><a href="#属于无法查明的其他原因" class="headerlink" title="属于无法查明的其他原因"></a>属于无法查明的其他原因</h6><p>根据管理权限， 经批准后处理</p>
<ul>
<li>借记 <font color=#ff0099><strong>管理费用一现金短缺</strong></font> 科目</li>
<li>贷记 待处理财产损溢一一待处理流动资产损溢 科目。</li>
</ul>
<h5 id="如为现金溢余"><a href="#如为现金溢余" class="headerlink" title="如为现金溢余"></a>如为现金溢余</h5><h6 id="属于应支付给有关人员或单位的"><a href="#属于应支付给有关人员或单位的" class="headerlink" title="属于应支付给有关人员或单位的"></a>属于应支付给有关人员或单位的</h6><ul>
<li>借记 待处理财产损溢一一待处理流动资产损溢 科目</li>
<li>贷记 <font color=#ff0099><strong>其他应付款一应付现金溢余</strong></font> 科目</li>
</ul>
<h6 id="属于无法查明原因的现金溢余经批准后"><a href="#属于无法查明原因的现金溢余经批准后" class="headerlink" title="属于无法查明原因的现金溢余经批准后"></a>属于无法查明原因的现金溢余经批准后</h6><ul>
<li>借记 待处理财产损溢一待 处理流动资产损溢 科目</li>
<li>贷记 <font color=#ff0099><strong>营业外收入一现金溢余</strong></font> 科目。</li>
</ul>
<h4 id="例题"><a href="#例题" class="headerlink" title="例题"></a><font color=#ff0099><strong>例题</strong></font></h4><p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@b7063f7610ff8616cc1a5559824dcdac94549684/2021/07/02/25c2747a49c100bc21cb39b43c0a59c2.png"></p>
<h3 id="其他货币资金"><a href="#其他货币资金" class="headerlink" title="其他货币资金"></a>其他货币资金</h3><h4 id="内容"><a href="#内容" class="headerlink" title="内容"></a><font color=#ff0099><strong>内容</strong></font></h4><p>其他货币资金是指除库存现金、银行存款之外的货币资金， 包括外埠存款、 银行汇票存款、 银行本票存款、 信用卡存款、 信用证保证金存款以及存出投资款等。</p>
<ul>
<li>外埠存款， 是指企业到外地进行临时或零星采购时， 汇往采购地银行开立采购专户的款项</li>
<li>银行汇票存款， 是指企业为取得银行汇票按照规定存入银行的款项</li>
<li>银行本票存款， 是指企业为取得银行本票按照规定存入银行的款项</li>
<li>信用卡存款， 是指企业为取得信用卡按照规定存入银行的款项</li>
<li>信用证保证金存款． 是指企业为取得信用证按规定存入银行的保证金</li>
<li>存出投资款， 是指企业已存入证券公司但尚未进行短期投资的款项</li>
</ul>
<h2 id="第三章-应收账款"><a href="#第三章-应收账款" class="headerlink" title="第三章 应收账款"></a>第三章 应收账款</h2><h3 id="带息的应收票据"><a href="#带息的应收票据" class="headerlink" title="带息的应收票据"></a>带息的应收票据</h3><p>应收票据利息＝应收票据面值x票面利率x期限</p>
<p>为了计算方便， 一般月度按30天计算， 季度按90天计算， 年度按360天计算。</p>
<p>通常出票日和到期日， 只能计算其中的一天， 即 “算头不算尾” 或 “算尾不算头＂。</p>
<h4 id="例题-1"><a href="#例题-1" class="headerlink" title="例题"></a><font color=#ff0099><strong>例题</strong></font></h4><p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@442a8ce84dd817edc5648900a6d12fceaa114216/2021/07/02/d1efcf9b1667cfdfc9405f05685dcae1.png" alt="img"></p>
<h3 id="应收票据的贴现（必考）"><a href="#应收票据的贴现（必考）" class="headerlink" title="应收票据的贴现（必考）"></a><font color=#ff0099><strong>应收票据的贴现</strong></font>（必考）</h3><p>贴现息＝票据到期值x贴现率x贴现期<br>贴现所得金额＝票据到期值－贴现利息</p>
<h4 id="例题-2"><a href="#例题-2" class="headerlink" title="例题"></a><font color=#ff0099><strong>例题</strong></font></h4><p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@7a4ac2bd9d5c55f8057aa5a9e5ba13da9b18750b/2021/07/02/5bd6068f5c590bd25f5ea8cec7550d67.png"></p>
<p>这个例题必须看懂！尤其是第②部分</p>
<h3 id="应收账款的确认"><a href="#应收账款的确认" class="headerlink" title="应收账款的确认"></a>应收账款的确认</h3><p>当考虑有关的折扣因素。</p>
<ul>
<li><p>总价法是应收账款按未扣除现金折扣的金额作为入账价值。 </p>
</li>
<li><p>净价法是将扣减最大现金折扣后的金额作为应收账款的入账价值。</p>
</li>
</ul>
<p>对现金折扣， 我国要求对应收账款按总价法确定。</p>
<h3 id="应收款项减值"><a href="#应收款项减值" class="headerlink" title="应收款项减值"></a>应收款项减值</h3><p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@75ba9d2646e640b75edfc51f0cb6ed4d06177191/2021/07/02/a47a8311c55c9f80f444fd2448e32658.png"></p>
<h2 id="第四章-存货"><a href="#第四章-存货" class="headerlink" title="第四章 存货"></a>第四章 存货</h2><h3 id="存货的分类（按照经济用途分类）"><a href="#存货的分类（按照经济用途分类）" class="headerlink" title="存货的分类（按照经济用途分类）"></a>存货的分类（按照经济用途分类）</h3><h4 id="原材料"><a href="#原材料" class="headerlink" title="原材料"></a>原材料</h4><p>指企业在生产过程中经加工改变其形态或性质并构成产品主要实体的各种原料及主要材料、 辅助材料、 外购半成品（外购件）、 修理用备件、 包装材料、燃料等。</p>
<h4 id="在产品"><a href="#在产品" class="headerlink" title="在产品"></a>在产品</h4><p>指企业正在制造的尚未完工的产品， 包括正在各个生产工序加工的产品和已加工完毕但尚未检验或已检验但尚未办理入库手续的产品。</p>
<h4 id="半成品"><a href="#半成品" class="headerlink" title="半成品"></a>半成品</h4><p>指经过一定生产过程并巳检验合格交付半成品仓库保管， 但尚未制造完工成为产成品， 仍需进一步加工的中间产品。</p>
<h4 id="产成品"><a href="#产成品" class="headerlink" title="产成品"></a>产成品</h4><p>指工业企业已经完成全部生产过程并验收入库， 可以按照合同规定的条件送交订货单位， 或者可以作为商品对外销售的产品。 企业接受外来 材料加工制造的代制品和为外单位加工修理的代修品， 制造和修理完成验收入库后， 应视同企业的产成品。</p>
<h4 id="周转材料"><a href="#周转材料" class="headerlink" title="周转材料"></a>周转材料</h4><p>指企业能够多次使用但不符合固定资产定义的材料， 比如为了包装本企业商品而储备的各种包装物、 各种工具、 管理用具、 玻璃器皿、 劳动保护用品以及在经营过程中周转使用的容器等低值易耗品和建造承包商的钢模板、 木模板、 脚手架等其他周转材料。 但是， 周转材料符合固定资产定义的， 应 当作为固定资产处理。</p>
<h3 id="外购的存货"><a href="#外购的存货" class="headerlink" title="外购的存货"></a>外购的存货</h3><h4 id="外购存货的成本"><a href="#外购存货的成本" class="headerlink" title="外购存货的成本"></a>外购存货的成本</h4><p>即采购成本， 是指存货从采购到入库前所发生的全部支出， 包括购买价款、相关税费、 运输费、 装卸费 、保险费以及其他可归属于存货采购 成本的费用。</p>
<p>相关税费是指企业购买、 自制、 委托加工或进口存货发生的消费税、资源税、关税和不能抵扣的增值税进项税额。 </p>
<h4 id="外购存货的会计处理"><a href="#外购存货的会计处理" class="headerlink" title="外购存货的会计处理"></a>外购存货的会计处理</h4><h5 id="例题-3"><a href="#例题-3" class="headerlink" title="例题"></a><font color=#ff0099><strong>例题</strong></font></h5><p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@23af4043610b73dd36de7313dc00e81dbd576924/2021/07/02/b5468552434ebc968502aee868c8b69f.png" alt="4.1"></p>
<p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@f78a0dd9c68f37da71e5e331731414cc3125df71/2021/07/02/54f9f5d59a5d47aeef9fc9ea820cc45d.png" alt="4.2"></p>
<h3 id="委托加工取得的存货（必考）"><a href="#委托加工取得的存货（必考）" class="headerlink" title="委托加工取得的存货（必考）"></a><font color=#ff0099><strong>委托加工取得的存货</strong></font>（必考）</h3><p>委托加工存货收回后直接用于销售的， 由受托方代收代缴的消费税计入委托加工存货成本</p>
<ul>
<li>借记 委托加工物资 科目</li>
<li>贷记 银行存款 等科目</li>
</ul>
<p>委托加工存货收回后用于连续生产应税消费品， 由受托方代收代缴的消费税按规定准予抵扣的</p>
<ul>
<li>借记 应交税费一应交消费税 科目</li>
<li>贷记 银行存款” 等科目</li>
</ul>
<p>组成计税价格＝（材料成本＋加工费)+ (I－消费税税率）<br>委托加工支付的消费税＝组成计税价格x消费税税率</p>
<h4 id="例题（必考，要理解）"><a href="#例题（必考，要理解）" class="headerlink" title="例题（必考，要理解）"></a><font color=#ff0099><strong>例题（必考，要理解）</strong></font></h4><p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@b26b822194213a0d7d1711409c0121e114018a54/2021/07/02/7c8c58f9e6c17cfc27bb940dd7754afb.png" alt="4.3"></p>
<h3 id="发出存货的计价方法"><a href="#发出存货的计价方法" class="headerlink" title="发出存货的计价方法"></a>发出存货的计价方法</h3><h4 id="先进先出法"><a href="#先进先出法" class="headerlink" title="先进先出法"></a>先进先出法</h4><p>是以先购入的存货应先发出（销售或耗用）这样一种存货实物流转假设为前提， 对发出存货进行计价。 采用这种方法， 先购入的存货成本在后购入存货成本之前转出， 据此确定发出存货和期末存货的成本。</p>
<p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@e8741e2cf2b015d0bd016c9e111c156a4c376ccc/2021/07/02/69e9398ef34d53b40cc33ce62dd6c9c4.png" alt="4.4"></p>
<h5 id="影响"><a href="#影响" class="headerlink" title="影响"></a>影响</h5><p>可以随时计算发出存货的成本和期末结存存货的成本， 更值得一提的是， 采用该方法确定的期末存货成本反映了最近的购货成本， 比较接近现行的市场价值。</p>
<p>但</p>
<p>但在物价上涨的情况下， 会高估当期利润和存货价值；反之， 会低估当期利润和存货价值。</p>
<h4 id="月末一次加权平均分"><a href="#月末一次加权平均分" class="headerlink" title="月末一次加权平均分"></a>月末一次加权平均分</h4><p>指以当月全部进货数址加上月初存货数扯作为权 数， 去除当月全部进货成本加上月初存货成本， 计算出存货的加权平均单位成 本， 以此为基础计算当月发出存货的成本和期末存货成本的一种方法。</p>
<p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@f84ae23b62559affd664e904acd79dda03948e97/2021/07/02/c3da2d9f4a9da217afd126eaee74c1eb.png" alt="4.5"></p>
<p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@35432355764c259b3274ee21495ffef644d553e6/2021/07/02/1fbbd882f67aa50aea70c1cb5bdc53f1.png" alt="4.6"></p>
<h5 id="影响-1"><a href="#影响-1" class="headerlink" title="影响"></a>影响</h5><p>平时不对发出存货计价， 存货日常核算工作蜇较小， 适用于存货收发频繁的企业。但由于存货的单位成本在月末计算， 所以平时无法提供发出存货和结存存货 的成本，无法为存货管理提供及时的信息。</p>
<h4 id="移动加权平均法"><a href="#移动加权平均法" class="headerlink" title="移动加权平均法"></a>移动加权平均法</h4><p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@c64c1685d593f0ce0e8733c1b890e48aabeb3506/2021/07/02/b7ff7d127a3e1d8166dd1534beb02595.png" alt="4.7"></p>
<p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@a26bb8bf837c322856dbe986876bed6d8e31e1b1/2021/07/02/b9ea9f246eb84c1a00fb07820bbcc23c.png" alt="4.8"></p>
<h5 id="影响-2"><a href="#影响-2" class="headerlink" title="影响"></a>影响</h5><p>移动加权平均法的特点是将存货的计价和明细账的登记分散在平时进行， 这样可以随时掌握发出存货的成本和结存存货的成本， 为存货管理提供及时的信息。但是这种方法每次收货都要计算一次平均单位成本， 计算工作量大， 不适合存货收发频繁的企业使用。</p>
<h4 id="个别计价法"><a href="#个别计价法" class="headerlink" title="个别计价法"></a>个别计价法</h4><p>亦称个别认定法， 其特征是注重所发出存货具体项目的实物流转与成本流转之间的联系， 逐一辨认各批发出存货和期末存货所属的购进批别或生产批别， 分别按其购入或生产时所确定的单位成本计算各批发出存货和期末存货的成本。</p>
<p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@18f62ae6f662230c9e8f408b25803537c8e68fb8/2021/07/02/96709dfd56d1504cc118dda2083a3c20.png" alt="4.9"></p>
<h5 id="影响-3"><a href="#影响-3" class="headerlink" title="影响"></a>影响</h5><p>个别计价法的特点是成本流转与实物流转完全一致， 因而能准确地反映本期发出存货的成本和期末结存存货的成本。 但采用该方法需要有详细的存货收、 发、 存记录， 存货实物流转操作程序较复杂。 个别计价法往往用于不能替代使用的存货或为特定项目专门购入的存货计价， 以及品种数量不多、 单位价值较高、容易辨认的存货计价。在实际中， 越来越多的企业采用计算机信息系统进行会计处理， 个别计价法可以广泛应用于发出存货的计价， 并且该方法确定的存货成本最为准确。</p>
<p><strong>该方法确定的存货成本最为准确！</strong></p>
<h3 id="发出存货的会计处理"><a href="#发出存货的会计处理" class="headerlink" title="发出存货的会计处理"></a>发出存货的会计处理</h3><h4 id="生产经营领用原材料"><a href="#生产经营领用原材料" class="headerlink" title="生产经营领用原材料"></a>生产经营领用原材料</h4><h5 id="例题-4"><a href="#例题-4" class="headerlink" title="例题"></a><font color=#ff0099><strong>例题</strong></font></h5><p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@a29cf792a8b41a3a0caf111fbfa856590cb521c5/2021/07/02/3e5083348391dde7adb53e36a78c2206.png" alt="4.10"></p>
<h4 id="出售库存商品或原材料"><a href="#出售库存商品或原材料" class="headerlink" title="出售库存商品或原材料"></a>出售库存商品或原材料</h4><h5 id="例题-5"><a href="#例题-5" class="headerlink" title="例题"></a><font color=#ff0099><strong>例题</strong></font></h5><p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@24a0a20dae76da3f05f5fa80c9af9b5fe05cb897/2021/07/02/a078b5d6c7c73577cb9aaff0af5ea30c.png" alt="4.11"></p>
<p>如果是对外销售原材料， 将已出售材料的实际成本予以结转， 计入当期其他业务成本， 将取得的销售收入作为其他业务收入。 销售原材料时， 按已收或应收的合同或协议价款， 借记 “ 银行存款” “应收账款” 等科目， 按实现的销售收入， 贷记 ”其他业务收入“ 科目， 按增值税销项税额， 贷记 “ 应交税费——应交增值税（销项税额） “ 科目同时， 按发出原材料的账面价值结转销售成本， 借记 ”其他业务成本“ 科目， 贷记 ”原材料“ 科目。</p>
<h4 id="存货跌价准备的会计处理例题"><a href="#存货跌价准备的会计处理例题" class="headerlink" title="存货跌价准备的会计处理例题"></a>存货跌价准备的会计处理<font color=#ff0099><strong>例题</strong></font></h4><p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@9444f5015416acb2fcf30292fd9409a195ee9391/2021/07/02/f22032befbd0e117ad7fc4d0e3bb28cd.png" alt="4.12"></p>
<h2 id="第五章-金融资产投资"><a href="#第五章-金融资产投资" class="headerlink" title="第五章 金融资产投资"></a>第五章 金融资产投资</h2><h3 id="金融资产分类"><a href="#金融资产分类" class="headerlink" title="金融资产分类"></a>金融资产分类</h3><h4 id="摊余成本计量的金融资产"><a href="#摊余成本计量的金融资产" class="headerlink" title="摊余成本计量的金融资产"></a>摊余成本计量的金融资产</h4><h5 id="初始计量-例题"><a href="#初始计量-例题" class="headerlink" title="初始计量 例题"></a><font color = #ff0099><strong>初始计量 例题</strong></font></h5><p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@a769aa8692200c40fcff55658421ccba2759e4c3/2021/07/02/fedb851a708f08989228d35a99623c76.png" alt="5.1"></p>
<h5 id="后续计量-例题"><a href="#后续计量-例题" class="headerlink" title="后续计量 例题"></a><font color = #ff0099><strong>后续计量 例题</strong></font></h5><p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@8ef8f0fea1897a69f804f5e43491103094d63f7d/2021/07/02/150e90ec85f4e35ffa5192bd3298c33a.png" alt="5.2"></p>
<p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@e3a7194b1c3c2b6e9e4ad38d9b2ebcf090ef6100/2021/07/02/957a3fb042bdf023e004a8bd28d07ab8.png" alt="5.3"></p>
<h4 id="以公允价值计量且其变动计入其他综合收益的金融资产"><a href="#以公允价值计量且其变动计入其他综合收益的金融资产" class="headerlink" title="以公允价值计量且其变动计入其他综合收益的金融资产"></a>以公允价值计量且其变动计入其他综合收益的金融资产</h4><h5 id="初始计量-例题-1"><a href="#初始计量-例题-1" class="headerlink" title="初始计量 例题"></a><font color = #ff0099><strong>初始计量 例题</strong></font></h5><p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@2e050757086c089d17222475705c343b47b57c6f/2021/07/02/102fe9739a926faeff33cd17122ca72d.png"></p>
<h5 id="后续计量-例题-1"><a href="#后续计量-例题-1" class="headerlink" title="后续计量 例题"></a><font color = #ff0099><strong>后续计量 例题</strong></font></h5><p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@1db887a3a8c8f4ed8ae5aa21a9d0b1642e0c1a23/2021/07/02/82374cd5dd9f378df3ce0ac71ceb9127.png" alt="5.5"></p>
<h4 id="以公允价值计量且其变动计入当期损益的金融资产"><a href="#以公允价值计量且其变动计入当期损益的金融资产" class="headerlink" title="以公允价值计量且其变动计入当期损益的金融资产"></a>以公允价值计量且其变动计入当期损益的金融资产</h4><h5 id="初始计量-例题-2"><a href="#初始计量-例题-2" class="headerlink" title="初始计量 例题"></a><font color = #ff0099><strong>初始计量 例题</strong></font></h5><p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@c229520eeec2fbf27c7c7804862c6e2803217c9c/2021/07/02/47f84e278784ae4ee31cf8692a6bf3bd.png" alt="5.7"></p>
<h5 id="后续计量-例题-2"><a href="#后续计量-例题-2" class="headerlink" title="后续计量 例题"></a><font color = #ff0099><strong>后续计量 例题</strong></font></h5><p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@730fe5d5bfa6510f7fed863424eae2910436a8e9/2021/07/02/cc9853465a81e0651e8f614bc01b9751.png" alt="5.8"></p>
<h4 id="金融资产分类的特殊规定"><a href="#金融资产分类的特殊规定" class="headerlink" title="金融资产分类的特殊规定"></a>金融资产分类的特殊规定</h4><h2 id="第六章-长期股权投资的初始计量"><a href="#第六章-长期股权投资的初始计量" class="headerlink" title="第六章 长期股权投资的初始计量"></a>第六章 长期股权投资的初始计量</h2><h3 id="长期股权投资的内容"><a href="#长期股权投资的内容" class="headerlink" title="长期股权投资的内容"></a>长期股权投资的内容</h3><ul>
<li>投资企业能够对被投资单位实施控制的权益性投资</li>
<li>投资企业与其他合营方一同对被投资单位实施共同控制的权益性投资</li>
<li>投资企业对被投资单位具有重大影响的权益性投资</li>
</ul>
<h3 id="长期股权投资的初始计量"><a href="#长期股权投资的初始计量" class="headerlink" title="长期股权投资的初始计量"></a>长期股权投资的初始计量</h3><p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@c8b7db3ca4208c065d97e091c07a89d5d89b8c3f/2021/07/02/0af56de4a43c852f28a6d6e8233963dc.png" alt="6.1"></p>
<p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@4f43bfebc9213fc958529eb45861d52c8fe1e57c/2021/07/02/5edebd48678f26bd30105bd16e2161c3.png" alt="6.2"></p>
<h3 id="长期股权投资的后续计量"><a href="#长期股权投资的后续计量" class="headerlink" title="长期股权投资的后续计量"></a>长期股权投资的后续计量</h3><h4 id="成本法（不考）"><a href="#成本法（不考）" class="headerlink" title="成本法（不考）"></a>成本法（不考）</h4><p>取得的时候按照实际成本</p>
<p>什么时候分红我就什么时候确认收入</p>
<p><font color = #ff0099><strong>例题</strong></font></p>
<p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@f0f6dd8295a2bd2f5655302d0ab53554c50268fe/2021/07/02/bffe67b1978678595a91e0a01944d347.png" alt="6.3"></p>
<h4 id="权益法（要考）"><a href="#权益法（要考）" class="headerlink" title="权益法（要考）"></a><font color = #ff0099>权益法（要考）</font></h4><p>做题</p>
<h3 id="共同经营的会计处理"><a href="#共同经营的会计处理" class="headerlink" title="共同经营的会计处理"></a>共同经营的会计处理</h3><p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@6dc2e82e41073eb0a5d6dbdf8c9effdcad38c117/2021/07/02/e20c306cbfadc936c12f0279339a730d.png" alt="6.4"></p>
<h2 id="第七章-固定资产"><a href="#第七章-固定资产" class="headerlink" title="第七章 固定资产"></a>第七章 固定资产</h2><h3 id="影响固定资产折旧的因素"><a href="#影响固定资产折旧的因素" class="headerlink" title="影响固定资产折旧的因素"></a>影响固定资产折旧的因素</h3><ol>
<li>固定资产原价</li>
<li>预计净残值</li>
<li>固定资产减值准备</li>
<li>预计使用寿命</li>
</ol>
<h3 id="固定资产的折旧范围"><a href="#固定资产的折旧范围" class="headerlink" title="固定资产的折旧范围"></a>固定资产的折旧范围</h3><ol>
<li>已提足折旧任继续使用的固定资产</li>
<li>按规定单独估价作为固定资产入账的土地</li>
</ol>
<p>注意点：</p>
<ol>
<li>固定资产应当按月计提折旧，自达预定可使用状态开始计提折旧，终止确认时或划分为持有待售非流动资产时停止计提折旧</li>
<li>固定资产提足折旧后， 不论能否继续使用， 均不再计提折旧， 提前报废的固定资产也不再补提折旧。</li>
</ol>
<h3 id="固定资产的折旧方式"><a href="#固定资产的折旧方式" class="headerlink" title="固定资产的折旧方式"></a>固定资产的折旧方式</h3><ol>
<li><p>年限平均法</p>
<p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@9304b3762b7082962dc746819f76e93b41f100c0/2021/07/02/27d605128628f137bd431382c12b4075.png" alt="7.1"></p>
</li>
<li><p>工作量法</p>
<p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@7417b996b33f7c2b98fc95d99f4b08bf04b3862b/2021/07/02/e1f0d8f7cd932a12de6867e4e377b7ca.png" alt="7.2"></p>
</li>
<li><p>双倍余额递减法</p>
<p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@59cd8307236b68f62c3a148d9de0914e95538241/2021/07/02/5e7514bc587e6f8ca00995acf293768e.png" alt="7.3"></p>
</li>
<li><p>年数总和法</p>
<p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@acb250004c961e3bdaa3c0072f8f5252e735ade1/2021/07/02/9b67e46e2ed93f783d5b3af5233a9f3b.png" alt="7.4"></p>
</li>
</ol>
<h3 id="固定资产折旧的会计处理"><a href="#固定资产折旧的会计处理" class="headerlink" title="固定资产折旧的会计处理"></a>固定资产折旧的会计处理</h3><p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@7768e63c3e6fd1932bb680f129448aba6b40d991/2021/07/02/ba3a8627361d96bcd45db8132c85cc22.png" alt="7.5"></p>
<p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@3844714616b19871200c7d53985c5782dd018f1a/2021/07/02/f68c3c0c8032d77839d8f3dfdc66e4f3.png" alt="7.6"></p>
<h3 id="固定资产期末计价"><a href="#固定资产期末计价" class="headerlink" title="固定资产期末计价"></a>固定资产期末计价</h3><h4 id="确定资产是否已经发生减值"><a href="#确定资产是否已经发生减值" class="headerlink" title="确定资产是否已经发生减值"></a>确定资产是否已经发生减值</h4><ol>
<li>固定资产市价大幅度下跌， 其跌幅大大高于因时间推移或正常使用而预计的下跌， 并且预计在近期内不可能恢复</li>
<li>企业所处经营环境， 如技术、 市场 、 经济或法律环境， 或者产品营销 市场在当期发生或在近期发生重大变化， 并对企业产生负面影响</li>
<li>同期市场利率等大幅度提高， 进而很可能影响企业计算固定资产可收 回金额的折现率， 并导致固定资产可收回金额大幅度降低</li>
</ol>
<h2 id="第八章-无形资产"><a href="#第八章-无形资产" class="headerlink" title="第八章 无形资产"></a>第八章 无形资产</h2><h3 id="无形资产的定义"><a href="#无形资产的定义" class="headerlink" title="无形资产的定义"></a>无形资产的定义</h3><ol>
<li>由企业拥有或者控制并能为其带来未来经济利益的资源</li>
<li>不具有实物形态</li>
<li>具有可辨认性</li>
<li>属于非货币性资产</li>
</ol>
<h3 id="无形资产的分类"><a href="#无形资产的分类" class="headerlink" title="无形资产的分类"></a>无形资产的分类</h3><ol>
<li><p>根据无形资产的来源进行分类</p>
<p>外购，开发，合并等</p>
</li>
<li><p>根据无形资产的使用寿命进行分类</p>
</li>
<li><p>根据无形资产的内容进行分类</p>
<p>可分为</p>
<ul>
<li><p>专利权</p>
</li>
<li><p>非专利技术</p>
</li>
<li><p>商标权</p>
<p><strong><font color = #ff0099>商誉不属于无形资产</font></strong></p>
</li>
<li><p>著作权</p>
</li>
<li><p>特许权</p>
</li>
<li><p>土地使用权</p>
</li>
</ul>
<p><font color = #ff0099><strong>其中特别要注意土地使用权！</strong></font></p>
<p><font color = #ff0099><strong>无形资产中的土地使用权指定是拍卖这一类的，而与房屋资产绑定的不算！</strong></font></p>
</li>
</ol>
<h3 id="无形资产的确认条件"><a href="#无形资产的确认条件" class="headerlink" title="无形资产的确认条件"></a>无形资产的确认条件</h3><ol>
<li><p>与该资产有关的经济利益很可能流入企业</p>
</li>
<li><p>该无形资产的成本能够可靠地计量</p>
<p>因此有些技术人才的知识难以辨认不能作为无形资产进行确认</p>
</li>
</ol>
<h3 id="无形资产的处置"><a href="#无形资产的处置" class="headerlink" title="无形资产的处置"></a>无形资产的处置</h3><p>转让（或者使用）无形资产取得收入 计入其他业务收入</p>
<p>无形资产报废后的利得叫做 营业外支出&#x2F;收入</p>
<h2 id="第九章第十章跳过-不考"><a href="#第九章第十章跳过-不考" class="headerlink" title="第九章第十章跳过(不考)"></a>第九章第十章跳过(不考)</h2><p>所有资产都要计提减值准备，除了货币资金</p>
<h2 id="第十一章-负债"><a href="#第十一章-负债" class="headerlink" title="第十一章 负债"></a>第十一章 负债</h2><h3 id="负债的定义和特征"><a href="#负债的定义和特征" class="headerlink" title="负债的定义和特征"></a>负债的定义和特征</h3><ol>
<li>负债是过去的交易或者事项形成的。</li>
<li>负债是企业承担的现时义务</li>
<li>负债的清偿会导致未来经济利益流出企业</li>
<li>负债能用货币进行可靠的计量或者合理的估计</li>
</ol>
<h2 id="第十二章-所有者权益"><a href="#第十二章-所有者权益" class="headerlink" title="第十二章 所有者权益"></a>第十二章 所有者权益</h2><h3 id="所有者权益含义特征"><a href="#所有者权益含义特征" class="headerlink" title="所有者权益含义特征"></a>所有者权益含义特征</h3><p>所有者权益是企业投资人对企业净资产的所有权</p>
<p>所有者权益包含所有者以其出资额的比例分享企业利润，同时也必须以其出资额承担企业的经营风险</p>
<p>所有者权益不能返还本金</p>
<p>所有者享受税后分配利润的权利（债权人只能取得利息）</p>
<p>所有者对企业的债务和亏损负有无限的责任或有限的责任</p>
<h3 id="所有者权益的分类"><a href="#所有者权益的分类" class="headerlink" title="所有者权益的分类"></a>所有者权益的分类</h3><p>1：实收资本（股本）</p>
<p>2：其他权益工具</p>
<p>3：资本公积</p>
<p>4：其他综合收益</p>
<p>5：留存收益</p>
<h3 id="资本公积和其他综合收益"><a href="#资本公积和其他综合收益" class="headerlink" title="资本公积和其他综合收益"></a>资本公积和其他综合收益</h3><h4 id="资本溢价"><a href="#资本溢价" class="headerlink" title="资本溢价"></a>资本溢价</h4><p>新加入的投资者投入的资本中按其投资比例计算的出资额部分，应记入 “实收资本“ 科目， 大于部分应记入 “资本公积一资本溢价“ 科目。</p>
<h4 id="股本溢价"><a href="#股本溢价" class="headerlink" title="股本溢价"></a>股本溢价</h4><h4 id="其他资本公积"><a href="#其他资本公积" class="headerlink" title="其他资本公积"></a>其他资本公积</h4><ol>
<li><p>以权益结算的股份支付</p>
</li>
<li><p>采用权益法核算的长期股权投资</p>
</li>
</ol>
<h4 id="资本公积转增资本"><a href="#资本公积转增资本" class="headerlink" title="资本公积转增资本"></a>资本公积转增资本</h4><h3 id="留存收益"><a href="#留存收益" class="headerlink" title="留存收益"></a>留存收益</h3><h4 id="盈余公积"><a href="#盈余公积" class="headerlink" title="盈余公积"></a>盈余公积</h4><h5 id="提取"><a href="#提取" class="headerlink" title="提取"></a>提取</h5><p>在我国， 公司制企业的法定盈余公积按本年税后利润IO％的比例提取， 当法定盈余公积累计额达到公司注册资本的50％以上时， 可以不再提取。 </p>
<h5 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h5><ol>
<li>弥补亏损</li>
<li>转增资本</li>
<li>分配股利</li>
<li>派送新股</li>
</ol>
<h4 id="弥补亏损的会计处理"><a href="#弥补亏损的会计处理" class="headerlink" title="弥补亏损的会计处理"></a>弥补亏损的会计处理</h4><p>企业当年发生的亏损 应当自 “本年利润“ 科目转入 利润分配一一未分配利润“ 科目</p>
<p>即借记 “ 利润分配——未分配利润“ 科目</p>
<p>贷记 “本年利润” 科目</p>
<p>结转后 “利润分配“ 科目的借方余额， 即为未弥补亏损的数额。</p>
<h2 id="第十三章-收入"><a href="#第十三章-收入" class="headerlink" title="第十三章 收入"></a>第十三章 收入</h2><h3 id="收入的特征"><a href="#收入的特征" class="headerlink" title="收入的特征"></a>收入的特征</h3><ul>
<li>收入是企业日常活动形成的经济利益流入（利得不算，应为不与经营成直接关系包括所说的捐赠）</li>
<li>收入表现为资产的增加或者负债的减少</li>
<li><font color=#ff0099><strong>收入必然导致所有者权益增加</strong></font></li>
</ul>
<h3 id="五步法"><a href="#五步法" class="headerlink" title="五步法"></a><font color = #ff0099>五步法</font></h3><h4 id="一-识别与客户订立的合同"><a href="#一-识别与客户订立的合同" class="headerlink" title="一 识别与客户订立的合同"></a>一 识别与客户订立的合同</h4><h4 id="二-识别合同中的单项履约义务"><a href="#二-识别合同中的单项履约义务" class="headerlink" title="二 识别合同中的单项履约义务"></a>二 识别合同中的单项履约义务</h4><h4 id="三-确定交易价格"><a href="#三-确定交易价格" class="headerlink" title="三 确定交易价格"></a>三 确定交易价格</h4><h4 id="四-将交易价格分摊至各单项履约义务"><a href="#四-将交易价格分摊至各单项履约义务" class="headerlink" title="四 将交易价格分摊至各单项履约义务"></a>四 将交易价格分摊至各单项履约义务</h4><h4 id="五-履行各单项履约义务时确认收入"><a href="#五-履行各单项履约义务时确认收入" class="headerlink" title="五 履行各单项履约义务时确认收入"></a>五 履行各单项履约义务时确认收入</h4><h2 id="第十四章-费用与利润"><a href="#第十四章-费用与利润" class="headerlink" title="第十四章 费用与利润"></a>第十四章 费用与利润</h2><h3 id="费用的确认"><a href="#费用的确认" class="headerlink" title="费用的确认"></a>费用的确认</h3><p>长期的会计实践认为，由于费用与收入存在因果关系， 费用的确认要与收入的确认配合在一起进行， 因而费用的确认应<font color=#ff0099><strong>以权责发生制和配比为基础</strong></font></p>
<h3 id="利润的构成"><a href="#利润的构成" class="headerlink" title="利润的构成"></a>利润的构成</h3><p><font color=#ff0099><strong>营业收入</strong></font>是指企业经营业务所实现的收入总额，包括主营业务收入和其他业务收入。</p>
<p><font color=#ff0099><strong>营业成本</strong></font>是指企业经营业务所发生的实际成本总额，包括主营业务成本和其他业务成本。</p>
<p><font color=#ff0099><strong>研发费用</strong></font>是企业进行研究与开发过程中发生的费用化支出。</p>
<h3 id="营业外收支及会计处理"><a href="#营业外收支及会计处理" class="headerlink" title="营业外收支及会计处理"></a>营业外收支及会计处理</h3><h4 id="营业收入中不容易想到的"><a href="#营业收入中不容易想到的" class="headerlink" title="营业收入中不容易想到的"></a>营业收入中不容易想到的</h4><p>指对自然灾害等发生毁损、 已丧失使用功能而报废的非流动资产进行清理所产生的收益。</p>
<h4 id="营业外支出不容易想到的"><a href="#营业外支出不容易想到的" class="headerlink" title="营业外支出不容易想到的"></a>营业外支出不容易想到的</h4><p>非流动资产毁损报废损失， 是指对自然灾害等发生毁损、 已丧失使用功能而报废的非流动资产进行清理所产生的损失。</p>
<h3 id="利润结转及会计处理"><a href="#利润结转及会计处理" class="headerlink" title="利润结转及会计处理"></a><font color=#ff0099><strong>利润结转及会计处理</strong></font></h3><p>月底一定要做下面这些会计处理分类</p>
<p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@4ef18bb07fb9c35c0e1a46817093d00608632ff9/2021/07/02/c05553f9bc7a39f7985442de6951d9b9.png" alt="14.0"></p>
<p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@e0b3ba01a432b37dbe41d177949ea495dfb4c90c/2021/07/02/c4ec8f572c4d251f24574322487938a8.png" alt="14.1"></p>
<h3 id="利润分配的顺序"><a href="#利润分配的顺序" class="headerlink" title="利润分配的顺序"></a>利润分配的顺序</h3><p>1：提取法定盈余公积，是指企业根据有关法律的规定， 按照净利润的10％提取的盈余公积。 法定盈余公积累计金额已达到注册资本的50％时， 可以不再提取。<font color = #ff0099><strong>（重点）</strong></font></p>
<p>2：应付优先股股利，是指企业按照利润分配方案分配给优先股股东的现金股利。<font color = #ff0099><strong>（重点）</strong></font></p>
<p>3：提取任意盈余公积，是指企业根据股东大会决议提取的盈余公积。</p>
<p>4：应付普通股股利</p>
<p>5：转作资本（或股本）的普通股股利， 是指企业按照利润分配方案以分派股票股利的形式转作股本的股利，也包括非股份有限公司以利润转增的资本。</p>
<h4 id="会计处理例子"><a href="#会计处理例子" class="headerlink" title="会计处理例子"></a>会计处理例子</h4><p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@67e1cef488eed1f82ccd5447bc998a15107b1515/2021/07/02/10232143b9f7604c1d784e6d64f1e918.png" alt="14.2"></p>
<p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@ba3e0f4441ceea392312f20269bca10755a18ee7/2021/07/02/c764874ea4505a807a0a2623d68d8017.png" alt="14.4"></p>
<p>尤其是<font color=#ff0099><strong>第①个部分</strong></font>的会计分录一定要会</p>
<h2 id="第十五章-财务报告"><a href="#第十五章-财务报告" class="headerlink" title="第十五章 财务报告"></a>第十五章 财务报告</h2><h3 id="三个报告"><a href="#三个报告" class="headerlink" title="三个报告"></a>三个报告</h3><p><font color=#ff0099><strong>资产负债表属于时点的报告</strong></font></p>
<p><font color=#ff0099><strong>损益表 利润表 现金流量表属于时期的报告</strong></font></p>
<h4 id="利润表"><a href="#利润表" class="headerlink" title="利润表"></a>利润表</h4><p>反映的是企业的经营成果并且是时期报表，反映的是会计期间的</p>
<h4 id="现金流量表"><a href="#现金流量表" class="headerlink" title="现金流量表"></a>现金流量表</h4><p>一定是个时期的报表</p>
<h5 id="包含三个方面（需要注意）"><a href="#包含三个方面（需要注意）" class="headerlink" title="包含三个方面（需要注意）"></a><font color=#ff0099><strong>包含三个方面</strong></font>（需要注意）</h5><p>经营、投资、融资</p>
<h5 id="经营活动填列方式"><a href="#经营活动填列方式" class="headerlink" title="经营活动填列方式"></a>经营活动填列方式</h5><h6 id="销售商品、提供劳务收到的现金"><a href="#销售商品、提供劳务收到的现金" class="headerlink" title="销售商品、提供劳务收到的现金"></a>销售商品、提供劳务收到的现金</h6><p>就是卖东西</p>
<p>具体包括：</p>
<ul>
<li><p>本期销售的商品（代销代购也算）</p>
</li>
<li><p>提供劳务收到的现金</p>
</li>
<li><p>前期销售、 提供劳务本期收到的现金和本期预收的账款</p>
<p>减去本期销售本期退回的商品和前期销售本期退回商品支付的现金。</p>
</li>
</ul>
<h6 id="购买商品、接受劳务支付的现金"><a href="#购买商品、接受劳务支付的现金" class="headerlink" title="购买商品、接受劳务支付的现金"></a>购买商品、接受劳务支付的现金</h6><p>反映企业购买材料、商品、接受劳务实际支付的现金， 包括本期购买商品、 接受劳务支付现金（包括增值税进项税额）， 以及本期支付前期购入商 品、 接受劳务的未付款项和本期预付款项， 减去本期发生的购货退回收到的现金。 </p>
<p><font color=#ff0099><strong>特别注意：在建工程以及工程物资不算</strong></font></p>
<h6 id="支付给职工以及为职工支付的现金"><a href="#支付给职工以及为职工支付的现金" class="headerlink" title="支付给职工以及为职工支付的现金"></a>支付给职工以及为职工支付的现金</h6><p><font color=#ff0099><strong>要注意！支付在建工程人员的工资，在“构建固定资产、无形资产和其他长期资产所支付的现金”、项目中反映</strong></font></p>
<p>同理<font color=#ff0099><strong>退休工资人员的各项费用也不算，应归为</strong></font></p>
<h6 id="支付的各项税费"><a href="#支付的各项税费" class="headerlink" title="支付的各项税费"></a>支付的各项税费</h6><p>所有的税费进行处理，但是不包括本期退回的增值税、所得税。上述这些在“收到的税费返还”项目反映</p>
<h5 id="投资活动现金流量项目"><a href="#投资活动现金流量项目" class="headerlink" title="投资活动现金流量项目"></a>投资活动现金流量项目</h5><h6 id="购建固定资产、无形资产和其他长期自残所支付的现金"><a href="#购建固定资产、无形资产和其他长期自残所支付的现金" class="headerlink" title="购建固定资产、无形资产和其他长期自残所支付的现金"></a>购建固定资产、无形资产和其他长期自残所支付的现金</h6><p><font color=#ff0099><strong>不包括为构建固定资产而发生的借款利息资本化的部分以及融资租入固定资产支付的租赁费</strong></font></p>
<h3 id="财务报表的构成"><a href="#财务报表的构成" class="headerlink" title="财务报表的构成"></a>财务报表的构成</h3><h4 id="财务报表的使用者"><a href="#财务报表的使用者" class="headerlink" title="财务报表的使用者"></a><font color=#ff0099><strong>财务报表的使用者</strong></font></h4><ul>
<li>投资者</li>
<li>债权人</li>
<li>潜在的投资者和债权人</li>
<li>经营管理</li>
<li>政府</li>
<li>有关部门和社会公众</li>
</ul>
<h3 id="报表提供信息的内容"><a href="#报表提供信息的内容" class="headerlink" title="报表提供信息的内容"></a>报表提供信息的内容</h3><ul>
<li>企业的财务状况</li>
<li>企业的经营业绩</li>
<li>企业的现金流量</li>
<li>其他相关信息</li>
</ul>
<h3 id="资产负债表的列报方法"><a href="#资产负债表的列报方法" class="headerlink" title="资产负债表的列报方法"></a>资产负债表的列报方法</h3><h4 id="货币资金"><a href="#货币资金" class="headerlink" title="货币资金"></a><font color=#ff0099><strong>货币资金</strong></font></h4><ul>
<li>库存现金</li>
<li>银行存款</li>
<li>其他货币资金</li>
</ul>
<p>三个总分类科目的期末余额的合计数填列</p>
<h4 id="交易性性金融资产"><a href="#交易性性金融资产" class="headerlink" title="交易性性金融资产"></a>交易性性金融资产</h4><p><font color=#ff0099><strong>自资产负债表日起超过一年到期且预期持有超过一年的以公允价值计量且其变动计入当期损益的非流动金融资产</strong></font>的期末账面价值， 在 “其他非流动金融资产“ 行项目反映。</p>
<h4 id="应收票据及应收账款"><a href="#应收票据及应收账款" class="headerlink" title="应收票据及应收账款"></a>应收票据及应收账款</h4><p>根据“应收票据”和“应收账款”科目的期末余额，<font color=#ff0099><strong>减去“坏账准备”科目中相关坏账准备期末余额</strong></font>后的金额填列</p>
<h4 id="预付账款（这个特别强调）"><a href="#预付账款（这个特别强调）" class="headerlink" title="预付账款（这个特别强调）"></a><font color=#ff0099><strong>预付账款</strong></font>（这个特别强调）</h4><p>应根据“预付账款”和“应付账款”账户所属各明细账户的期末余额借方余额合计数，减去“坏账准备”账户中有关预付款项计提的坏账准备期末余额</p>
<h4 id="一年内到期的非流动资产"><a href="#一年内到期的非流动资产" class="headerlink" title="一年内到期的非流动资产"></a>一年内到期的非流动资产</h4><p>包括一年内采取的债券投资、长期待摊销费用和一年内可回收的长期应收款</p>
<h4 id="预收款项"><a href="#预收款项" class="headerlink" title="预收款项"></a>预收款项</h4><p>反映企业按合同规定预收的款项</p>
<p>根据<strong>预收账款</strong>和<strong>应收账款</strong>，账户所属各明细账户的期末贷方余额合计填列</p>
<p>还在编辑中······</p>
<p><font color=#ff0099>****</font>红色</p>
]]></content>
      <categories>
        <category>会计</category>
        <category>中级财务会计</category>
        <category>考试要点</category>
      </categories>
      <tags>
        <tag>中级财务会计</tag>
        <tag>考试要点汇总</tag>
      </tags>
  </entry>
  <entry>
    <title>函数索引</title>
    <url>/2023/08/31/%E5%87%BD%E6%95%B0%E7%B4%A2%E5%BC%95/</url>
    <content><![CDATA[<h1 id="函数索引"><a href="#函数索引" class="headerlink" title="函数索引"></a>函数索引</h1><p>话不多说，先上官方文档链接 <a href="https://dev.mysql.com/doc/refman/8.1/en/create-index.html">创建索引</a></p>
<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在做名字匹配的时候，考虑到内部数据有很多大小写的问题(比如JAVA java;mysql MYSQL MySQL Mysql）。数据库中的数据量比较多如果直接获取所有数据生成小写名字对应的map会造成需要大量的内存，所以决定采用的方式是先获取所有选择同步的名字，小写后去数据库进行匹配，但是数据库中的名字并不完全是小写的，在匹配的时候需要用到LOWER函数，使用LOWER函数的时候，就会因为修改了原数据的匹配规则导致的<a href = "">索引失效</a>(可以直接链接访问)。</p>
<p>这种业务场景之前的办法是再维护一个列用于查询或者直接上ES(ElasticSearch)进行查询，但是前者需要的是</p>
<p>翻阅官网发现存在函数索引，于是就是函数索引的使用避坑的路线。</p>
<h2 id="版本要求"><a href="#版本要求" class="headerlink" title="版本要求"></a>版本要求</h2><p>mysql的版本要达到<a style="color:#ff6600">8.0.13</a>及以上</p>
<h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> INDEX &#123;索引名称&#125; <span class="keyword">ON</span> &#123;数据表名称&#125; (&#123;方法函数&#125;)</span><br></pre></td></tr></table></figure>

<p>这里需要注意</p>
<ol>
<li><p>建立索引的时候其中的方法函数不能随意添加</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> INDEX idx2 <span class="keyword">ON</span> t1 ((col1 <span class="operator">+</span> col2), (col1 <span class="operator">-</span> col2), col1);</span><br></pre></td></tr></table></figure>

<p>拿这个举例子</p>
<p>其中的col1+col2是一个函数，所以必须添加()，但是后面的col1不是，所以col1不能添加()如果添加就会报错。</p>
<p>根据官方的说法，()里面的就代表功能项，功能项不能由列名组成</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># 错误的写法</span><br><span class="line">INDEX ((col1), (col2))</span><br></pre></td></tr></table></figure>
</li>
<li><p>如果使用到了函数部分，不能少了()</p>
<p>也就是说，如果要使用函数，就必须添加（）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># 错误的写法</span><br><span class="line">INDEX (col1 <span class="operator">+</span> col2, col3 <span class="operator">-</span> col4)</span><br><span class="line">INDEX (<span class="built_in">LOWER</span>(name))</span><br><span class="line"># 正确的写法</span><br><span class="line">INDEX ((col1 <span class="operator">+</span> col2), (col3 <span class="operator">-</span> col4)</span><br><span class="line">INDEX ((<span class="built_in">LOWER</span>(name))</span><br></pre></td></tr></table></figure>

<p>这里个坑其实很容易出现，确实也比较恼人，尤其是LOWER的部分，函数索引内使用函数必须带上（）保证处于功能项，估计也是为了区别最外层的括号采用的最简单的策略。</p>
</li>
</ol>
<h2 id="个人使用过程记录"><a href="#个人使用过程记录" class="headerlink" title="个人使用过程记录"></a>个人使用过程记录</h2><p>这里再阐述一下我的解决方式，因为需要做名字匹配，并且匹配中有大小写的问题，所以在处理的过程中采用的是都统一采用小写进行匹配的方式。</p>
<p>首先拿到所有有关的名字的小写数据，批量查询数据库中对应的字段</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> ... <span class="keyword">where</span> <span class="built_in">LOWER</span>(name) <span class="operator">=</span> &quot;对应的名字&quot;</span><br><span class="line"># 实际的代码 xml</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> ... </span><br><span class="line"><span class="operator">&lt;</span><span class="keyword">where</span><span class="operator">&gt;</span></span><br><span class="line">	<span class="operator">&lt;</span>if test <span class="operator">=</span> &quot;nameList != null and nameList.size &gt; 0&quot;<span class="operator">&gt;</span></span><br><span class="line">		`name` <span class="keyword">IN</span> </span><br><span class="line">		<span class="operator">&lt;</span>foreach collection<span class="operator">=</span>&quot;nameList&quot; index<span class="operator">=</span>&quot;name&quot; item<span class="operator">=</span>&quot;item&quot; <span class="keyword">open</span><span class="operator">=</span>&quot;(&quot; separator<span class="operator">=</span>&quot;,&quot; <span class="keyword">close</span><span class="operator">=</span>&quot;)&quot;<span class="operator">&gt;</span></span><br><span class="line">            #&#123;name&#125;</span><br><span class="line">        <span class="operator">&lt;</span><span class="operator">/</span>foreach<span class="operator">&gt;</span></span><br><span class="line">	<span class="operator">&lt;</span><span class="operator">/</span>if<span class="operator">&gt;</span></span><br><span class="line"><span class="operator">&lt;</span><span class="operator">/</span><span class="keyword">where</span><span class="operator">&gt;</span></span><br></pre></td></tr></table></figure>

<p>对应的数据库也要添加对应的索引</p>
<p>添加过程如下，刚开始没看完整</p>
<p><img src="/2023/08/31/%E5%87%BD%E6%95%B0%E7%B4%A2%E5%BC%95/addFailed.png" alt="addFailed"></p>
<p>添加括号后，成功创建</p>
<p><img src="/2023/08/31/%E5%87%BD%E6%95%B0%E7%B4%A2%E5%BC%95/sql.png" alt="sql"></p>
<p>本地测试能否走索引</p>
<p><img src="/2023/08/31/%E5%87%BD%E6%95%B0%E7%B4%A2%E5%BC%95/ifIndex.png" alt="ifIndex"></p>
<p>成功走索引，完成！</p>
]]></content>
      <categories>
        <category>软件学习</category>
        <category>MySQL</category>
        <category>索引</category>
      </categories>
      <tags>
        <tag>软件学习笔记</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>发展历程</title>
    <url>/2021/05/26/%E5%8F%91%E5%B1%95%E5%8E%86%E7%A8%8B/</url>
    <content><![CDATA[<p>机器学习是人工智能( artificial intelligence)研究发展到一定阶段的必然产物.二十世纪五十年代到七十年代初,人工智能研究处于“推理期”,那时人们以为只要能赋予机器逻辑推理能力,机器就能具有智能这一阶段的代表性工作主要有A. Newell和H. Simon的“逻辑理论家”( Logic Theorist)程序以及此后的“通用问题求解”( General Problem Solving)程序等,这些工作在当时取得了令人振奋的结果.例如,“逻辑理论家”程序在1952年证明了著名数学家罗素和怀特海的名著《数学原理》中的38条定理,在1963年证明了全部52 条定理,特别值得一提的是,定理2.85甚至比罗素和怀特海证明得更巧妙.A Newel和H. Simon因为这方面的工作获得了1975年图灵奖然而,随着研究向前发展,人们逐渐认识到,仅具有逻辑推理能力是远远实现不了人工智能的E.A. Feigenbaum等人认为,要使机器具有智能,就必须设法使机器拥有知识在他们的倡导下,从二十世纪七十年代中期开始,人工智能研究进入了“知识期”在这一时期,大量专家系统问世,在很多应用领域取得了大量成果.E.A.<br> Feigenbaum作为“知识工程”之父在1994年获得图灵奖但是,人们逐渐认识到,专家系统面临“知识工程瓶颈”,简单地说,就是由人来把知识总结出来再教给计算机是相当困难的于是,一些学者想到如果机器自己能够学习知识该多好! 事实上,图灵在1950年关于图灵测试的文章中,就曾提到了机器学习的可能;二十世纪五十年代初己有机器学习的相关研究,例如A. Samuel著名的跳棋程序.五十年代中后期,基于神经网络的“连接主义”( connectionism)学习开始出现,代表性工作有F. Rosenblatt的感知机( Perceptron)、B. Widrow的 Adaline等在六七十年代,基于逻辑表示的“符号主义”( symbolism)学习技术蓬勃发展,代表性工作有P. Winston的“结构学习系统”、R.S. Michalski 等人的“基于逻辑的归纳学习系统”、E.B.Hunt等人的“概念学习系统”等;以决策理论为基础的学习技术以及强化学习技术等也得到发展,代表性工作有N.J. Nilson的“学习机器”等;二十多年后红极一时的统计学习理论的一些奠基性结果也是在这个时期取得的</p>
]]></content>
      <categories>
        <category>人工智能学习</category>
        <category>发展历程</category>
      </categories>
      <tags>
        <tag>人工智能</tag>
        <tag>发展历程</tag>
      </tags>
  </entry>
  <entry>
    <title>人类系统调优</title>
    <url>/2022/06/02/%E4%BA%BA%E7%B1%BB%E7%B3%BB%E7%BB%9F%E8%B0%83%E4%BC%98/</url>
    <content><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>去年 5 月曾经写了一篇文章介绍了下 <a href="https://zhuanlan.zhihu.com/p/371254789">Lex Fridman 大佬的日常生活安排</a>，后续我也根据他的方法对自己的日常生活做了一系列规范和改进。这一年整体实行下来，效果还是非常显著的，本文的最后会对我的一些实践以及借助的工具做一些分享。</p>
<p>最近几个月，偶然在油管上看到了个 <a href="https://youtu.be/2ekdc6jCu2E">Rich Roll 采访 Andrew Huberman 的 podcast</a>，介绍了如何提升我们日常工作，学习表现的相关神经科学原理与可以利用的“工具”，瞬间打开了一扇新世界的大门。后续又一连追了好几集 Huberman 自己的 podcast，从各个方面了解了一下跟我们日常生活，健康，学习，工作，锻炼等方面相关的知识。与其它很多讲“养生”的文章和视频最大的区别在于，Huberman 本身是斯坦福的神经科学教授，其中讲述的内容都是<strong>来自于高质量，peer reviewed 的科学研究成果</strong>，从机体工作原理出发，非常细致地介绍了相关的实验和结论，并给出了很多实操建议（很多都是零成本，不是搞推销的……）。</p>
<p>通过一系列的学习，逐渐有种学习了各种人类的“组成和操作原理”的感觉。通过一系列的工具和实践，我们也可以<strong>像调优软件程序那样来“调优”我们自身的人体系统</strong>。这篇文章就来介绍一些相关的知识内容。注意，原版的 podcast 中有非常多专业性的阐述，在这篇文章中基本都去掉了，尽量以故事性的描述来讲解，相对会比较好理解。当然准确性也会因此有所下降，如果希望获取更专业的内容，强烈建议观看 <a href="https://hubermanlab.com/">原版的 podcast 内容</a>。</p>
<h1 id="睡眠"><a href="#睡眠" class="headerlink" title="睡眠"></a>睡眠</h1><p>如果你想要获得健康，更好的工作学习状态，提升生理健康如免疫，新陈代谢，以及心理健康如更好的心情，专注能力等，最最重要的前提是拥有一个良好的睡眠。</p>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>睡眠最重要的控制机理是我们内在的生物钟。随着生物钟的影响，我们体内的各类化学物质会发生变化，体温也随之改变，会影响我们的各种内在状态和外在行为。Huberman 教授很形象地描述了这个“生物钟”的具体作用方式：在早上，身体释放的皮质醇（cortisol）和肾上腺素（aderenaline）会让我们醒来，同时还会设定松果体释放褪黑素的倒计时钟，会在十多个小时之后让我们感到困意再次入睡。</p>
<p>影响这个生物钟的最大因素是光照。我们的眼睛除了能够看到东西，另外一个重大的作用就是<strong>通过黑视素神经节细胞来接收光照信息，用以设定我们的内在生物钟</strong>。这也是为什么有时候我们通宵工作之后，虽然已经持续很久时间没有睡眠了，但随着太阳升起，整体的生物钟被设定到了类似起床时的状态，各类化学物质的释放会让我们突然感觉又有精神了。后续很多最佳实践里也都跟这个原理相关，我们需要控制自己接收光照的时间点，类型和时长。</p>
<p>此外，<strong>体温也是一个用于控制我们生物钟的手段</strong>。一般来说我们的体温会从深睡眠中比较低的状态逐渐升高，到醒来后持续上升。到了一天的后半段会开始逐渐下降，直到再次进入睡眠。</p>
<h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><p>基于上面的原理，Huberman 教授提供了一系列提升睡眠的最佳实践：</p>
<ul>
<li>皮质醇的释放与接触阳光有关，因此如果想尽快醒来且保持日间良好的精神状态，<strong>起床后应该到外面去接触阳光，持续 2-10 分钟</strong>。这对于血压控制，心理状态，设定睡眠的“倒计时钟”等都有很大好处。户外日光的效果最好，如果是人造光源，蓝光的效果会比较好，且最好是上部（天空的位置）的光源。根据光照强度推算，隔着窗户接收日光的强度会降低 50%以上，而达到同样效果所需要的光照时间则需要 50 到 100 倍。有意思的是，这一点对于视障人士也有效，因为前面提到的黑视素神经节细胞并不是用于视觉成像的细胞。</li>
<li>对应的，<strong>在晚上要尽量减少光源的接触</strong>，因为这会扰乱我们的生物钟，让身体系统误以为是在白天。尤其是晚上 11 点到次日凌晨 4 点之间接收光源，会抑制后续几天的多巴胺的释放，影响心情，心理健康，专注度，学习能力，新陈代谢等等。关于多巴胺的作用和机理，后面会再单独介绍。</li>
<li>如果不可避免需要在晚上接触光源，处于较低位置，暗淡的红光，蜡烛之类的会相对好一些。如果要看电脑，建议使用 blue blockers 眼镜，这跟一些电脑软件会自动调节屏幕色温的效果可能类似。</li>
<li>傍晚观察落日，对于后续入睡也有帮助，甚至能减轻晚上摄入光照的负面影响，有点神奇。</li>
<li>人一天中的精神状态一般会在中间有个短暂的低谷，所以午睡对于有些人可能是有帮助的。也可以用一些其它的非睡眠深度休息的方式来替代，如 <a href="https://youtu.be/M0u9GST_j3s">Yoga Nidra</a>，<a href="https://www.headspace.com/">冥想</a>，<a href="https://www.youtube.com/c/MichaelSealey">自我催眠</a>（可以利用一些 App，如 Reveri）等。</li>
<li>体温对生物钟周期的影响：<ul>
<li>早上洗冷水澡，会让人快速升温，从而把睡眠周期往前移（早起）。</li>
<li>晚上锻炼身体，会让人保持高体温，从而延后周期（晚睡）。</li>
<li>可以选购一些自动控制体温的智能床垫来提升睡眠质量。</li>
</ul>
</li>
<li>一般建议的锻炼时间：醒来后 30 分钟，3 小时和 11 小时这三个时间点。不过总体来看好像影响度比较小。</li>
<li>饮食和药物因素：<ul>
<li>咖啡因会占据腺苷（adenosine）的受体，阻断入睡的信号。有不少文章都提到中午之后尽量不要喝咖啡，但 Huberman 表示没有科学实验表明咖啡因对所有人的效果是一样的，得根据自己的测试情况来。比如他自己在下午 5 点喝咖啡也能正常入睡。</li>
<li>镁，对入睡有帮助。</li>
<li>芹黄素也能帮助入睡，但要注意对雌性激素的影响。</li>
<li>建议不要摄入太多牛磺酸。</li>
<li>不建议通过摄入褪黑素来帮助入睡，褪黑素药物本身的规格把控不严格，且褪黑素容易引起抑郁情绪。</li>
<li>中午可以吃低卡路里以及含酪氨酸的食物，如坚果，大豆，部分蔬菜等，提升多巴胺，肾上腺素，保持清醒。</li>
<li>晚上则可以吃点淀粉，白肉等富含色氨酸的食物，进而转化为血清素，会让人更加平静，容易入睡。</li>
</ul>
</li>
<li>对于绝大多数人，6-8 小时的睡眠时长是比较健康的。</li>
<li>对于各类药物的检索可以参考：<a href="https://examine.com/">examine.com</a>。</li>
</ul>
<h1 id="饮食"><a href="#饮食" class="headerlink" title="饮食"></a>饮食</h1><p>在前面 Lex 的分享中，提到了他采取了生酮饮食以及 fasting（禁食）的习惯，这引起了我对于饮食习惯的注意。Huberman 教授正好也有几个 podcast 介绍了 fasting，肠道健康等话题，很有意思。</p>
<h2 id="Fasting-的背景"><a href="#Fasting-的背景" class="headerlink" title="Fasting 的背景"></a>Fasting 的背景</h2><p>我们可以把身体跟进食相关的化学状态分成 2 类：</p>
<ol>
<li>吃饱了的状态，也就是血糖含量较高的状态。此时我们身体会更活跃地进行体内细胞的复制与成长。</li>
<li>禁食的状态，也就是血糖含量较低的状态。此时我们的身体会更活跃地进行体内细胞的修复与清理（autophagic）。</li>
</ol>
<p>由于睡眠时我们天然是不吃东西的，所以一般来说睡眠中的一部分时间会使我们处于禁食状态，饮食时间的选择实际上就是在控制上述两个状态的持续时间和平衡关系。比较有意思的是世界上很多民族文化和宗教中，都有一些跟禁食相关的习俗，甚至会持续很多天。</p>
<p>在 2012 年，科学家开始对小白鼠做实验，把他们分成两大组，一组可以在一天中的任何时间吃东西，而另一组只能在固定的 8 小时里吃东西。在大组里再区分小组，给小白鼠吃健康的和不健康的食物。结果发现，只能在 8 小时里吃东西的小白鼠们，即使吃的是不健康的高脂肪食物，他们的健康水平仍然得到了保持甚至提高，相比所有不做限制的组都有明显的提升。</p>
<p>这个研究震动了学术界，后续又有非常多的针对人类，不同性别，不同年龄，不同职业（包括运动员）的各种实验与论文发表，科学家们发现这种<strong>间歇性禁食状态对于身体有非常多的好处</strong>，包括：促进肝脏健康，胆汁酸代谢，炎症自愈，保持体重，提升 brown fat 储备（对健康有益），防止非酒精性脂肪肝，血糖控制，肠道健康等等。如果养成间歇性禁食的习惯 60 天以上，还会让我们的身体倾向于代谢脂肪来供能，控制体重。</p>
<p>因此，Huberman 教授指出，<strong>何时进食，与吃什么东西，其实是同等重要的</strong>。这个研究也让很多学术界的研究人员自己也都养成了 fasting 的习惯，包括 Huberman 自己。</p>
<h2 id="Fasting-的实践"><a href="#Fasting-的实践" class="headerlink" title="Fasting 的实践"></a>Fasting 的实践</h2><p>由于长时间的禁食难度较大，所以绝大多数的研究都专注于间歇性禁食，也就是 time restricted feeding。简单来说就是跟前面的小白鼠实验一样，在一天的固定时间段来吃东西（跟睡眠周期对齐），而其它时间段都不摄入任何食物的做法。这里简单整理为基础和高阶两个版本：</p>
<ul>
<li>基础：如果想享受 fasting 的基础收益，最简单的执行原则是<strong>起床后至少 1 小时内不要吃东西，同时睡前的 2-3 小时不要吃任何东西</strong>。</li>
<li>高阶：目前研究结果中<strong>最理想的进食窗口是 8 小时</strong>，结合社会习俗等，一般比较合理的时间在 10-18 点或 12-20 点的范围。看起来<strong>不吃早饭并不是什么坏事</strong> :)</li>
<li>作者特地温馨提醒，如果想通过健身来增肌，建议可以把这个时间窗口往前移，因为早上摄入蛋白质会对肌肉增长有益。而健身的时间可以自由选择。</li>
<li>尽量<strong>保证这个窗口时间的稳定性</strong>，也非常重要。否则就跟频繁倒时差产生的效果差不多，会打不少收益折扣。</li>
<li>如果想尝试高阶 fasting，建议逐渐切换进食习惯，例如每两天缩短 1 小时的进食窗口，逐渐达到理想的 8 小时。</li>
</ul>
<p>值得注意的是，这里说的不吃任何东西，并不是说连水也不能喝。从前面的背景可以看到，是否处于禁食状态，主要依据是血糖水平，因此：</p>
<ul>
<li>喝水，茶，咖啡（不加牛奶）等，并不会中断禁食。但一勺糖的摄入就会中断。</li>
<li>晚饭后想尽快进入禁食状态，可以做一些轻量运动，比如散步等，加快血糖清理。</li>
<li>二甲双胍，黄连素（berberine）等可以直接促进血糖清理。肉桂皮，柠檬汁，也能轻微降低血糖。</li>
</ul>
<p>最后，如果禁食期间觉得有些头晕，颤抖，并不需要立刻进食或摄入糖分。可以喝一点盐水（可以加柠檬汁），一般就能很好的缓解症状。这让我想起 Lex 会提到了会服用药片来补充各种电解质元素，比如钠，镁，钾等。</p>
<h2 id="饮食与消化道健康"><a href="#饮食与消化道健康" class="headerlink" title="饮食与消化道健康"></a>饮食与消化道健康</h2><p>由于我个人的肠胃功能比较差，所以也特别关注了一下消化道健康的话题。Huberman 邀请了一位非常知名的微生物学家 Sonnenburg 来介绍肠胃微生物群落与我们的健康之间的关系，也是学到了很多新的知识：</p>
<ul>
<li>肠道的微生物群不仅影响消化系统的健康运作，<strong>对人体的免疫系统也起到了非常关键的因素</strong>。</li>
<li>婴儿出生，成长的方式会形成非常不同的肠道菌群生态。暴露在微生物环境中（但要注意会引起疾病的情况），对于维持菌群环境是有益的，比如家里养宠物，让孩子自由玩耍等，不需要过度清洁与消毒。</li>
<li>什么是健康的肠道菌群生态，目前没有一个标准的结论。不过总体来看，<strong>菌群的多样性程度高，一般就表示更加健康</strong>。</li>
<li>抗生素会严重破坏肠道菌群生态，需要谨慎使用。</li>
</ul>
<p>在访谈中，两位重点讨论了一个实验，就是什么样的饮食方式会让我们更好的维持肠道菌群的多样性和健康。实验主要对比了两种附加饮食：</p>
<ul>
<li>高纤维食物：全谷类，豆类，蔬菜，坚果。这也是传统上被认为非常健康的食物，其中很多纤维的分解都需要肠道菌群的帮助，换句话说，纤维就是它们的“食物”。</li>
<li>发酵类食物：酸奶，牛奶酒（kefir），康普茶，酸菜，泡菜，纳豆等。注意需要是自然发酵，一般是冷藏且非罐装的食品。而且像酸奶这类要格外注意不要加糖等添加剂。</li>
</ul>
<p>实验的结果也颇令人意外：</p>
<ul>
<li>摄入发酵类食品的组，显著提升了肠道菌群的多样性。被试者<strong>几十个免疫标志物的显著降低，对各类炎症都有更好的抑制作用</strong>。没想到吧，肠道菌群还能调节炎症。</li>
<li>肠道菌群本来的多样化程度比较高的人，摄入高纤维食物是有帮助的。如果不是，则摄入高纤维食物的帮助不大。在工业化进程中，人类的进食习惯已经有很多代都转变为了摄入大量肉类，加工食品等，肠道菌群的生态无法仅通过提高纤维食物的量来改变其族群结构。</li>
</ul>
<p>此外在访谈中，两位还讨论了具体食谱推荐的问题，引用了 <a href="https://youtu.be/sJLK3sVexIk">Christopher Gardner 关于生酮饮食与地中海饮食比较的研究</a>。这里总结一下实践建议：</p>
<ul>
<li><strong>如果要改善肠道菌群生态，最好的方式是一天两次摄入天然发酵类食品</strong>。</li>
<li>高纤维食物对于肠道菌群生态的维护是有益的，建议日常饮食以植物类食物为主，尽量避免深度加工食品的摄入，控制糖的摄入。Sonnenburg 教授还讲了个故事，说微生物学家参加的会议，一般餐厅的沙拉吧总是会供不应求 :) 前面提到的 Rich Roll 大佬也是个素食者。</li>
<li><strong>益生菌的效果没有广泛研究支持</strong>，且这类产品的监管很有限。<strong>益生元的效果也是好坏参半</strong>，缺乏多样性，溶解速度太快等问题都使总体效果存疑。</li>
<li>地中海饮食相比生酮饮食来说对健康的影响效果接近，但更容易坚持遵循。另外生酮饮食如果长期实践可能有一定的风险。所以<strong>总体更推荐地中海饮食结构</strong>。</li>
</ul>
<p>另外值得参考的是我们也有官方的 <a href="https://sspai.com/post/72984">中国居民膳食指南</a>，或许更适合东方人的饮食习惯。</p>
<h1 id="心态与动力"><a href="#心态与动力" class="headerlink" title="心态与动力"></a>心态与动力</h1><p>这一部分主要介绍的是人体的多巴胺系统原理，以及如何利用它来形成健康，自律的生活方式。这一集是 Huberman 开播以来播放量最高的一集，对于强健我们的心智有着非常好的指导作用。</p>
<h2 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h2><p>多巴胺是一种非常重要的化学物质，主要作用于两个神经回路：一个影响身体的运动，例如帕金森病与多巴胺的分泌不足有关；另一个则影响我们的动机，欲望与快乐，这几乎与我们从事的各种活动有关，无论是工作，学习还是社交，休闲娱乐。这里我们会主要讨论多巴胺的后者影响能力。我们为什么会“放弃”，实际上是由于在不安，压力，沮丧等情绪作用下，身体内的去甲肾上腺素水平不断提升，当超过一定阈值时，神经系统中的认知控制就会关闭，我们就放弃了。多巴胺能够抑制去甲肾上腺素作用，从而持续“激励”我们前行。</p>
<p>神经系统中多巴胺含量水平的高低会影响我们的情绪，当多巴胺水平低时，我们会感到情绪低落，没有动力，而多巴胺水平高时，我们会感到兴奋和快乐。在通常情况下，我们的身体处于多巴胺 baseline 的状态，当我们达成一些令人兴奋的目标（比如玩游戏胜利，考试拿高分）后，多巴胺的水平会达到一个高峰，此时我们就会获得巨大的愉悦感。在高峰之后，多巴胺水平会回落到比 baseline 更低的一个水平，且这个状态会持续一段时间。</p>
<p>这里有两个非常重要的原理：</p>
<ul>
<li>多巴胺绝对值含量的高低只是一方面，<strong>更重要的是其“相对变化量”的多少</strong>。比如在刷抖音时看到了一个很有趣的视频，多巴胺水平升高，你会感到快乐，刷到下一个视频时，你感到的快乐程度好像不会那么强烈了，因为多巴胺已经在一个比较高的水平，难以形成更大的变化量。而同样的视频，如果你是几天之后看到，或许你会觉得有意思的多。所以<strong>当你持续做一件喜欢的事情时，你感受到快乐的阈值也会不断提高</strong>。</li>
<li><strong>多巴胺的总体“储备”是有限的</strong>！也就是说无论你是通过学习，工作，娱乐，社交，运动等不同方式来获得快乐，所消耗的“快乐货币”都是同一种：多巴胺。举几个例子来看下这个原理带来的影响：<ul>
<li>很多自律的人都会说自己是 work hard，play hard 的生活方式，比如工作日通过高强度的工作来获得成就和满足感，休息日进行各种休闲娱乐，运动，社交等方式来获得快乐，其实背后都是在释放多巴胺来获取快乐。长期持续，我们身体的多巴胺 baseline 会逐渐下降，出现一种耗尽（burn out）的心理感觉，对很多事物无法保持之前的兴趣与精力。</li>
<li>很多人会对玩电子游戏着迷，因为它们能带来巨大的多巴胺释放刺激让人感到快乐。但要意识到，多巴胺的储备是有限的，如果对此上瘾，你的多巴胺耗尽问题就会变得非常严重：一方面能够引起你兴趣的事物会变少，可能只有玩游戏才能带来快乐；另一方面，后续甚至会导致玩游戏本身也无法触发多巴胺释放，引起严重的抑郁问题。</li>
</ul>
</li>
</ul>
<p>另外，<strong>多巴胺也具有叠加效应</strong>。比如你喜欢健身，那么运动就会刺激多巴胺的释放。而我们实际去健身时，可能会不自觉地安排了很多其它的“快乐因素”，比如选一个精神状态比较好的日子，运动前喝一些能量饮料，跟认识的朋友一起去，边健身边 social，听一些自己喜欢的音乐或 podcast，等等。这些因素也都会促进多巴胺的释放，让你感到“前所未有的快乐”。但要注意前面的原理，多巴胺的高峰越高，后面随之而来持续的低谷也会越长，而且长此以往，可能会降低你单纯从运动中获取快乐的能力。这样的例子还有很多，比如边跟朋友吃饭，边玩手机，拍照发朋友圈，可以计算一下叠加了几种快乐因素 :)</p>
<h2 id="影响多巴胺的外界因素"><a href="#影响多巴胺的外界因素" class="headerlink" title="影响多巴胺的外界因素"></a>影响多巴胺的外界因素</h2><p>我们来看下具体影响多巴胺释放的各类因素有哪些，首先是促进多巴胺分泌的：</p>
<ul>
<li>巧克力，提升到 1.5 倍的多巴胺 baseline</li>
<li>性行为，提升到 2 倍</li>
<li>尼古丁，提升到 2.5 倍</li>
<li>可卡因，提升到 2.5 倍</li>
<li>安非他命，提升到 10 倍</li>
<li>咖啡因本身只会少量提升多巴胺，但它会抑制一些多巴胺受体，提升同等多巴胺造成感受的效果</li>
<li>马黛茶，包含咖啡因，能控制血糖，还能保护多巴胺神经元</li>
<li>刺蒺藜豆也能提升多巴胺（基本等同于 L-DOPA），还能提升男性精子数量和质量</li>
<li>运动，带有主观成分，喜欢跑步的人，可以提升到 2 倍 baseline</li>
<li>健康的社交关系也会促进多巴胺释放</li>
</ul>
<p>食物方面感觉 Huberman 教授<strong>非常推荐马黛茶</strong>。</p>
<p>也有很多提升多巴胺释放或影响其效果的药物：</p>
<ul>
<li>L-Tyrosine（酪氨酸），提升多巴胺</li>
<li>Phenethylamine（PEA），巧克力中也包含，能够提升多巴胺</li>
<li>Huperzine A，提升多巴胺</li>
<li>各种“聪明药”，如 Adderall, Modafinil, Alpha-GPC, Ginkgo 等，留学党应该很多都有耳闻</li>
</ul>
<p>通常来说，<strong>不推荐持续使用这些药物</strong>，因为多巴胺释放之后的高峰会带来 baseline 水平的降低，导致无法享受活动的快乐，无法专注，限制学习能力和神经元可塑性等。Huberman 表示<strong>一周使用一次的频率应该是安全的</strong>。</p>
<p>最后还有一个比较特别的研究，就是<strong>冷水浴能够提升多巴胺释放到 baseline 的 2.5 倍左右</strong>，且持续时间更长，能达到 3 小时左右。建议使用 10-14 摄氏度的水温，注意安全。此外冷水浴也不需要太频繁，每周 11 分钟左右足够。如果已经习惯了冷水浴，那么也就没有释放多巴胺的效果了。</p>
<p>还有一些因素会降低多巴胺，如：</p>
<ul>
<li><strong>褪黑素，会引起多巴胺的减少</strong>。前面也提到过并不建议使用褪黑素来帮助入睡，或者适应时差等。</li>
<li>睡眠时段接触光源，也会引起接下来几天的多巴胺水平下降。<strong>半夜睡不着刷手机是很有害的哦</strong>。</li>
</ul>
<h2 id="维持健康的多巴胺水平"><a href="#维持健康的多巴胺水平" class="headerlink" title="维持健康的多巴胺水平"></a>维持健康的多巴胺水平</h2><p>了解了原理和各种影响因素后，我们来看下如何有效设计我们的生活工作方式来维持健康，可持续的多巴胺水平。</p>
<p>简单回顾一下，前面我们已经知道了多巴胺储备有限，且对一件事物上瘾会不断提高感受快乐的阈值，那么如何让我们能对一件事情保持长时间的兴趣和投入度，又不至于耗尽多巴胺呢？一个经典的例子是赌场的运作方式，我们并不是每一次下注都能赢，偶尔赢一次会释放多巴胺，而且根据赢得钱的多少有所上下浮动，这会吸引玩家持续参与。这就是一种非常有效的<strong>间歇性且随机的奖励机制</strong>。感觉很多游戏，社交网络产品也借鉴了这个思路来进行设计。</p>
<p>对于我们经常需要从事的活动，我们也可以模拟这个机制。还记得前面提到的<strong>多巴胺叠加效应</strong>吗？我们可以<strong>通过随机化叠加因素的多少，来实现多巴胺释放的差异性</strong>。还是以健身为例，我们可以随机决定今天是否要听音乐，是否去健身时带手机，是否要在健身前喝能量饮料等因素。如果其它什么都不做，只是单纯健身，那么多巴胺的释放量就会相对较低。如此就能模拟多巴胺释放有高有低的随机奖励机制。</p>
<h2 id="成长型思维"><a href="#成长型思维" class="headerlink" title="成长型思维"></a>成长型思维</h2><p>最后来看下如何构建良好的思维方式来利用多巴胺系统提升自我。</p>
<p>有一个非常知名的实验，挑选了一群天生喜爱画画的小朋友，在他们完成画作后给与一些奖励。后面在移除这些奖励后，小朋友们对于画画的兴趣和动力大大降低了。这个实验说明，当我们因为一个活动收到奖励（比如金钱，美食等）时，我们<strong>反而会降低活动本身的愉悦程度</strong>。而且多巴胺本身影响我们对时间的认知，同时也影响我们的情绪状态，如果我们<strong>始终以完成活动后的奖励为目标，则整个过程中就很少释放多巴胺，让原本困难的过程变得更加难以坚持</strong>。</p>
<p>仔细想一下，这是一个非常有意思的观察。多巴胺有点像我们的“本能系统”，决定了我们是否有动力做一件事。但反过来<strong>我们的主观思想却可以影响这个系统起作用的方式</strong>，这也是人类为何能摆脱动物本能，达成很多需要“反人性”的投入才能取得的成就的原因吧。上述的实验是我们的主观思想造成的一个反面作用的例子，我们自然也可以实现正面作用，那就是成长型思维。</p>
<p>具体来说，就是<strong>通过自我暗示，把努力过程本身当作一种“奖励”</strong>。我在努力学习，这个过程本身就是有趣的，会让我不断变得更强，这样的想法会在过程中激发身体系统释放多巴胺，而多巴胺提升了我们的情绪和动力水平，也会让努力的过程中碰到的困难变得相对容易克服。专注于这个过程的本身，而不是在过程前进行各种外界刺激（如前面提到的药物），或者在过程后给自己巨大的奖励。</p>
<p>这种思维方式看起来很主观，但这就是我们的神经系统工作的方式，虽然人类的“硬件系统”都差不多，但知识，思维这些运行之上的“软件”却可以千差万别。<strong>我们可以通过自律，自我暗示来改变自身对各类活动的喜好</strong>。例如通过暗示 fasting 对我们健康的益处，来获取满足感，而不是借助于 fasting 结束后的大快朵颐。通过自律抵御高油盐食物的吸引力，并且自我暗示植物类食物对身体的好处，坚持一段时间，会觉得花椰菜也挺美味的。这也是为什么我们在这篇文章中介绍了很多原理性的内容，而不仅仅是行为建议。因为这些原理知识能够让我们做更好的自我暗示 :)</p>
<p>多巴胺系统中也有对我们认知成长造成“障碍”的运作机理。例如当我们接受到的信息支撑我们之前的信念时，也能够激发多巴胺的释放让我们感到快乐，这从本质上会改变我们对世界的认知。由此可见，“空杯心态”是多么难得的品质，网上如此多的争论无法达成共识也有很大一部分“归功”于此。如何克服神经系统中的这类缺陷呢？一种可能的方法是尽可能调节情绪，使自己处于镇静的状态（提升血清素水平），这样才能让自己更好的去倾听和吸收跟自己认知不一致的信息，更好地协同合作。</p>
<p>这一节的 podcast 对我本人的冲击非常大，强烈建议大家观看这期 <a href="https://hubermanlab.com/controlling-your-dopamine-for-motivation-focus-and-satisfaction/">Mindset &amp; Drive</a>，相信也会有不同的收获。</p>
<h1 id="学习与专注"><a href="#学习与专注" class="headerlink" title="学习与专注"></a>学习与专注</h1><p>在了解了多巴胺的运作机制基础上，我们可以继续探究一些跟大脑健康，专注度，如何进行高效学习相关的话题。</p>
<h2 id="学习的原理"><a href="#学习的原理" class="headerlink" title="学习的原理"></a>学习的原理</h2><p>从脑神经科学来看，学习的本质是神经元的重新连接（rewire），进一步来看，需要大脑处在一种学习的化学状态下，也就是 Huberman 经常提到的神经可塑性（neuroplasticity）状态。要达到这个神经可塑性状态，有两个重要条件，一个是足够的专注度，另外一个是“犯错”的信号（后面会展开）。另外大脑一个比较有意思的机制是，在学习时的神经可塑状态下，乙酰胆碱会标记需要改变的神经元，而具体的神经元重连接则主要是在休息和睡眠时发生，是不是有点像 JVM 虚拟机的垃圾回收机制 :)</p>
<p>什么是犯错信号呢？当我们尝试做一些事情，但没有达到预期目标时，身体会给大脑发信号，“我犯错了”。处在这种犯错，沮丧的认知状态下，神经系统会释放肾上腺素（提升 alertness），乙酰胆碱（提升 focus），多巴胺（促进神经元的 change，rewire）等化学物质，激活神经元的可塑性。也就是说，<strong>犯错是我们进入学习状态的重要前提</strong>。搞机器学习的同学应该很熟悉了吧，这跟我们训练模型不是一模一样么 :) 另外很多人可能觉得心流（flow）状态是学习的最佳状态，而 Huberman 则不这么认为。<strong>心流是一种精神高度集中且接近于自动化的状态，是在做我们已经知道怎么做的事情，而不是在学习新的知识技能</strong>。</p>
<p>对于这个学习状态，经典的实验是给人们戴上一些能转变角度的眼镜，然后执行一些类似物体抓取的任务。由于看到的东西通过眼镜改变了其本来的位置，一开始在尝试时总会出现抓取动作的偏离。但后续在进入神经可塑性状态后，我们能逐渐适应相关的视觉偏移，协调自己的听觉，动作等都与之协同，顺利完成任务。更有意思的是，<strong>这个“神经可塑性”的化学状态是可以持续的</strong>，我们甚至可以先通过一些其它操作触发大脑的这个机制，再去进行真正的学习，以加快学习的速度。这里还有一个隐藏逻辑，当你在遇到挫折困难时，大脑进入了可塑性状态，而此时你却放弃了，那么<strong>神经元也会重新连接到这种容易放弃的行为模式，形成恶性循环</strong>。</p>
<p>人在年幼时期大脑天然的神经可塑性会比较好，而在 25 岁以后则会大大下降。我们后面会提到如何来进行克服。</p>
<p>另外，<strong>休息和睡眠时也会发生大量的神经元重连接的活动</strong>，这也是之前我们就提到过的，高质量的睡眠是实现很多生理，心理健康强壮的先决条件。</p>
<h2 id="利用神经可塑性"><a href="#利用神经可塑性" class="headerlink" title="利用神经可塑性"></a>利用神经可塑性</h2><p>如果正在阅读文章的你还未满 25 岁，那么恭喜你，你的神经可塑性仍然非常的好，可以<strong>尽可能广泛的学习各种知识和技能</strong>。比如你可以很快学会各种乐器，新的语言，新的运动，新的专业技能等等。通过更广阔领域的体验接触，尽量找到你最有兴趣的方向，可以后续再不断深入经营。</p>
<p>如果已经像我一样超过了 25 岁，那么还有很多办法来提升神经可塑性：</p>
<ul>
<li>通过实验发现，<strong>成年人对于小幅度的增量学习是完全可以适应与掌握的</strong>。例如每次视觉上的偏差只有 7 度，而不是一下子就来个 180 的大颠倒，那么成年人也能很快从错误中学习纠正。应用到实际学习中，我们每次学习的内容可以控制一下不要太多（本文有点违反了，建议收藏慢慢学习），多次积累来完成神经系统的调整学习。</li>
<li>对于达成目标的渴求度越高，重要性越大，奖励的刺激越大（比如为了生存），则神经可塑性就会越容易出现。这个比较符合直觉，但是现实中可操作性可能不高。</li>
<li>第三点最有意思，<strong>通过扰乱前庭神经系统（vestibular system），能够达到神经元可塑性的状态</strong>。简单来说，就是让你的身体有一些“新颖的重力体验”，如倒立，瑜伽，体操，滑板，任何让身体会失去平衡的一些状态等，会快速激发“我犯错了”的信号，进入学习状态，甚至可以在之后去做别的任务的学习。这一下子就让我想到了<strong>淘宝成立初期的“倒立文化”，没想到还真的有科学依据</strong>。需要注意的是，这个体验必须要新颖，也就是说如果你已经倒立很熟练了，那么去做倒立就是个日常行为，并不会给身体一种在犯错边缘，需要纠正的刺激。</li>
</ul>
<p>Huberman 认为，大脑的主要功能链路是感知，认知，情感，思想，行动。在尝试控制我们的神经系统来进行各种任务时（例如学习，解决困难问题，挑战运动极限），我们是很难用精神思想来控制其本身的（比如不断跟自己说我不能分心），更可行的办法是“逆向链路”，从我们的行动出发，利用神经系统的运作原理，逐渐影响思想，情感，认知甚至感知部分。这也是 Huberman 非常推崇各种“行动工具”的原因。Mood follows action。</p>
<h2 id="学习的理想状态"><a href="#学习的理想状态" class="headerlink" title="学习的理想状态"></a>学习的理想状态</h2><p>除了神经可塑性的化学状态外，我们也需要注意其它的因素。例如我们<strong>不能太放松以至于有些昏昏欲睡，也不能太紧张激动，无法控制自己拥有清晰的思考</strong>等。这些也都跟我们体内的多巴胺，肾上腺素，乙酰胆碱，血清素，褪黑素等化学物质的水平有关，需要做好调节。在之前 Rich Roll 的访谈节目中，Huberman 提了一个非常有效的“呼吸工具”，叫<strong>生理叹息</strong>（Physiological Sigh）。操作方法上简单来说就是吸两口气，然后出一口长气。通常情况下，只要一两次生理叹息就足以使我们的压力和警觉水平迅速下降，让人感到更加平静，提升学习表现。</p>
<p>前面提到的成长型思维也很重要，在遇到错误导致的沮丧感觉时，可以不断增强自我暗示，失败是帮助我们学习成长的唯一路径，对我们是有益的，以此增加多巴胺的释放，提升学习动力和过程中的愉悦感。</p>
<p>联系到睡眠对学习的促进作用，也有一些研究提供了一些相关的 tips：</p>
<ul>
<li>在学习时听一些有规律的节拍，在入睡时也播放同样的微弱节拍，能够提升学习和记忆的效果。</li>
<li>一般在 90 分钟的学习后（人体生物钟的周期），可以选择进行 20 分钟的休息（non sleep deep rest），也会加强学习的效果。</li>
<li>Gap effect，在学习中随机停止 10 秒钟，这些停止会在睡眠中加速“播放”，提升学习效果。</li>
</ul>
<h2 id="提升专注"><a href="#提升专注" class="headerlink" title="提升专注"></a>提升专注</h2><p>“专注”背后的机理是大脑中两种“网络模式”的协调，一种叫 Default network，在我们不做任何事情时被激活，另一种叫 Task networks，在我们专注于做某些事情时被激活。普通人的大脑能够很好地协调这两个模式，两者像跷跷板一样，当一种模式被激活时另一种模式会被抑制。而具有专注障碍（比如多动症）的人来说，这两者无法很好地进行协调，因此会出现无法专注的现象。</p>
<p>通过提升多巴胺水平，可以有效促进这两种网络模式的协调，因此有非常多的多动症治疗药物都跟提升多巴胺有关，例如 <strong>Adderall，Modafinil</strong> 等。一些调查表明，这些药物（经常被称为聪明药，nootropics）在美国被滥用的程度甚至超过了大麻，不少“学霸”都以此来提升注意力，减少对睡眠的需求。但 Huberman 教授表示，一方面多巴胺的刺激提升后都会带来多巴胺水平的低谷，另一方面这些药物也可能导致上瘾，对新陈代谢作用造成扰动，有很多负面影响，<strong>对长期的学习与记忆效果可能并没有提升作用</strong>。在之前介绍多巴胺的章节也有提到，应该谨慎使用这类药物，并严格控制使用频率不能过高。</p>
<p>最好的提升专注的方法当然是前面聊过的更好的控制我们的多巴胺系统，例如把行动跟背后的意义相连接，给自己正面的心理暗示；将任务拆成多个小的里程碑，通过过程自身的激励来促进多巴胺的释放提升我们的专注度。此外一些安全有效的提升专注力的方法包括：</p>
<ul>
<li>适量补充 <strong>Omega-3 EPA 鱼油</strong>，这是神经细胞的组成原料之一，能够有效减轻抑郁，对治疗多动症（ADHD）也有帮助。</li>
<li><strong>通过身体其它部分释放运动，可以帮助提升注意力</strong>。教授举的例子是作为神经科医生在开刀时，如果采用半蹲半站的姿态（运动释放），拿手术刀的手更稳定不容易颤抖。这让我想起以前读书时很多同学习惯转笔，现在工作了也有不少人喜欢玩指尖陀螺，或者站立办公，可能都是类似效果。</li>
<li><strong>限制视野范围，能够提升专注度</strong>。比如我们经常因为眼睛瞟到了任务栏上的消息提示闪动而分心，可以通过一些设置来进入“专注模式”。</li>
<li>视线的高低也会影响神经状态，<strong>视线往下看会让神经系统偏向镇静，放松，甚至困倦，而视线向上则会让系统提升警惕</strong>。工作时一般至少把显示器放置在鼻子位置之上。</li>
<li>大脑不擅长处理大量频繁的 context switch，典型的比如刷抖音，不同的信息以非常快的速度频繁切换，这对我们的注意力是有伤害作用的。2014 年的一项研究表示，<strong>我们每天在手机上花费的时间应该少于 60 分钟（青少年）&#x2F;120 分钟（成年）</strong>，以免引起注意力障碍问题。</li>
<li>还有研究表明，<strong>17 分钟的冥想，能够对大脑中的神经元做重新连接，永久地改善注意力</strong>。只要做一次就可以，完全可以尝试一下。</li>
</ul>
<h2 id="大脑健康"><a href="#大脑健康" class="headerlink" title="大脑健康"></a>大脑健康</h2><p>最后来看下提升大脑健康和效能的一些方法。</p>
<p>首先是前面提到过的，保证高质量的睡眠。</p>
<p>运动方面，<strong>对大脑直接帮助最大的是有氧运动</strong>，提升心肺功能，支持大脑供能。建议每周 150-180 分钟的有氧训练。</p>
<p>对于大脑健康有帮助的食物，其中前三点是比较重要的，后面的部分涉及的研究没有那么多：</p>
<ul>
<li><strong>Omega3, 尤其是 EPA 等脂肪酸</strong>，是大脑组成的重要部分，且一般人都容易摄入不足。多吃鱼，牡蛎，鱼子酱，奇亚籽，核桃，大豆。一天至少摄入 1.5 克，理想情况需要 3 克以上。不喜欢吃鱼的话可以辅助摄入鱼油。</li>
<li><strong>磷脂酰丝氨酸</strong>，也对认知能力有帮助。通过鱼，肉类，卷心菜来摄入。</li>
<li><strong>乙酰胆碱</strong>，重要的神经调质，提升注意力。摄入胆碱的重要来源是鸡蛋，尤其是蛋黄。土豆，坚果，水果中也含有，虽然没有蛋黄中的含量那么丰富。可以通过 Alpha-GPC 等补充剂来获取。</li>
<li>肌酸，尤其对于不吃肉的人，一天需要摄入 5 克左右。</li>
<li>花青素，在蓝莓，黑莓，葡萄等食物中有提供。可以降低 DNA 损伤，缓解认知下降等问题。大约每天需要 60-120 克蓝莓的补充。</li>
<li>谷氨酰胺，可以通过牛肉，鸡肉，鱼肉，鸡蛋，大豆，卷心菜，菠菜，芹菜等食物来摄取。提升大脑在缺氧（高海拔地区）下的表现，还能够抑制对糖的需求。</li>
<li>水，钠，钾，镁等电解质是神经元信号传递所需的基础元素，需要保证。</li>
</ul>
<p>这一节中还讨论了我们身体对各种食物喜好进行判断的三个渠道，前两个分别是味觉判断和营养成分的下意识判断。第三个比较有意思，也跟多巴胺有关，即我们可以<strong>通过提升大脑代谢的活跃度来增加对某种食物的喜好</strong>。比如你如果不喜欢吃鱼，一种方法是你可以把鱼跟你平时爱吃的食物一起吃，另一种是给自己足够的心理暗示，说服自己吃鱼是有益身体健康的。通过这两种办法，你都可以让大脑释放多巴胺，从而逐渐提升对鱼类食物的喜好程度。</p>
<p>最后，如果你对膳食补充剂感兴趣，还可以看看 <a href="https://www.thorne.com/u/huberman">Huberman 教授平时会吃的补充剂有哪些</a>。</p>
<h1 id="长寿"><a href="#长寿" class="headerlink" title="长寿"></a>长寿</h1><p>最后我们来看下如何延年益寿，这是 Huberman 跟这个领域的专家，来自哈佛的 David Sinclair 的一集访谈节目。</p>
<h2 id="衰老的本质"><a href="#衰老的本质" class="headerlink" title="衰老的本质"></a>衰老的本质</h2><p>Sinclair 认为，衰老是一种疾病，它本身导致了非常多通常意义上的疾病的出现，比如阿尔兹海默症，癌症等。我们可以通过科学的手段来“治疗”衰老，甚至逆转它。</p>
<p>从本质上来说，衰老是<strong>基因信息的损失</strong>，这分为两部分：</p>
<ul>
<li>DNA 本身的信息，比如细胞中的 DNA 结构会在辐射等情况下受到破坏。</li>
<li>控制哪些基因进行表达的信息受到了破坏，也就是所谓的表观基因组（epigenome）。这部分在衰老的因素中占了 80%。</li>
</ul>
<p>人体内有一个天然的“衰老时钟”，而且并不是以匀速走的。在年轻时我们的生长发育过程中，这个时钟走得更快。所以如果青春期发育比较迅速的人，一般来说整体的时钟走的比较快，寿命也会相对短，是不是有点吓人……而且，一般比较矮小的人，像侏儒很少会得心脏病，癌症，也会明显更长寿。不过不要紧张，前面提到了，基因本身的信息只占了衰老因素的 20%，<strong>控制基因表达这部分占了大多数</strong>。</p>
<p>这里有点意外的是 Sinclair 教授介绍的最重要的几个实验，都跟前面我们提到的 fasting 有关。比如一般老鼠的寿命大概是 2 年，他们实验室有一只叫 Yoda 的老鼠，活了足足 5 年。其主要的做法就是选取了侏儒基因，以及执行 fasting。</p>
<p>教授详细介绍了 <strong>fasting 为何能提升动物&#x2F;人类 30% 以上的寿命</strong>：</p>
<ul>
<li>在低血糖水平时，身体会抑制哺乳动物雷帕霉素靶蛋白（mTOR），激活去乙酰化酶（sirtuin），形成一个非常良好的化学状态，清理旧蛋白质，提高胰岛素敏感度，提供更多能量，修复细胞等等。后面这个乙酰化酶是我们抵御衰老的一个重要武器。</li>
<li>当胰岛素水平低时，“长寿基因”会被激活，如 SIRT1 等。</li>
<li>fasting 会给细胞足够的“休息时间”。</li>
<li>血糖水平低，会让身体对胰岛素更敏感，更快吸收血糖，也对健康有益。</li>
<li>当你从来不感受饥饿时，你的衰老时钟也走的更快。</li>
<li>除了 24 小时周期 fasting 触发的 autophagic，还有更深层次的清理机制，会在禁食第二，三天启动。在老年老鼠上的实验表明，这种长时间的禁食可以让他们延长寿命 35%。不过这个实操难度对普通人来说有点大。</li>
</ul>
<p>Sinclair 也对比了一些上个世纪失败的研究，比如通过抗氧化剂来抵御衰老。现代长寿研究的核心思想是，如何<strong>通过一些机制手段来触发身体自身的衰老抵抗机制</strong>。</p>
<p>此外 Sinclair 也介绍了一些激动人心的前沿技术，例如<strong>通过基因治疗方法，可以重启我们的 DNA 表达系统</strong>。通过一次注射，可以让盲人恢复视力，这已经在老鼠身上得到了验证。或许几年后，我们可以像死侍那样实现身体各部分的逆转老化。</p>
<h2 id="实践-1"><a href="#实践-1" class="headerlink" title="实践"></a>实践</h2><p>这里列出一些 Sinclair 自己的实践方式，如果想要采纳还是要结合自身的情况来看。有意思的是这集节目下有个热门留言是这个教授竟然已经 52 岁了，完全看不出来……所以你懂的。</p>
<ul>
<li>不吃早饭，午饭也吃的比较少，酸奶或者橄榄油，晚饭吃蔬菜为主，加鱼和虾，基本不吃牛排。不吃糖，甜品，面包。基本达到了 2 小时进食窗口的高阶 fasting 状态。他偶尔也会尝试一整天都不吃东西，但比较难坚持。</li>
<li>每天摄入 1 克的白藜芦醇（resveratrol），1 克的 NMN（进而会转化为 NAD，which is sirtuin 的“燃料”），还有二甲双胍（metformin）。其中锻炼的日子可能会跳过一些补充品。他并不吃复合维生素。</li>
<li>以蔬菜为主食的好处：富含各种营养，维生素；包含异种激素（Xenohormesis），植物基于“压力”之下产生的物质，对长寿有益。后者也可以通过槲皮素（quercetin）来做膳食补充。</li>
<li>一般会隔一天进行有氧运动和力量训练。有氧运动能提升 NAD 水平。</li>
<li>根据家族病史来决定一些药物摄入，如他 29 岁就开始服用降胆固醇药物。</li>
<li>对于人造甜味剂，教授认为总体来说是安全的。他偶尔也会喝健怡可乐。</li>
</ul>
<p>对于这一系列实践，Sinclair 教授都进行了 10 多年的自身实验，并使用各种手段来监控身体数据。通过监控数据可以推测出一个人的“生理年龄”如何（不是光看脸），他自己在上述实践下，生理年龄在持续下降，现在已经达到了 30 岁左右的水平（实际年龄 52 岁）。另外，他认为每个人的身体情况不一样，医院约定俗成的生理指标范围也不一定适合每个人。<strong>未来这种健康数据的实时监控与个性化诊断会成为主流</strong>。他举了一些例子：</p>
<ul>
<li>监控血糖水平 HbA1c，观察 fasting 的影响等。</li>
<li>监控炎症指标 CRP，与心脏病等各种疾病的诱发相关。</li>
<li>监控 LDL，通过药物等进行控制。膳食胆固醇对血液胆固醇几乎没有影响，不需要戒红肉，黄油等。</li>
<li>补充铁元素可能加速衰老。医学指标需要个性化，低铁元素含量并不一定导致贫血。</li>
</ul>
<p>还有一些影响寿命的负面因素：</p>
<ul>
<li>肥胖症会加速衰老。</li>
<li>吸烟，会破坏基因表达，加速衰老。</li>
<li>X 光检查同理，没有必要时，避免接触。</li>
</ul>
<p>展望一下 longevity 研究的未来，还是挺激动人心的。现代科学每一年能让我们的平均寿命延长 1&#x2F;4 年，如果每一年能让我们的平均寿命延长超过 1 年，则达到了<strong>寿命“逃逸速度”</strong>（类比以 1000 英里每小时的速度往西飞行，太阳永远不会落下），实现了“永生”。著名的未来学家 Ray Kurzweil 预测，大约 12 年后（2034 年）就能实现，让我们拭目以待。</p>
<p>除了这集 podcast，也必须附上吴承霖大佬的万星项目 <a href="https://github.com/geekan/HowToLiveLonger">程序员延寿指南</a>。</p>
<h1 id="个人实践"><a href="#个人实践" class="headerlink" title="个人实践"></a>个人实践</h1><p>前面介绍的内容有点多，这篇文章篇幅也有些超了。最后来简单介绍下我个人目前采纳的一些行动和辅助工具。</p>
<p>睡眠方面暂时没有什么特别的措施，现在带娃基本上晚上睡眠质量也比较一般。只是会稍稍注意一下晚上 11 点后尽量不接触手机光源。早起接收光照这点，基本上就是早上遛狗或者开车通勤时间来接触，基本压力不大。如果比较讲究的同学，还可以下一个 <a href="https://mycircadianclock.org/">My Circadian Clock App</a> 来追踪一下生物钟，也是 Satchin Panda 等大佬参与开发的项目，值得信赖。</p>
<p>饮食方面，开始尝试 8 小时进食窗口的 fasting，目前感觉良好。中饭一般吃蔬菜为主的轻食，晚上就比较放飞自我，想吃啥吃啥。早上会看情况喝点盐水，茶或者 AG1 的补充剂。膳食补充剂目前基本只有复合维生素和 EPA 鱼油在使用，后面可以参考下 <a href="https://fastlifehacks.com/andrew-huberman-supplements-list/">Huberman 的“配方”</a> 增加一些。Huberman 自己也在节目中表示<strong>对白藜芦醇和 NMN 还在观望状态</strong>，我查了些资料发现有争议的地方还不少，所以我个人建议先采纳广受认可和使用的一些补充剂，如 EPA 鱼油，二甲双胍等。个人目前考虑的补充剂列表：</p>
<ul>
<li><a href="https://www.thorne.com/products/dp/basic-nutrients-2-day">基础维生素</a>，常规补充剂。</li>
<li><a href="https://www.thorne.com/products/dp/super-epa-sp608nc">Omega-3 EPA</a>。</li>
<li><a href="https://athleticgreens.com/en">AG1</a>，超火的小绿粉，各种植物提取物 + 各种维生素矿物会，Fridman，Huberman 等大佬的节目里都有提到，就是贵了点。</li>
<li><a href="https://www.thorne.com/products/dp/betaine-hcl-pepsin-225-s">Betaine HCL &amp; Pepsin</a>，保护肠胃。</li>
<li><a href="https://www.thorne.com/products/dp/l-tyrosine">L-Tyrosine</a>，提升多巴胺，可能会买个尝尝鲜。</li>
<li><a href="https://zh.m.wikipedia.org/zh/%E4%BA%8C%E7%94%B2%E5%8F%8C%E8%83%8D">二甲双胍</a>，抗衰老“神药”。</li>
<li><a href="https://www.thorne.com/products/dp/resveracel">ResveraCel</a>，白藜芦醇，NR 等抗衰老组合。</li>
</ul>
<p>很多人都关心 fasting 可能引发胆结石，这里提供一些补充信息：</p>
<ul>
<li>从这篇 <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC1419405/">Bloch, H. M. 等人的论文</a> 来看，fasting 过程中胆汁的饱和度有一个先上升后下降的过程，<a href="https://youtu.be/2lGuXBwudKw">Dr. Berg 也以此做了解释</a>，认为 fasting 加生酮饮食（摄入脂肪）对胆囊健康反而是有益的。</li>
<li>从这篇 <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC1405175/">Sichieri, R. 等人的论文</a> 的结果来看，long overnight fasting 和节食会提升得胆结石的概率。不过减肥（减少脂肪）本身就会提升得胆结石的概率。</li>
<li>持续 24 小时以上的禁食相关的研究比较少（比较难执行），但从机理上来说长时间的禁食应该会增加得胆结石的概率。</li>
<li>饮食结构，自身状况对胆结石的形成也会有很大影响，例如高胆固醇，高胰岛素水平，高碳水饮食等。高纤维食物，健康的脂肪摄入，有助于降低得胆结石的概率。</li>
</ul>
<p>总体看下来，我个人感觉这块的实验上没有一个定论（就跟 <a href="https://www.coffeeandhealth.org/factsheet/gallstones-factsheet">咖啡是否会引发胆结石</a> 一样），但应该不是一个概率很大的问题，起码 Huberman 教授跟这个领域的另一位权威 Satchin Panda 教授都没有提到这块的问题。理想情况是执行 fasting 时持续对你的身体状况做医学指标的跟踪。其它就看个人选择了 :)</p>
<p>工作，学习，专注方面，主要看自律了。这方面我总体控制还可以，在了解了多巴胺的工作原理之后就更加有自信了，主要靠各种软件的专注模式来近似执行番茄时钟法，此外也采用了升降桌，大概有 30% 的时间站立办公。工作间歇会尝试一下 Yoga Nidra。此外晚上学习时段会用 iPad 的 Books 来记录一下阅读时间，基本上每天保持 30 分钟以上，持续坚持。后面考虑试试工作时喝马黛茶，以及夏天开始尝试冷水澡。</p>
<p>运动方面是这一年来改观最大的一项，依靠小米手环 PAI 指数功能的督促，基本上做到了每周平均 3 次的跑步或者羽毛球活动，持续把 PAI 值保持在 200 左右。总体来说对于精神状态的改观还是很大的，肚子上的脂肪也减少了很多。唯一比较困扰的是一般下班后运动都要 9，10 点开始了，结束后会离入睡的时间比较近，有时候会对睡眠质量有所影响。</p>
<p>最后，Huberman 教授的 podcast 中还有很多其它内容，比如习惯养成，健身增肌，应对恐惧与创伤，情绪管理等，感兴趣的朋友可以进一步挖掘。本文以实验事实与原理假设的陈述为主，以上所有的行动方案都需要在咨询医师，专业人员的条件下，结合自身情况执行，注意自身安全，本人与 Huberman 都不负相关后果责任。</p>
<p>备注：这篇文章也同时发布到了 <a href="https://github.com/zijie0/HumanSystemOptimization">Github</a>，欢迎大家 Star 并提出宝贵建议，谢谢！如果你对我的其它作品感兴趣，也欢迎搜索关注公众号：RandomGenerator。</p>
]]></content>
      <categories>
        <category>健康</category>
        <category>高效</category>
      </categories>
      <tags>
        <tag>健康</tag>
        <tag>搞笑</tag>
      </tags>
  </entry>
  <entry>
    <title>各个排序方式</title>
    <url>/2021/06/29/%E5%90%84%E4%B8%AA%E6%8E%92%E5%BA%8F%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<h2 id="八大排序比较：冒泡排序，选择排序，插入排序，归并排序，快速排序，桶排序，基数排序的比较啊"><a href="#八大排序比较：冒泡排序，选择排序，插入排序，归并排序，快速排序，桶排序，基数排序的比较啊" class="headerlink" title="八大排序比较：冒泡排序，选择排序，插入排序，归并排序，快速排序，桶排序，基数排序的比较啊"></a>八大排序比较：冒泡排序，选择排序，插入排序，归并排序，快速排序，桶排序，基数排序的比较啊</h2><p>排序算法实现与性能分析，评测：<br>编写程序，实现冒泡排序，简单选择排序，简单插入排序，归并排序，快速排序和其他各类排序方法，产生规模分别为100，1000，10000，100000，1000000的模拟数组，使用上述排序方法对同样的模拟数据进行排序，在验证排序结果正确性（编写排序结果验证函数）的同时，利用系统时间函数分别记录各排序开始时间和结束时间，计算各排序所需时间（若超过5分钟则记录，并在结果分析中标出）。再对已排序数据稍加次序调整，模拟几乎有序数组，再重复上述排序过程。给出评测结果表，总结，分析上述排序结果。</p>
<h3 id="当数组无序"><a href="#当数组无序" class="headerlink" title="当数组无序"></a>当数组无序</h3><p><img src="/2021/06/29/%E5%90%84%E4%B8%AA%E6%8E%92%E5%BA%8F%E6%96%B9%E5%BC%8F/px1.png" alt="img"></p>
<h3 id="当数组几乎有序"><a href="#当数组几乎有序" class="headerlink" title="当数组几乎有序"></a>当数组几乎有序</h3><p><img src="/2021/06/29/%E5%90%84%E4%B8%AA%E6%8E%92%E5%BA%8F%E6%96%B9%E5%BC%8F/px2.png" alt="img"></p>
<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><h4 id="时间复杂度："><a href="#时间复杂度：" class="headerlink" title="时间复杂度："></a>时间复杂度：</h4><p>归并排序，快速排序，计数排序，基数排序以及桶数较多的桶排序用时明显更短，而冒泡排序，简单选择排序，简单插入排序用时较长</p>
<h4 id="稳定性："><a href="#稳定性：" class="headerlink" title="稳定性："></a>稳定性：</h4><p>当数组由无序变为有序，耗时减少越多说明算法越稳定，由图中对比可以看出，冒泡排序，简单插入排序，归并排序，基数排序，计数排序是稳定的排序算法，另外，由于桶排序所用桶内的排序方法，所以桶排序也是稳定的，而简单选择排序，快速排序不稳定。</p>
<h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><p><img src="/2021/06/29/%E5%90%84%E4%B8%AA%E6%8E%92%E5%BA%8F%E6%96%B9%E5%BC%8F/px3.png" alt="img"></p>
<p><img src="/2021/06/29/%E5%90%84%E4%B8%AA%E6%8E%92%E5%BA%8F%E6%96%B9%E5%BC%8F/px4.png" alt="img"></p>
<p><img src="/2021/06/29/%E5%90%84%E4%B8%AA%E6%8E%92%E5%BA%8F%E6%96%B9%E5%BC%8F/px5.png" alt="img"></p>
<p><img src="/2021/06/29/%E5%90%84%E4%B8%AA%E6%8E%92%E5%BA%8F%E6%96%B9%E5%BC%8F/px6.png" alt="img"></p>
<p><img src="/2021/06/29/%E5%90%84%E4%B8%AA%E6%8E%92%E5%BA%8F%E6%96%B9%E5%BC%8F/px7.png" alt="img"></p>
<p><img src="/2021/06/29/%E5%90%84%E4%B8%AA%E6%8E%92%E5%BA%8F%E6%96%B9%E5%BC%8F/px8.png" alt="img"></p>
<h2 id="源文件下载"><a href="#源文件下载" class="headerlink" title="源文件下载"></a>源文件下载</h2><p><a href="%E6%8E%92%E5%BA%8F%E7%A8%8B%E5%BA%8F.rar" title="C语言源代码下载">点击下载代码文件和运行文件</a></p>
<h2 id="以下为源代码"><a href="#以下为源代码" class="headerlink" title="以下为源代码"></a>以下为源代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;assert.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;			<span class="comment">//调用sort函数对数据次序进行调整</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> maxkey 32767			<span class="comment">//定义计数排序最大关键字</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span>					<span class="comment">//定义桶排序和基数排序所需链表结构</span></span><br><span class="line">	<span class="type">int</span> x;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">node</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span>* <span class="title">list</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span>					<span class="comment">//定义基数排序所需链表结构</span></span><br><span class="line">	<span class="built_in">list</span> head, tail;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">space</span>;</span></span><br><span class="line"><span class="type">int</span> a[<span class="number">1000000</span>];					<span class="comment">//定义排序所需数组</span></span><br><span class="line"><span class="type">int</span> n;							<span class="comment">//存储数组大小</span></span><br><span class="line"><span class="type">double</span> consumetime;				<span class="comment">//存储排序所需时间</span></span><br><span class="line"><span class="type">clock_t</span> START, END;				<span class="comment">//定义记录系统时间的变量</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">check</span><span class="params">(<span class="type">int</span>* a)</span>;				<span class="comment">//检验排序结果函数</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span>* <span class="title function_">Arraycopy</span><span class="params">(<span class="type">int</span>* a)</span>;			<span class="comment">//数组拷贝函数</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Bubblesort</span><span class="params">(<span class="type">int</span>* a)</span>;		<span class="comment">//冒泡排序</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Simpleselectionsort</span><span class="params">(<span class="type">int</span>* a)</span>;<span class="comment">//简单选择排序</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Simpleinsertsort</span><span class="params">(<span class="type">int</span>* a)</span>;	<span class="comment">//简单插入排序</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Mergesort</span><span class="params">(<span class="type">int</span>* a)</span>;			</span><br><span class="line"><span class="type">void</span> <span class="title function_">MergeSort</span><span class="params">(<span class="type">int</span>* a, <span class="type">int</span> low, <span class="type">int</span> high, <span class="type">int</span>* b)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Merge</span><span class="params">(<span class="type">int</span>* a, <span class="type">int</span> low, <span class="type">int</span> m, <span class="type">int</span> high, <span class="type">int</span>* b)</span>;<span class="comment">//归并排序所需函数</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Quicksort</span><span class="params">(<span class="type">int</span>* a)</span>;			</span><br><span class="line"><span class="type">void</span> <span class="title function_">QuickSort</span><span class="params">(<span class="type">int</span>* a, <span class="type">int</span> low, <span class="type">int</span> high)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">QuickPass</span><span class="params">(<span class="type">int</span>* a, <span class="type">int</span> low, <span class="type">int</span> high)</span>;<span class="comment">//快速排序所需函数</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Countsort</span><span class="params">(<span class="type">int</span>* a)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">CountSort</span><span class="params">(<span class="type">int</span>* a, <span class="type">int</span> n,<span class="type">int</span> *b,<span class="type">int</span> max,<span class="type">int</span> *c)</span>;<span class="comment">//计数排序所需函数</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Bucketsort</span><span class="params">(<span class="type">int</span>* a)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">BucketSort</span><span class="params">(<span class="type">int</span>* a, <span class="type">int</span> n, <span class="type">int</span> m)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">insert</span><span class="params">(<span class="built_in">list</span> p, <span class="type">int</span> y)</span>;		<span class="comment">//桶排序所需函数</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Cardinalsort</span><span class="params">(<span class="type">int</span>* a)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">CardinalSort</span><span class="params">(<span class="type">int</span>* a, <span class="type">int</span> n, <span class="type">int</span> Base, <span class="type">int</span> m)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Insert</span><span class="params">(space p, <span class="type">int</span> y)</span>;	<span class="comment">//基数排序所需函数</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> i;</span><br><span class="line">	srand((<span class="type">unsigned</span>)time(<span class="literal">NULL</span>));<span class="comment">//设置生成随机数种子</span></span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">1000000</span>; i++) &#123;</span><br><span class="line">		a[i] = rand();			<span class="comment">//生成0~32767随机数作为数组元素</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> k = <span class="number">2</span>;</span><br><span class="line">	<span class="keyword">while</span> (k--) &#123;				<span class="comment">//无序数组排序，几乎有序数组排序，共两次循环</span></span><br><span class="line">		n = <span class="number">100</span>;</span><br><span class="line">		<span class="keyword">while</span> (n &lt;= <span class="number">1000000</span>) &#123;</span><br><span class="line">			<span class="keyword">if</span> (k == <span class="number">1</span>)</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;当无序数组大小为%d时:\n\n&quot;</span>, n);</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;当几乎有序数组大小为%d时:\n\n&quot;</span>, n);</span><br><span class="line">			Bubblesort(a);</span><br><span class="line">			Simpleselectionsort(a);</span><br><span class="line">			Simpleinsertsort(a);</span><br><span class="line">			Mergesort(a);</span><br><span class="line">			Quicksort(a);</span><br><span class="line">			Countsort(a);</span><br><span class="line">			Bucketsort(a);</span><br><span class="line">			Cardinalsort(a);	<span class="comment">//以上调用排序函数</span></span><br><span class="line">			n *= <span class="number">10</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="type">int</span> i;</span><br><span class="line">		sort(a, a + <span class="number">1000000</span>);	<span class="comment">//将无序数组变为几乎有序数组</span></span><br><span class="line">		<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; ++i) &#123;</span><br><span class="line">			a[i * <span class="number">100</span>] = rand();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">check</span><span class="params">(<span class="type">int</span>* a)</span> &#123;			<span class="comment">//检验函数定义</span></span><br><span class="line">	<span class="type">int</span> i;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; ++i) &#123;</span><br><span class="line">		<span class="keyword">if</span> (a[i] &gt; a[i + <span class="number">1</span>])<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (i == n - <span class="number">1</span>) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;排序结果正确\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;排序结果错误\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span>* <span class="title function_">Arraycopy</span><span class="params">(<span class="type">int</span>* a)</span> &#123;		<span class="comment">//数组拷贝函数定义</span></span><br><span class="line">	<span class="type">int</span> i;</span><br><span class="line">	<span class="type">int</span>* b = (<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>) * n);</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">		b[i] = a[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Bubblesort</span><span class="params">(<span class="type">int</span>* a)</span> &#123;		<span class="comment">//冒泡排序函数定义</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;冒泡排序:\n&quot;</span>);</span><br><span class="line">	<span class="type">int</span> *b= Arraycopy(a);		<span class="comment">//调用拷贝函数，以下同此处</span></span><br><span class="line">	<span class="type">clock_t</span> halfway;			<span class="comment">//定时中途时间变量，用于检验是否超时，以下同此处</span></span><br><span class="line">	START = clock();			<span class="comment">//调用系统时间函数记录排序开始时间，以下同此处</span></span><br><span class="line">	<span class="type">int</span> i, j, temp;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n<span class="number">-1</span>; ++i) &#123;</span><br><span class="line">		<span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n - i - <span class="number">1</span>; ++j) &#123;</span><br><span class="line">			<span class="keyword">if</span> (b[j + <span class="number">1</span>] &lt; b[j]) &#123;</span><br><span class="line">				temp = b[j + <span class="number">1</span>];</span><br><span class="line">				b[j + <span class="number">1</span>] = b[j];</span><br><span class="line">				b[j] = temp;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		halfway = clock();		<span class="comment">//即时检验是否超时</span></span><br><span class="line">		<span class="keyword">if</span> ((((<span class="type">double</span>)halfway - (<span class="type">double</span>)START) / CLOCKS_PER_SEC) &gt;= <span class="number">300</span>) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;超过5分钟\n\n&quot;</span>);</span><br><span class="line">			<span class="built_in">free</span>(b);			</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	END = clock();				<span class="comment">//记录排序结束时间</span></span><br><span class="line">	check(b);					<span class="comment">//检验结果正确性</span></span><br><span class="line">	<span class="built_in">free</span>(b);</span><br><span class="line">	consumetime = ((<span class="type">double</span>)END -(<span class="type">double</span>)START ) / CLOCKS_PER_SEC;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;耗费时间:    %fseconds\n\n&quot;</span>, consumetime);<span class="comment">//计算并打印耗费时间</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Simpleselectionsort</span><span class="params">(<span class="type">int</span>* a)</span> &#123;<span class="comment">//简单选择排序函数定义</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;简单选择排序:\n&quot;</span>);</span><br><span class="line">	<span class="type">int</span>* b = Arraycopy(a);</span><br><span class="line">	<span class="type">clock_t</span> halfway;</span><br><span class="line">	START = clock();</span><br><span class="line">	<span class="type">int</span> i, j, l,temp;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n<span class="number">-1</span>; ++i)&#123;</span><br><span class="line">		l = i;</span><br><span class="line">		<span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt; n; ++j) &#123;</span><br><span class="line">			<span class="keyword">if</span> (b[j] &lt; b[l]) &#123;</span><br><span class="line">				l = j;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">			temp = b[i];</span><br><span class="line">			b[i] = b[l];</span><br><span class="line">			b[l] = temp;</span><br><span class="line">			halfway = clock();</span><br><span class="line">			<span class="keyword">if</span> ((((<span class="type">double</span>)halfway - (<span class="type">double</span>)START) / CLOCKS_PER_SEC )&gt;= <span class="number">300</span>) &#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;超过5分钟\n\n&quot;</span>);</span><br><span class="line">				delete[] b;</span><br><span class="line">				<span class="keyword">return</span>;</span><br><span class="line">			&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	END = clock();</span><br><span class="line">	check(b);</span><br><span class="line">	<span class="built_in">free</span>(b);</span><br><span class="line">	consumetime = ((<span class="type">double</span>)END - (<span class="type">double</span>)START) / CLOCKS_PER_SEC;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;耗费时间:    %fseconds\n\n&quot;</span>,consumetime);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Simpleinsertsort</span><span class="params">(<span class="type">int</span>* a)</span> &#123;	<span class="comment">//简单插入排序函数定义</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;简单插入排序:\n&quot;</span>);</span><br><span class="line">	<span class="type">int</span>* b = Arraycopy(a);</span><br><span class="line">	<span class="type">clock_t</span> halfway;</span><br><span class="line">	 START= clock();</span><br><span class="line">	<span class="type">int</span> i, j,x;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">		x = b[i];</span><br><span class="line">		j = i - <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">while</span> (j &gt;= <span class="number">0</span> &amp;&amp; x &lt; b[j]) &#123;</span><br><span class="line">			b[j + <span class="number">1</span>] = b[j];</span><br><span class="line">			--j;</span><br><span class="line">		&#125;</span><br><span class="line">		b[j + <span class="number">1</span>] = x;</span><br><span class="line">		halfway = clock();</span><br><span class="line">		<span class="keyword">if</span> ((((<span class="type">double</span>)halfway - (<span class="type">double</span>)START) / CLOCKS_PER_SEC) &gt;= <span class="number">300</span>) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;超过5分钟\n\n&quot;</span>);</span><br><span class="line">			<span class="built_in">free</span>(b);</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	END = clock();</span><br><span class="line">	check(b);</span><br><span class="line">	<span class="built_in">free</span>(b);</span><br><span class="line">	consumetime = ((<span class="type">double</span>)END - (<span class="type">double</span>)START) / CLOCKS_PER_SEC;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;耗费时间:    %fseconds\n\n&quot;</span>,consumetime);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Mergesort</span><span class="params">(<span class="type">int</span>* a)</span> &#123;						<span class="comment">//归并排序函数定义</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;归并排序:\n&quot;</span>);</span><br><span class="line">	<span class="type">int</span>* b = Arraycopy(a);</span><br><span class="line">	<span class="type">int</span>* c = (<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>) * n);		<span class="comment">//定义辅助数组，以下同此处</span></span><br><span class="line">	START = clock();</span><br><span class="line">	MergeSort(b, <span class="number">0</span>, n<span class="number">-1</span>, c);</span><br><span class="line">	END = clock();</span><br><span class="line">	check(b);</span><br><span class="line">	delete[] b;</span><br><span class="line">	delete[] c;</span><br><span class="line">	consumetime = ((<span class="type">double</span>)END - (<span class="type">double</span>)START) / CLOCKS_PER_SEC;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;耗费时间:    %fseconds\n\n&quot;</span>, consumetime);</span><br><span class="line">	<span class="keyword">if</span> (consumetime &gt;= <span class="number">300</span>) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;超过五分钟\n\n&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">MergeSort</span><span class="params">(<span class="type">int</span>* a, <span class="type">int</span> low, <span class="type">int</span> high, <span class="type">int</span>* b)</span> &#123;<span class="comment">//归并排序</span></span><br><span class="line">	<span class="keyword">if</span> (low &gt;= high) &#123;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> m = (low + high) / <span class="number">2</span>;</span><br><span class="line">	MergeSort(a, low, m, b);</span><br><span class="line">	MergeSort(a, m+<span class="number">1</span>, high, b);						<span class="comment">//递归调用</span></span><br><span class="line">	Merge(a, low, m, high, b);						<span class="comment">//调用函数合并数组</span></span><br><span class="line">	<span class="type">int</span> i;</span><br><span class="line">	<span class="keyword">for</span> (i = low; i &lt;= high; ++i) &#123;</span><br><span class="line">		a[i] = b[i];</span><br><span class="line">	&#125;												<span class="comment">//元素转移至原数组</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Merge</span><span class="params">(<span class="type">int</span>* a, <span class="type">int</span> low, <span class="type">int</span> m, <span class="type">int</span> high, <span class="type">int</span>* b)</span> &#123;<span class="comment">//合并数组函数</span></span><br><span class="line">	<span class="type">int</span> i = low;</span><br><span class="line">	<span class="type">int</span> j = m + <span class="number">1</span>;</span><br><span class="line">	<span class="type">int</span> k = i;</span><br><span class="line">	<span class="keyword">while</span> (i &lt;= m &amp;&amp; j &lt;= high) &#123;</span><br><span class="line">		<span class="keyword">if</span> (a[i] &lt;= a[j]) &#123;</span><br><span class="line">			b[k++] = a[i++];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> &#123;</span><br><span class="line">			b[k++] = a[j++];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span> (i &lt;= m) &#123;</span><br><span class="line">		b[k++] = a[i++];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span> (j &lt;= high) &#123;</span><br><span class="line">		b[k++] = a[j++];</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Quicksort</span><span class="params">(<span class="type">int</span>* a)</span> &#123;					<span class="comment">//快速排序定义</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;快速排序:\n&quot;</span>);</span><br><span class="line">	<span class="type">int</span>* b = Arraycopy(a);</span><br><span class="line">	<span class="type">int</span>* c = new <span class="type">int</span>[n];</span><br><span class="line">	START = clock();</span><br><span class="line">	QuickSort(b, <span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line">	END = clock();</span><br><span class="line">	check(b);</span><br><span class="line">	<span class="built_in">free</span>(b);</span><br><span class="line">	<span class="built_in">free</span>(c);</span><br><span class="line">	consumetime = ((<span class="type">double</span>)END - (<span class="type">double</span>)START) / CLOCKS_PER_SEC;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;耗费时间:    %fseconds\n\n&quot;</span>, consumetime);</span><br><span class="line">	<span class="keyword">if</span> (consumetime &gt;= <span class="number">300</span>) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;超过五分钟\n\n&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">QuickSort</span><span class="params">(<span class="type">int</span>* a, <span class="type">int</span> low, <span class="type">int</span> high)</span> &#123;<span class="comment">//快速排序</span></span><br><span class="line">	<span class="keyword">if</span> (low &gt;= high) &#123;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> p = QuickPass(a, low, high);	<span class="comment">//调用划分函数同时取枢轴元素的位置</span></span><br><span class="line">	QuickSort(a, low, p - <span class="number">1</span>);</span><br><span class="line">	QuickSort(a, p + <span class="number">1</span>, high);			<span class="comment">//划分并递归调用</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">QuickPass</span><span class="params">(<span class="type">int</span>* a, <span class="type">int</span> low, <span class="type">int</span> high)</span> &#123;<span class="comment">//划分函数</span></span><br><span class="line">	<span class="type">int</span> x = a[low];</span><br><span class="line">	<span class="keyword">while</span> (low &lt; high) &#123;</span><br><span class="line">		<span class="keyword">while</span> (low &lt; high &amp;&amp; x &lt;= a[high]) &#123;<span class="comment">//从右往左，保留大于等于枢轴元素的所有元素位置不变</span></span><br><span class="line">			--high;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (low == high) &#123;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		a[low++] = a[high];					<span class="comment">//右边较小元素移动到左边空位</span></span><br><span class="line">		<span class="keyword">while</span> (low &lt; high &amp;&amp; x &gt;= a[low])&#123;	<span class="comment">//从左往右，保留小于等于枢轴元素的所有元素位置不变</span></span><br><span class="line">				++low;						</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (low == high) &#123;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		a[high--] = a[low];					<span class="comment">//左边较大元素移动到右边空位</span></span><br><span class="line">	&#125;</span><br><span class="line">	a[low] = x;								<span class="comment">//枢轴元素放回空余位置</span></span><br><span class="line">	<span class="keyword">return</span> low;								<span class="comment">//返回枢轴元素所在位置</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Countsort</span><span class="params">(<span class="type">int</span>* a)</span> &#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;计数排序:\n&quot;</span>);</span><br><span class="line">	<span class="type">int</span>* b = Arraycopy(a);</span><br><span class="line">	<span class="type">int</span>* c =(<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>)*n);</span><br><span class="line">	<span class="type">int</span>* d = (<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>) * maxkey);</span><br><span class="line">	START = clock();</span><br><span class="line">	CountSort(b, n , d, maxkey, c);</span><br><span class="line">	END = clock();</span><br><span class="line">	check(c);</span><br><span class="line">	<span class="built_in">free</span>(b);</span><br><span class="line">	consumetime = ((<span class="type">double</span>)END - (<span class="type">double</span>)START) / CLOCKS_PER_SEC;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;耗费时间:    %fseconds\n\n&quot;</span>, consumetime);</span><br><span class="line">	<span class="keyword">if</span> (consumetime &gt;= <span class="number">300</span>) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;超过五分钟\n\n&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">CountSort</span><span class="params">(<span class="type">int</span>* a, <span class="type">int</span> n, <span class="type">int</span>* b, <span class="type">int</span> max, <span class="type">int</span>* c)</span> &#123;<span class="comment">//计数排序函数定义</span></span><br><span class="line">	<span class="type">int</span> i,key;</span><br><span class="line">	<span class="keyword">for</span> (key = <span class="number">0</span>; key &lt;= maxkey; ++key) &#123;				<span class="comment">//初始化</span></span><br><span class="line">		b[key] = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; ++i) &#123;							<span class="comment">//相同关键字计数</span></span><br><span class="line">		++b[a[i]];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> iStartPos = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> iNextPos;</span><br><span class="line">	<span class="keyword">for</span> (key = <span class="number">0</span>; key &lt;= maxkey; ++key) &#123;				</span><br><span class="line">		iNextPos = iStartPos + b[key];					<span class="comment">//计算下一个key起始下标</span></span><br><span class="line">		b[key] = iStartPos;								<span class="comment">//设置存放key起始下标</span></span><br><span class="line">		iStartPos = iNextPos;							<span class="comment">//调整下一个key起始下标</span></span><br><span class="line">	&#125;</span><br><span class="line">	assert(iStartPos == n);</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">		c[b[a[i]]++] = a[i];							<span class="comment">//存入后调整位置</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Bucketsort</span><span class="params">(<span class="type">int</span>* a)</span> &#123;				<span class="comment">//桶排序函数定义</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;桶排序:\n&quot;</span>);</span><br><span class="line">	<span class="type">int</span>* b = Arraycopy(a);</span><br><span class="line">	<span class="type">int</span> t[<span class="number">3</span>];</span><br><span class="line">	t[<span class="number">0</span>] = (<span class="type">int</span>)<span class="built_in">sqrt</span>(n);</span><br><span class="line">	t[<span class="number">1</span>] = n / <span class="number">2</span>;</span><br><span class="line">	t[<span class="number">2</span>] = n;</span><br><span class="line">	<span class="type">int</span> i;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">		START = clock();</span><br><span class="line">		BucketSort(b, n, t[i]);</span><br><span class="line">		END = clock();</span><br><span class="line">		check(b);</span><br><span class="line">		consumetime = ((<span class="type">double</span>)END - (<span class="type">double</span>)START) / CLOCKS_PER_SEC;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;耗费时间:    %fseconds\n(桶的数量为%d)\n\n&quot;</span>, consumetime,t[i]);</span><br><span class="line">		<span class="keyword">if</span> (consumetime &gt;= <span class="number">300</span>) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;超过五分钟\n\n&quot;</span>);</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	delete[] b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">BucketSort</span><span class="params">(<span class="type">int</span>* a, <span class="type">int</span> n, <span class="type">int</span> m)</span> &#123;</span><br><span class="line">	<span class="type">int</span> i;</span><br><span class="line">	<span class="built_in">list</span>* bucket = (<span class="built_in">list</span>*)<span class="built_in">malloc</span>((<span class="keyword">sizeof</span>(<span class="built_in">list</span>)) * m);<span class="comment">//用链表实习桶</span></span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; ++i) &#123;						<span class="comment">//初始化</span></span><br><span class="line">		bucket[i] = (<span class="built_in">list</span>)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> node));</span><br><span class="line">		bucket[i]-&gt;next=<span class="literal">NULL</span> ;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">double</span> h = (<span class="type">double</span>)<span class="number">35000</span>/ m;					<span class="comment">//定义桶的容量</span></span><br><span class="line">	<span class="type">int</span> d = (<span class="type">int</span>)h + <span class="number">1</span>;								<span class="comment">//确保包含所有元素</span></span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; ++i) &#123;						<span class="comment">//元素入桶</span></span><br><span class="line">		insert(bucket[a[i] / d], a[i]);				<span class="comment">//插入同时保证有序（必须排序）</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> k=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; ++i) &#123;						<span class="comment">//元素出桶</span></span><br><span class="line">			<span class="built_in">list</span> p = bucket[i]-&gt;next;</span><br><span class="line">			<span class="keyword">while</span> (p != <span class="literal">NULL</span>) &#123;</span><br><span class="line">				a[k++] = p-&gt;x;</span><br><span class="line">				p = p-&gt;next;</span><br><span class="line">			&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">insert</span><span class="params">(<span class="built_in">list</span> p, <span class="type">int</span> y)</span> &#123;						<span class="comment">//有序插入函数</span></span><br><span class="line">	<span class="built_in">list</span> q = (<span class="built_in">list</span>)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> node));</span><br><span class="line">	q-&gt;x = y;</span><br><span class="line">	<span class="keyword">while</span> (p-&gt;next != <span class="literal">NULL</span> &amp;&amp; y &gt; p-&gt;next-&gt;x) &#123;</span><br><span class="line">		p = p-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">	q-&gt;next = p-&gt;next;</span><br><span class="line">	p-&gt;next = q;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Cardinalsort</span><span class="params">(<span class="type">int</span>* a)</span> &#123;				<span class="comment">//基数排序定义</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;基数排序:\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;(基数为整数各位上的数)\n&quot;</span>);</span><br><span class="line">	<span class="type">int</span>* b = Arraycopy(a);</span><br><span class="line">	START = clock();</span><br><span class="line">	CardinalSort(b, n, <span class="number">10</span>,<span class="number">5</span>);</span><br><span class="line">	END = clock();</span><br><span class="line">	check(b);</span><br><span class="line">	delete[] b;</span><br><span class="line">	consumetime = ((<span class="type">double</span>)END - (<span class="type">double</span>)START) / CLOCKS_PER_SEC;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;耗费时间:    %fseconds\n\n&quot;</span>, consumetime);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">CardinalSort</span><span class="params">(<span class="type">int</span>* a, <span class="type">int</span> n, <span class="type">int</span> Base, <span class="type">int</span> m)</span> &#123;<span class="comment">//基数排序</span></span><br><span class="line">	<span class="type">int</span> j;</span><br><span class="line">	<span class="type">int</span> x = <span class="number">10</span>;												<span class="comment">//用于取对应位关键字</span></span><br><span class="line">	<span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= m; ++j) &#123;								<span class="comment">//根据关键字个数循环（关键字为数据各位上数字）</span></span><br><span class="line">		space* bucket = (space*)<span class="built_in">malloc</span>((<span class="keyword">sizeof</span>(space))*Base);<span class="comment">//用链表实现桶</span></span><br><span class="line">		<span class="type">int</span> i;</span><br><span class="line">		<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; Base; ++i) &#123;						<span class="comment">//初始化</span></span><br><span class="line">			bucket[i] = (space)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));</span><br><span class="line">			bucket[i]-&gt;head = bucket[i]-&gt;tail = <span class="literal">NULL</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; ++i) &#123;							<span class="comment">//元素入桶</span></span><br><span class="line">			<span class="type">int</span> k = (a[i] % x)/(x/<span class="number">10</span>);						<span class="comment">//取关键字</span></span><br><span class="line">			Insert(bucket[k], a[i]);						<span class="comment">//无序插入，更快（无须排序）</span></span><br><span class="line">		&#125;</span><br><span class="line">		x *= <span class="number">10</span>;</span><br><span class="line">		<span class="type">int</span> l;</span><br><span class="line">		<span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (l = <span class="number">0</span>; l &lt; Base; ++l) &#123;						<span class="comment">//元素出桶</span></span><br><span class="line">			<span class="built_in">list</span> p = bucket[l]-&gt;head;</span><br><span class="line">			<span class="keyword">while</span> (p != <span class="literal">NULL</span>) &#123;</span><br><span class="line">				a[t++] = p-&gt;x;</span><br><span class="line">				p = p-&gt;next;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="built_in">free</span>(bucket[l]);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">free</span>(bucket);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Insert</span><span class="params">(space p, <span class="type">int</span> y)</span> &#123;			<span class="comment">//无序插入函数</span></span><br><span class="line">	<span class="built_in">list</span> q = (<span class="built_in">list</span>)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> node));</span><br><span class="line">	q-&gt;x = y;</span><br><span class="line">	q-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">if</span> (p-&gt;head== <span class="literal">NULL</span>) &#123;</span><br><span class="line">		p-&gt;head = p-&gt;tail = q;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">list</span> s = p-&gt;tail;</span><br><span class="line">	s-&gt;next = q;</span><br><span class="line">	p-&gt;tail = q;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>程序设计作业</category>
        <category>排序算法</category>
      </categories>
      <tags>
        <tag>程序设计实践课程作业</tag>
        <tag>排序算法</tag>
      </tags>
  </entry>
  <entry>
    <title>基本类型的包装类对应</title>
    <url>/2021/07/22/%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%8C%85%E8%A3%85%E7%B1%BB%E5%AF%B9%E5%BA%94/</url>
    <content><![CDATA[<h1 id="基本类型的包装类型"><a href="#基本类型的包装类型" class="headerlink" title="基本类型的包装类型"></a>基本类型的包装类型</h1><table>
<thead>
<tr>
<th>基本类型</th>
<th>包装类</th>
</tr>
</thead>
<tbody><tr>
<td>byte</td>
<td>Byte</td>
</tr>
<tr>
<td>int</td>
<td>Integer</td>
</tr>
<tr>
<td>short</td>
<td>Short</td>
</tr>
<tr>
<td>long</td>
<td>Long</td>
</tr>
<tr>
<td>float</td>
<td>Float</td>
</tr>
<tr>
<td>double</td>
<td>Double</td>
</tr>
<tr>
<td>char</td>
<td>Character</td>
</tr>
<tr>
<td>boolean</td>
<td>Boolean</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>软件学习</category>
        <category>JAVA</category>
        <category>JAVASE</category>
        <category>基本类型的包装类汇总</category>
      </categories>
      <tags>
        <tag>软件学习笔记</tag>
        <tag>JAVA</tag>
        <tag>JAVASE</tag>
      </tags>
  </entry>
  <entry>
    <title>学习路线超级推荐</title>
    <url>/2021/07/21/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%E8%B6%85%E7%BA%A7%E6%8E%A8%E8%8D%90/</url>
    <content><![CDATA[<p>耗时半月整理出2020Java零基础到面试升职学习路线教程</p>
<h2 id="Java基础"><a href="#Java基础" class="headerlink" title="Java基础"></a>Java基础</h2><p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" alt="img" style="zoom: 25%;" /><a href="https://www.bilibili.com/video/av80585971">黑马程序员全套Java教程_Java基础入门教程，零基础小白自学Java必备教程</a></p>
<h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p>Mysql：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av68811608">黑马程序员MySQL全套教程，超详细的MySQL数据库优化，MySQL面试热点必考问题</a><br>Oracle：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av81386804">黑马程序员Oracle数据库精讲，从0到1学会Oracle数据库</a><br>JDBC：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av68736927">深入Sharding-JDBC分库分表从入门到精通【黑马程序员】</a><br>C3P0：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av73840600">黑马程序员完整JavaWeb快速入门教程【收藏比赞多系列】</a></p>
<h2 id="前端技术"><a href="#前端技术" class="headerlink" title="前端技术"></a>前端技术</h2><p>HTML、CSS、Javascript：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av73840600">黑马程序员完整JavaWeb快速入门教程【收藏比赞多系列】</a><br>jQuery-：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av37976701">利用jQuery+Ajax+HighCharts打造项目图表</a><br>Ajax：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av15657082">黑马程序员前端基础教程Ajax零基础入门_上部</a> <img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av15866060">黑马程序员前端基础教程Ajax零基础入门_下部</a><br>Vue：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av76249419">黑马程序员vue前端基础教程-4个小时带你快速入门vue</a><br>微信小程序：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av40455083">黑马程序员精品WEB前端课程_28节课快速玩转微信小程序</a></p>
<h2 id="动态网页"><a href="#动态网页" class="headerlink" title="动态网页"></a>动态网页</h2><p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av73840600">黑马程序员完整JavaWeb快速入门教程【收藏比赞多系列】</a></p>
<h2 id="编程强化"><a href="#编程强化" class="headerlink" title="编程强化"></a>编程强化</h2><p>JVM优化：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av70549061">黑马程序员JVM完整教程，全网超高评价，全程干货不拖沓</a><br>数据结构算法：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av83826038">黑马程序员Java数据结构与算法，全网资料最全，154张数据结构图</a> <a href="https://www.bilibili.com/video/av78639604/">av78639604</a></p>
<h2 id="软件项目管理"><a href="#软件项目管理" class="headerlink" title="软件项目管理"></a>软件项目管理</h2><p>Maven： <img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av52364221">2天吃透Maven项目管理工具</a><br>SVN：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av73840600">黑马程序员完整JavaWeb快速入门教程【收藏比赞多系列】</a> <img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av7959491">黑马程序员SVN视频教程</a><br>Git：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av75718460">Git零基础入门到实战详解</a><br>Jenkins：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av83089670">黑马程序员Java教程自动化部署Jenkins从环境配置到项目开发</a></p>
<h2 id="热门技术框架"><a href="#热门技术框架" class="headerlink" title="热门技术框架"></a>热门技术框架</h2><p>SSM：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av7770852">黑马程序员Springmvc+Mybatis由浅入深全套视频教程day01</a><br>Mybatis-Plus ：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av69233006">黑马程序员MybatisPlus深入浅出教程，快速上手Mybatis-Plus</a><br>Spring Data：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av71980390">java进阶教程数据层全栈方案Spring Data高级应用</a><br>Spring：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av70828462">【Java进阶教程】Spring高级之注解驱动开发详解</a></p>
<h2 id="分布式架构"><a href="#分布式架构" class="headerlink" title="分布式架构"></a>分布式架构</h2><p>Dubbo、Zookeeper：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av74933720">黑马程序员Dubbo快速入门，Java分布式框架必会的教程</a><br>SpringCloud：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av77085442">Spring Cloud Alibaba Nacos配置中心与服务发现</a></p>
<p> <img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av89898642">黑马程序员Java微服务开发，全面深入学习Spring Cloud Alibaba(SpringCloud)</a><br>Eureka：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av74127911">SpringCloud从小白到精通教程，Spring Cloud超完整教程，Spring Cloud微服务架构开发项目实战</a><br>Skywalking：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av80349807">java基础教程全面的深入学习Skywalking</a></p>
<h2 id="服务器中间件"><a href="#服务器中间件" class="headerlink" title="服务器中间件"></a>服务器中间件</h2><p>RocketMQ：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av66702383">黑马程序员Java教程RocketMQ系统精讲，电商分布式消息中间件，硬核揭秘双十一</a><br>Kafka：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av71991051">黑马程序员Kafka深入浅出，快速玩转分布式发布订阅消息系统</a><br>Sharding-JDBC：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av68736927">深入Sharding-JDBC分库分表从入门到精通【黑马程序员】</a><br>Redis：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av76235738">黑马程序员Redis入门到精通，Java企业级解决方案必看</a><br>MongoDB：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av80450883">黑马程序员java必备基础教程-MongoDB基础入门到高级进阶</a></p>
<h2 id="服务器技术"><a href="#服务器技术" class="headerlink" title="服务器技术"></a>服务器技术</h2><p>Tomcat：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av67233983">黑马程序员Java进阶教程Tomcat核心原理解析</a><br>Linux系统：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av73840600">黑马程序员完整JavaWeb快速入门教程【收藏比赞多系列】</a><br>CentOS、Virtualbox：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av23360560">黑马程序员-linux从入门到精通</a><br>Ubuntu、Vmware：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av14184325">黑马程序员Python教程_600集Python从入门到精通教程（懂中文就能学会）</a></p>
<h2 id="容器技术"><a href="#容器技术" class="headerlink" title="容器技术"></a>容器技术</h2><p>Docker：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av69121091">黑马程序员Docker容器化技术，从零学会Docker教程</a></p>
<h2 id="业务解决方案（实战项目）"><a href="#业务解决方案（实战项目）" class="headerlink" title="业务解决方案（实战项目）"></a>业务解决方案（实战项目）</h2><p>Elasticsearch：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av66600360">elastic stack从入门到实践【快速掌握先进的搜索、数据收集、分析技术java进阶教程】</a><br>Lucene：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av77895717">黑马程序员Lucene全文检索技术，从底层到实战应用Lucene全套教程</a><br>Quartz：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av36062910">java教程之精品详解Quartz，企业中必会的技能【黑马程序员】</a><br>Elastic-Job：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av74128695">轻松入门Apollo分布式配置中心-服务中间件【java基础进阶教程】</a><br>SpringSecurity：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av74851468">java基础进阶-企业开发首选的安全框架Spring Security深入浅出</a><br>Activiti：<img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@48d0293e3823b947dbfe1a1b33c2a6d57da85aaf/2021/07/21/fcd934df106a4b4c13e1a1328bf89233.png" style="zoom:25%;" /><a href="https://www.bilibili.com/video/av7670054">黑马程序员Activiti工作流视频教程day01</a></p>
]]></content>
      <tags>
        <tag>学习流程</tag>
      </tags>
  </entry>
  <entry>
    <title>开发中的锁问题</title>
    <url>/2023/08/28/%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E9%94%81%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="开发中的锁"><a href="#开发中的锁" class="headerlink" title="开发中的锁"></a>开发中的锁</h1><p>先展示一个账本转账的例子</p>
<p>假设，账户的存在形式真的就是一个账本，这些账本都统一存放在文件架上。<br>银行柜员在给我们做转账时，要去文件架上把转出账本和转入账本都拿到手，然后做转账。</p>
<p>拿账本的规则：</p>
<ol>
<li>文件架上恰好有转出账本和转入账本，那就同时拿走；</li>
<li>如果文件架上只有转出账本和转入账本之一，那这个柜员就先把文件架上有的账本拿到手，同时等着其他柜员把另外一个账本送回来；</li>
<li>转出账本和转入账本都没有，那这个柜员就等着两个账本都被送回来。</li>
</ol>
<p>拿到这个业务场景就很容易写出以下的代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Account</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> balance;</span><br><span class="line">    <span class="comment">//转账</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">transfer</span><span class="params">(Account target,<span class="type">int</span> amt)</span>&#123;</span><br><span class="line">        <span class="comment">//锁定转出账户</span></span><br><span class="line">        <span class="keyword">synchronized</span>(<span class="built_in">this</span>)&#123;</span><br><span class="line">            <span class="comment">//锁定转入账户</span></span><br><span class="line">            <span class="keyword">synchronized</span>(target)&#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>.balance &gt; amt)&#123;</span><br><span class="line">                    <span class="built_in">this</span>.balance -= amt;</span><br><span class="line">                    target.balance += amt;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>我先锁住自己，再锁住target</p>
<p>乍一看好像很有道理</p>
<p>那么来考虑一下，现在有很多的并发场景，现在A要给B转账，同时B要给A转账</p>
<p><img src="/2023/08/28/%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E9%94%81%E9%97%AE%E9%A2%98/AB%E8%BD%AC%E8%B4%A6%E9%97%AE%E9%A2%98.png" alt="AB转账问题"></p>
<p>但是这个时候张三想从A转到B</p>
<p>李四想从B转到A</p>
<p>那么张三把A锁住的同时李四把B锁住</p>
<p>当他们互相想锁住B和A的时候发现，拿不到对方的锁，那么此时，A和B之间就产生了<a href="#deadLock">死锁</a></p>
<h2 id="死锁"><a href="#死锁" class="headerlink" title="死锁"></a><a id = "deadLock">死锁</a></h2><h3 id="死锁产生的条件"><a href="#死锁产生的条件" class="headerlink" title="死锁产生的条件"></a>死锁产生的条件</h3><ol>
<li>互斥，共享资源X和Y只能被一个线程占用</li>
<li>占有且等待，线程T1已经取得共享资源X,在等待共享资源Y的时候，不释放共享资源X</li>
<li>不可抢占，其他线程不能强行抢占线程T1占有的资源</li>
<li>循环等待，线程T1等待线程T2占有的资源，线程T2等待线程T1占有的资源，就是循环等待</li>
</ol>
<p>从中只要打破一个即可</p>
<p>但是1和3并不方便进行破坏，因为就是要解决并发场景下面的临界资源的获取</p>
<h3 id="破坏循环等待"><a href="#破坏循环等待" class="headerlink" title="破坏循环等待"></a>破坏循环等待</h3><p>那么对于上面的例子，我们尝试破坏循环等待这个问题——这个问题比较好的解决办法就是让获取锁是有顺序的</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//转账</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">transfer</span><span class="params">(Account2 target,<span class="type">int</span> amt)</span>&#123;</span><br><span class="line">    Account2 left <span class="built_in">this</span>;</span><br><span class="line">    Account2 right target;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.id &gt; target.id)&#123;</span><br><span class="line">        Left target;</span><br><span class="line">        right <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//锁定序号小的账户</span></span><br><span class="line">    <span class="keyword">synchronized</span>(left)&#123;</span><br><span class="line">        <span class="comment">//锁定序号大的张户</span></span><br><span class="line">        <span class="keyword">synchronized</span>(right)&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.balance amt)&#123;</span><br><span class="line">                <span class="built_in">this</span>.balance -amt;</span><br><span class="line">                target.balance +amt;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这个代码中不难发现将所有锁的获取按照顺序进行获取，通过一个判断大小，按照顺序获取锁，就可以避免循环依赖的问题。</p>
<h3 id="破坏占有且等待"><a href="#破坏占有且等待" class="headerlink" title="破坏占有且等待"></a>破坏占有且等待</h3><p>想要破坏这个条件，可以一次性申请所有资源，也就是同时申请到转出账户和转入账户的资源</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Allocator</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> List als <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">//一次性申请所有资源</span></span><br><span class="line">    <span class="keyword">synchronized</span> <span class="type">boolean</span> <span class="title function_">apply</span><span class="params">(Object from,Object to)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(als.contains(from) || als.contains(to))&#123;</span><br><span class="line">        	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            als.add(from)</span><br><span class="line">            als.add(to);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//归还资源</span></span><br><span class="line">    <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">free</span><span class="params">(Object from,Object to)</span>&#123;</span><br><span class="line">        als.remove(from)</span><br><span class="line">        als.remove(to);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>该方法的缺点是容易产生瓶颈点，在申请资源的时候，比较容易产生。因为两个资源都需要进入临界区进行处理</p>
<p>这一条的核心是要能够主动释放它占有的资源，这一点synchronized是做不到的。<br>synchronized申请资源的时候，如果申请不到，线程直接进入阻塞状态了，而线程进入阻塞状态，啥都干不了，也释放不了线程已经占有的资源。</p>
<p>Java在语言层次没有解决这个问题，但是在SDK层面还是解决了，java.utl.concurrent下面提供的Lock是可以轻松解决这个问题的。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//支持中断的API</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">lockInterruptibly</span><span class="params">()</span><span class="keyword">throws</span> InterruptedException;</span><br><span class="line"><span class="comment">//支持超时的API</span></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">tryLock</span><span class="params">(<span class="type">long</span> time,TimeUnit unit)</span><span class="keyword">throws</span> InterruptedException;</span><br><span class="line"><span class="comment">//支特非阻塞获取锁的API</span></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">tryLock</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure>

<h2 id="一些并发编程的套路"><a href="#一些并发编程的套路" class="headerlink" title="一些并发编程的套路"></a>一些并发编程的套路</h2><h3 id="管程模型"><a href="#管程模型" class="headerlink" title="管程模型"></a>管程模型</h3><p><img src="/2023/08/28/%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E9%94%81%E9%97%AE%E9%A2%98/%E7%AE%A1%E7%A8%8B%E6%A8%A1%E5%9E%8B.png" alt="管程模型"></p>
<p>&#x2F;&#x2F;这里还有待补充</p>
<h2 id="MySQL的锁"><a href="#MySQL的锁" class="headerlink" title="MySQL的锁"></a>MySQL的锁</h2><h3 id="锁的类型"><a href="#锁的类型" class="headerlink" title="锁的类型"></a>锁的类型</h3><ul>
<li>全局锁</li>
<li>表级锁<ul>
<li>表锁</li>
<li>meta data lock (元数据锁)</li>
</ul>
</li>
<li>行锁<ul>
<li>Record Lock（记录锁）</li>
<li>Gap Lock（间隙锁）</li>
<li>Next-Key Lock （next锁）</li>
</ul>
</li>
</ul>
<h4 id="全局锁"><a href="#全局锁" class="headerlink" title="全局锁"></a>全局锁</h4><p>MySQL提供了一个加全局读锁的方法，命令是Flush tables with read lock(FTWRL)。当你需要让整个库处于只读状态的时候，可以使用这个命令。<br>全局锁的典型使用场景是，做全库逻辑备份。</p>
<p>一般来说不会直接使用</p>
<p>主库在使用中如果直接使用，生产环境会直接拒绝写操作，导致生产线卡死</p>
<p>备库会接受bin log日志，也不能直接进行该操作，否则bin log日志的同步信息无法操作</p>
<p>那么全库备份一定要全局加锁么？</p>
<p>​	– 在可重复读隔离级别下开启一个事务。</p>
<p>官方自带的逻辑备份工具mysqldump,当使用参数-single-transaction的时候，导数据之前就会启动一个事务，来确保拿到一致性视图。而由于MVCC的支持，这个过程中数据是可以正常更新的。 注意这里的隔离级别必须是可重复读的情况下，如果采用读已提交是不行的。这里涉及到MySQL的<a href = "#transactionIsolationLevel">事务隔离级别</a>，下面做一下补充。</p>
<h4 id="表级锁"><a href="#表级锁" class="headerlink" title="表级锁"></a>表级锁</h4><h5 id="表锁"><a href="#表锁" class="headerlink" title="表锁"></a>表锁</h5><p>表锁的语法是lock tables..read&#x2F;write。可以用unlock tables主动释放锁，也可以在客户端断开的时候自动释放。</p>
<p>举个例子，如果在某个线程A中执行lock tables t1read,t2 write;这个语句，则其他线程写t1、读写t2的语句都会被阻塞。</p>
<table>
<thead>
<tr>
<th></th>
<th>X</th>
<th>S</th>
</tr>
</thead>
<tbody><tr>
<td>X</td>
<td>不兼容</td>
<td>不兼容</td>
</tr>
<tr>
<td>S</td>
<td>不兼容</td>
<td>兼容</td>
</tr>
</tbody></table>
<p>X：写锁</p>
<p>S：读锁</p>
<p>P.S. 一般日常开发不会直接使用这个命令</p>
<h5 id="元数据锁"><a href="#元数据锁" class="headerlink" title="元数据锁"></a>元数据锁</h5><p>当对一个表做增删改查操作的时候，加MDL读锁；</p>
<p>当要对表做结构变更操作的时候，加MDL写锁。</p>
<p>不需要显式使用，在访问一个表的时候会被自动加上。MDL的作用是，保证读写的正确性。</p>
<table>
<thead>
<tr>
<th>会话1</th>
<th>会话2</th>
<th>会话3</th>
<th>会话4</th>
</tr>
</thead>
<tbody><tr>
<td>begin;</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>select * from user;</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td>select * from user;</td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td>alter table user<br />add f int null;</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td>select * from user;</td>
</tr>
</tbody></table>
<p>会话3在add操作的时候会阻塞，这里要注意在修改表结构的时候会自动进行元数据锁，直接锁住表</p>
<p>这里add操作直接阻塞，导致会话4在进行select操作的时候就阻塞了</p>
<h4 id="行锁"><a href="#行锁" class="headerlink" title="行锁"></a>行锁</h4><h5 id="Record-Lock-记录锁"><a href="#Record-Lock-记录锁" class="headerlink" title="Record Lock(记录锁)"></a>Record Lock(记录锁)</h5><p>仅仅把一条记录锁上</p>
<p>这里提供一个例子</p>
<p><img src="/2023/08/28/%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E9%94%81%E9%97%AE%E9%A2%98/%E8%AE%B0%E5%BD%95%E9%94%81%E6%A1%88%E4%BE%8B.png" alt="记录锁例子"></p>
<p>这里要注意到建立了一个phone的索引，并且其中记录1和记录4两个的phone都是一样的，所以不是唯一索引</p>
<p><strong>案例一</strong></p>
<table>
<thead>
<tr>
<th>会话1</th>
<th>会话2</th>
</tr>
</thead>
<tbody><tr>
<td>begin;</td>
<td></td>
</tr>
<tr>
<td>update user set age &#x3D; 20<br />where phone &#x3D; ‘88812345’ and name &#x3D; ‘aaa’;</td>
<td></td>
</tr>
<tr>
<td></td>
<td>begin;</td>
</tr>
<tr>
<td></td>
<td>update user set age &#x3D; 35<br />where phone &#x3D; ‘88812345’ and name &#x3D; ‘ddd’;</td>
</tr>
<tr>
<td>commit;</td>
<td></td>
</tr>
<tr>
<td></td>
<td>commit;</td>
</tr>
</tbody></table>
<p>这里注意到aaa和ddd两个人的手机号相同</p>
<p>那么这个情况下，会发生阻塞么？</p>
<p>答案：</p>
<p>在会话2中更新操作的时候会阻塞</p>
<p>这里先放一张MySQL的索引结构</p>
<p><img src="/2023/08/28/%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E9%94%81%E9%97%AE%E9%A2%98/mysql%E7%9A%84%E7%B4%A2%E5%BC%95.png" alt="MySQL索引结构"></p>
<p>这里因为有索引phone，所以在处理的时候就会自动锁上有88812345的数据，会话1就会阻塞住1,4，</p>
<p>后面的会话2就没有办法对4进行处理，于是产生了阻塞</p>
<p><strong>案例二</strong></p>
<table>
<thead>
<tr>
<th>会话1</th>
<th>会话2</th>
</tr>
</thead>
<tbody><tr>
<td>begin;</td>
<td></td>
</tr>
<tr>
<td>update user set age &#x3D; age+1<br />where age &#x3D; 20;</td>
<td></td>
</tr>
<tr>
<td></td>
<td>begin;</td>
</tr>
<tr>
<td></td>
<td>update user set age &#x3D; age+1<br />where age &#x3D; 30;</td>
</tr>
<tr>
<td>commit;</td>
<td></td>
</tr>
<tr>
<td></td>
<td>commit;</td>
</tr>
</tbody></table>
<p>这里用到的数据结构同上面一样</p>
<p>这里阻塞会更严重，因为age没有建立索引，所以在处理的时候没有办法直接获取到id，那么就会直接锁住全表，因为需要全部进行检索，这时候表的状态和全表锁住的状态很相似。</p>
<p><strong>案例三</strong></p>
<table>
<thead>
<tr>
<th>会话1</th>
<th>会话2</th>
</tr>
</thead>
<tbody><tr>
<td>begin;</td>
<td></td>
</tr>
<tr>
<td>update user set age &#x3D; age+1<br />where age &#x3D; 20;</td>
<td></td>
</tr>
<tr>
<td></td>
<td>begin;</td>
</tr>
<tr>
<td></td>
<td>update user set age &#x3D; age+1<br />where id &#x3D; 3;</td>
</tr>
<tr>
<td>commit;</td>
<td></td>
</tr>
<tr>
<td></td>
<td>commit;</td>
</tr>
</tbody></table>
<p>情况同案例二</p>
<p><strong>案例四</strong></p>
<table>
<thead>
<tr>
<th>会话1</th>
<th>会话2</th>
</tr>
</thead>
<tbody><tr>
<td>begin;</td>
<td></td>
</tr>
<tr>
<td>update user set age &#x3D; age+1<br />where age &#x3D; 20 limit 1;</td>
<td></td>
</tr>
<tr>
<td></td>
<td>begin;</td>
</tr>
<tr>
<td></td>
<td>update user set age &#x3D; age+1<br />where id &#x3D; 3;</td>
</tr>
<tr>
<td>commit;</td>
<td></td>
</tr>
<tr>
<td></td>
<td>commit;</td>
</tr>
</tbody></table>
<p>这里不会发生阻塞因为查到limit1的时候就不会继续往下查询了</p>
<p><strong>案例五</strong></p>
<table>
<thead>
<tr>
<th>会话1</th>
<th>会话2</th>
</tr>
</thead>
<tbody><tr>
<td>begin;</td>
<td></td>
</tr>
<tr>
<td>update user set age &#x3D; age+1<br />where age &#x3D; 20 limit 1;</td>
<td></td>
</tr>
<tr>
<td></td>
<td>begin;</td>
</tr>
<tr>
<td></td>
<td>update user set age &#x3D; age+1<br />where age &#x3D; 30;</td>
</tr>
<tr>
<td>commit;</td>
<td></td>
</tr>
<tr>
<td></td>
<td>commit;</td>
</tr>
</tbody></table>
<p>这里会发生阻塞，虽然第一个已经把20找完了，但是age &#x3D; 20的锁住了，后面要查询30的时候走age也要从头开始查询，那么这里的20那一条数据也会走，但是堵住了。</p>
<h5 id="Gap-Lock-间隙锁"><a href="#Gap-Lock-间隙锁" class="headerlink" title="Gap Lock(间隙锁)"></a>Gap Lock(间隙锁)</h5><p>锁定一个范围，但是不包含记录本身</p>
<p><img src="/2023/08/28/%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E9%94%81%E9%97%AE%E9%A2%98/%E9%97%B4%E9%9A%99%E9%94%81%E4%BE%8B%E5%AD%90.png" alt="间隙锁例子"></p>
<p>间隙锁就是在两个记录之间的锁</p>
<p>比如这里就是20<del>25之间 25</del>30之间······</p>
<p>上图中间隙锁总共有6种</p>
<p>主要为了读未提交的幻读问题</p>
<h5 id="Next-Key-Lock-记录锁-间隙锁"><a href="#Next-Key-Lock-记录锁-间隙锁" class="headerlink" title="Next-Key Lock(记录锁+间隙锁)"></a>Next-Key Lock(记录锁+间隙锁)</h5><p>&#x2F;&#x2F;待补充</p>
<h4 id="其他的一些问题"><a href="#其他的一些问题" class="headerlink" title="其他的一些问题"></a>其他的一些问题</h4><ol>
<li><p>为什么要使用读写锁？</p>
<p>使用读写锁的主要目的是提高程序的并发性能和吞吐量。读写锁相较于互斥锁，在处理读取操作时具有更高的灵活性，因为它允许多个读取操作同时进行，而互斥锁则会将所有操作排队执行。以下是使用读写锁的一些优点：<br>提高并发性能：当多个线程同时进行读取操作时，读写锁可以避免互斥锁的串行执行，从而提高并发性能。<br>降低锁的粒度：读写锁可以降低锁的粒度，这意味着在执行读取操作时，不需要对整个资源进行加锁，可以只对资源的部分进行加锁，从而提高并发性能。<br>避免读到临时数据：读锁和写锁是互斥的，当一个线程正在进行写操作时，其他线程需要等待。这样可以确保读取操作不会读取到未提交的临时数据。<br>提高程序执行效率：通过使用读写锁，可以让多个读取操作并发执行，减少排队等待的时间，从而提高程序的执行效率。<br>使用读写锁的场景包括：文件读写操作（如从本地文件中读取数据到内存，或从网络中读取文件到本地）、数据库操作、共享数据结构等。</p>
</li>
<li><p>Seata的默认隔离级别为什么是读未提交？</p>
<p>Seata 的默认隔离级别为读未提交（Read Uncommitted），主要是因为在分布式事务场景下，读未提交可以提供更高的性能和更快的响应速度。在读未提交隔离级别下，事务可以读取另一个未提交的事务所做出的修改，这样就不需要等待其他事务完成提交，从而降低了锁的竞争和事务的延迟。<br>此外，在分布式环境中，读未提交还可以有效地解决幻读问题。因为在分布式系统中，由于网络延迟和数据同步等原因，可能导致事务在读取数据时看不到其他事务的修改，使用读未提交隔离级别可以避免这种情况的发生。<br>需要注意的是，虽然读未提交隔离级别可以提供较高的性能和较快的响应速度，但它同时也可能导致脏读（Dirty Read）问题。脏读是指一个事务在读取数据时，看到了另一个未提交的事务所做出的修改，而这些修改可能会被回滚（Rollback），从而导致读取到的数据是脏数据。为了避免脏读问题，可以使用更高的隔离级别，如可重复读（Repeatable Read）或串行化（Serializable）。<br>总之，Seata 默认采用读未提交隔离级别，主要是为了在分布式事务场景下提供更高的性能和更快的响应速度，同时避免幻读问题。但在实际应用中，根据具体需求和场景，也可以选择其他隔离级别来满足不同需求。</p>
</li>
</ol>
<h3 id="事务隔离级别"><a href="#事务隔离级别" class="headerlink" title="事务隔离级别"></a><a id = "transactionIsolationLevel">事务隔离级别</a></h3><p>待补充</p>
]]></content>
      <categories>
        <category>软件学习</category>
        <category>JAVA</category>
        <category>并发编程</category>
        <category>锁</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>并发问题</tag>
        <tag>锁</tag>
      </tags>
  </entry>
  <entry>
    <title>总论</title>
    <url>/2021/06/09/%E6%80%BB%E8%AE%BA/</url>
    <content><![CDATA[<h2 id="财务会计的特征"><a href="#财务会计的特征" class="headerlink" title="财务会计的特征"></a>财务会计的特征</h2><ul>
<li><p>面向外部</p>
<p>主要向企业外部信息使用者提供与决策有关的财务状况，经营成果、现金流量等信息。</p>
</li>
<li><p>财务报告是财务会计信息传递的手段</p>
</li>
<li><p>对会计信息的加工，需要经过确认、计量、记录、报告等程序</p>
</li>
<li><p>财务报告的数据来自过去的交易或事项是历史信息</p>
</li>
<li><p>以一系列假设为前提</p>
<p>受一套比较科学、严密的概念框架所指导</p>
</li>
<li><p>财务会计信息的质量只能要求可理解、可比、相关及可靠，不能做到绝对客观</p>
</li>
</ul>
<h2 id="财务会计的目标"><a href="#财务会计的目标" class="headerlink" title="财务会计的目标"></a>财务会计的目标</h2><h3 id="受托责任观"><a href="#受托责任观" class="headerlink" title="受托责任观"></a>受托责任观</h3><h3 id="决策有用观"><a href="#决策有用观" class="headerlink" title="决策有用观"></a>决策有用观</h3><h3 id="我国财务报告的目标"><a href="#我国财务报告的目标" class="headerlink" title="我国财务报告的目标"></a>我国财务报告的目标</h3><ul>
<li><p>财务会计报告的使用者包括投资者债权人、政府及其有关部门和社会公众等。</p>
</li>
<li><p>提供与企业财务中哭那个、经营成果和现金流量等有关的会计信息。</p>
</li>
<li><p>反映管理层受托责任的履行情况，有助于财务会计报告使用者作出经济决策。</p>
</li>
</ul>
<h2 id="会计基本前提"><a href="#会计基本前提" class="headerlink" title="会计基本前提"></a>会计基本前提</h2><h3 id="会计主体"><a href="#会计主体" class="headerlink" title="会计主体"></a>会计主体</h3><p>会计主体是指会计工作为之服务的特定单位，是企业会计确认、计量和报告的空间范围。</p>
<h3 id="持续经营"><a href="#持续经营" class="headerlink" title="持续经营"></a>持续经营</h3><p>持续经营是指在可以预见的将来，企业将会按当前的规模和状态继续经营下去，不会停业，也不会大规模削减业务。</p>
<h3 id="会计分期"><a href="#会计分期" class="headerlink" title="会计分期"></a>会计分期</h3><p>会计分期，是指将一个企业持续经营的生产经营活动划分为一个个连续的、长短相同的期间。分期确定各个会计期间的收人、费用和利润，反映每一会计期末的资产、负债和所有者权益，从而及时向财务报告使用者提供有关企业财务状况、经营成果和现金流量的信息。</p>
<h3 id="货币计量"><a href="#货币计量" class="headerlink" title="货币计量"></a>货币计量</h3><p>货币计量，是指会计主体在财务会计确认、计量和报告时以货币计量,反映会计主体的生产经营活动。</p>
<h3 id="会计基础"><a href="#会计基础" class="headerlink" title="会计基础"></a>会计基础</h3><p>我国基本准则明确规定，企业在会计确认、计量和报告中应当以权责发生制为基础。</p>
<p>权责发生制要求,凡是当期已经实现的收人和已经发生或应当负担的费用, 无论款项是否收付,都应当作为当期的收人和费用,计入利润表;凡是不属于当期的收人和费用,即使款项已在当期收付,也不应当作为当期的收入和费用。按照权责发生制,收入的确认应以实现力原则,费用的确认应以发生为原则。</p>
<h2 id="财务会计信息质量要求的解释"><a href="#财务会计信息质量要求的解释" class="headerlink" title="财务会计信息质量要求的解释"></a>财务会计信息质量要求的解释</h2><h3 id="相关性"><a href="#相关性" class="headerlink" title="相关性"></a>相关性</h3><p>指财务报告提供的会计信息应与信息使用者的决策相关。</p>
<ul>
<li>预测价值</li>
<li>反馈价值</li>
</ul>
<h3 id="可靠性"><a href="#可靠性" class="headerlink" title="可靠性"></a>可靠性</h3><ul>
<li>可验证性</li>
</ul>
<p>指会计信息可以经得住复核和验证，即由不同的会计人员分别采用同一会计方法，对同一事项加以会计处理，可以得到相同或相似的结果。</p>
<ul>
<li>如实反映</li>
</ul>
<p>指会计核算应以实际发生的交易或者事项为依据进行确认、计量。内容真实、数字准确，会计记录和报告不加以任何修饰。</p>
<h3 id="中立性"><a href="#中立性" class="headerlink" title="中立性"></a>中立性</h3><p>即会计人员处理会计信息时应把持不偏不倚的态度否则信息的可靠性就会收到质疑。</p>
<h3 id="可比性"><a href="#可比性" class="headerlink" title="可比性"></a>可比性</h3><ul>
<li>同一企业不同时期可比</li>
<li>不同企业相同会计期间可比</li>
</ul>
<h3 id="可理解性"><a href="#可理解性" class="headerlink" title="可理解性"></a>可理解性</h3><p>要求企业提供的会计信息应当清晰明了、易于理解。</p>
<h3 id="实质重于形式"><a href="#实质重于形式" class="headerlink" title="实质重于形式"></a>实质重于形式</h3><p>实质重于形式要求企业应当按照交易或者事项的经济实质进行会计确认、计量和报告,不仅仅以交易或者事项的法律形式为依据。</p>
<h3 id="重要性"><a href="#重要性" class="headerlink" title="重要性"></a>重要性</h3><p>要求企业提供的会计信息应当反映与企业财务状况、经营成果和现金流量有关的所有重要交易或者事项。</p>
<ul>
<li>从性质方面讲</li>
</ul>
<p>只要该会计事项发生就可能对决策有重大影响时，则属于具有重要性的事项。</p>
<ul>
<li>从金额方面讲</li>
</ul>
<p>当某一会计事项的发生达到总资产的一定比例（如5%）时，一般认为其具有重要性。</p>
<h3 id="及时性"><a href="#及时性" class="headerlink" title="及时性"></a>及时性</h3><p>指应当及时进行确认、计量和报告，不得提前或者延后。</p>
<h2 id="会计确认"><a href="#会计确认" class="headerlink" title="会计确认"></a>会计确认</h2><ul>
<li>确认的标准</li>
<li>确认的时间</li>
<li>初始确认和最终确认<ul>
<li>初始确认是指对某项符合会计确认条件的经济业务进入会计信息系统进行处理</li>
<li>在初始确认的基础上,按照财务报告的目标把账户记录转化为报表要素与项目,成为对报表使用者有用的信息,所有金额均计人报表的合计,这一过程为最终确认。</li>
</ul>
</li>
</ul>
<h3 id="计量属性"><a href="#计量属性" class="headerlink" title="计量属性"></a>计量属性</h3><ul>
<li>历史成本</li>
</ul>
<p>历史成本又称为实际成本,就是取得或制造某项财产物资时所实际支付的现金或者其他等价物</p>
<p>历史成本在入账后就不考虑已入账资产的价格变动</p>
<p>在一个持续经营的企业中,其长期资产不是为卖而买的,持有这类资产的目的是供企业长期使用和生产消费的,市场价格的变动对于这些资产完全可以不予考虑</p>
<ul>
<li>重置成本</li>
</ul>
<p>重置成本义称现行成本.是指按照当前市场条件,重新取得同样一项资产所需支付的现金或现金等价物金额。</p>
<blockquote>
<p>按现行成本计量的费用与按现行价格计量的收人配比,可以避免在价格变动时虚计利润。</p>
<p>期末资产负债表提供以现行成本为基础的现时信息,反映了现时财务状况</p>
<p>现行价格的收人与现行成本相配比实现逻辑上的统一性</p>
</blockquote>
<ul>
<li>可变现净值</li>
</ul>
<p>指在正常生产经营过程中,以预计售价减去进一步加工成本和销售所必需的预计税金、费用后的净值。</p>
<ul>
<li>现值</li>
</ul>
<p>指对未来现金流量以恰当的折现率进行折现后的价值, 是考虑货币时间价值肉素等的一种计量属性。</p>
<ul>
<li>公允价值</li>
</ul>
<p>对于公允价值的计量,应当采用在当前情况下适用并且有足够可利用数据和其他信息支持的估值技术。企业使用估值技术的目的是,估计在计量日当前市场条件下市场参与者在有序交易中出售一项资产或者转移-一项负债的价格。使用的估值技术主要包括市场法、收益法和成本法,企业应当使用与其中一种或多种估值技术相一致的方法计量公允价值。市场法,是利用相同成类似的资产、负债或资产和负债组合的价格以及其他相关市场交易信息进行估值的技术。收益法.是将未来金额转换成单一现值的估值技术。成本法,是反映当前要求重置相关资产服务能力所需金额(通常指现行重置成本)的估值技术。</p>
]]></content>
      <categories>
        <category>会计</category>
        <category>中级财务会计</category>
        <category>总论</category>
      </categories>
      <tags>
        <tag>中级财务会计</tag>
      </tags>
  </entry>
  <entry>
    <title>技术层面</title>
    <url>/2021/05/26/%E6%8A%80%E6%9C%AF%E5%B1%82%E9%9D%A2/</url>
    <content><![CDATA[<h1 id="“没有免费的午餐定理”"><a href="#“没有免费的午餐定理”" class="headerlink" title="“没有免费的午餐定理”"></a>“没有免费的午餐定理”</h1><p>没有免费午餐定理(No Free Lunch，简称NFL)是wolpert和Macerday提出的“最优化理论的发展”之一。</p>
<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>最优化理论的发展之一是wolpert和Macerday提出了没有免费的午餐定理(No Free Lunch，简称NFL)。该定理的结论是，由于对所有可能函数的相互补偿，最优化算法的性能是等价的。该定理暗指，没有其它任何算法能够比搜索空间的线性列举或者纯随机搜索算法更优。该定理只是定义在有限的搜索空间，对无限搜索空间结论是否成立尚不清楚。</p>
<h4 id="NFL定理"><a href="#NFL定理" class="headerlink" title="NFL定理"></a>NFL定理</h4><p>1）对所有可能的的目标函数求平均，得到的所有学习算法的“非训练集误差”的期望值相同；<br>2）对任意固定的训练集，对所有的目标函数求平均，得到的所有学习算法的“非训练集误差”的期望值也相同；<br>3）对所有的先验知识求平均，得到的所有学习算法的“非训练集误差”的期望值也相同；<br>4）对任意固定的训练集，对所有的先验知识求平均，得到的所有学习算法的的“非训练集误差”的期望值也相同。<br>NFL定理表明没有一个学习算法可以在任何领域总是产生最准确的学习器。不管采用何种学习算法，至少存在一个目标函数，能够使得随机猜测算法是更好的算法。</p>
<h4 id="NFL理论详情"><a href="#NFL理论详情" class="headerlink" title="NFL理论详情"></a>NFL理论详情</h4><p>首先，假设一个算法为a，而随机胡猜的算法为b，为了简单起见，假设样本空间为 和假设空间为H都是离散的。令P(h|X,a)表示算法a基于训练数据X产生假设h的概率，再令f代表希望的真实目标函数。a的训练集外误差，即a在训练集之外的所有样本上的误差为</p>
<p>其中 是指示函数，若 为真则取值1，否则取值0.<br>考虑二分类问题，且真实目标函数可以是任何函数 ↦{0,1},函数空间为 (指样本空间中元素个数，对所有可能的f按均匀分布对误差求和<br>可以看到总误差竟与算法无关。得证无论算法多好在没有实际背景情况下都不优于随机胡猜。<br>所以，NFL定理最重要意义是，在脱离实际意义情况下，空泛地谈论哪种算法好毫无意义，要谈论算法优劣必须针对具体学习问题。</p>
]]></content>
      <categories>
        <category>人工智能学习</category>
        <category>理论技术</category>
      </categories>
      <tags>
        <tag>NFL</tag>
        <tag>没有免费的午餐定理</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库上机1</title>
    <url>/2021/10/20/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BD%9C%E4%B8%9A1/</url>
    <content><![CDATA[<h1 id="数据库上机1"><a href="#数据库上机1" class="headerlink" title="数据库上机1"></a>数据库上机1</h1><p>代码如下</p>
<h2 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 11.0</span></span><br><span class="line"><span class="comment">-- 创建学生表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Student(</span><br><span class="line">	 Sno <span class="type">char</span>(<span class="number">7</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">UNIQUE</span>,</span><br><span class="line">	 Sname <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">	 Ssex <span class="type">char</span>(<span class="number">2</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">	 Sage <span class="type">SMALLINT</span>,</span><br><span class="line">	 Clno <span class="type">Char</span>(<span class="number">5</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建课程表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Course(</span><br><span class="line">		Cno <span class="type">char</span>(<span class="number">1</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">		Cname <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">		Credit <span class="type">Smallint</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建班级表</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Class(</span><br><span class="line">		Clno <span class="type">Char</span>(<span class="number">5</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">UNIQUE</span>,</span><br><span class="line">		Speciality <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">		Inyear <span class="type">char</span>(<span class="number">4</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">		Number <span class="type">INTEGER</span>,</span><br><span class="line">		Monitor <span class="type">Char</span>(<span class="number">7</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建成绩表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">table</span> Grade(</span><br><span class="line">	Sno <span class="type">Char</span>(<span class="number">7</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">	Cno <span class="type">char</span>(<span class="number">1</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">	Gmark <span class="type">Numeric</span>(<span class="number">4</span>,<span class="number">1</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 11.1</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> Student <span class="keyword">add</span> Nation <span class="type">VARCHAR</span>(<span class="number">20</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> Student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 11.2</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> Student <span class="keyword">drop</span> Nation;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> Student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 11.3</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">into</span> Grade <span class="keyword">VALUES</span>(<span class="string">&#x27;2001110&#x27;</span>,<span class="string">&#x27;3&#x27;</span>,<span class="number">80</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> Grade;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 11.4</span></span><br><span class="line"><span class="keyword">update</span> Grade <span class="keyword">set</span> Gmark <span class="operator">=</span> <span class="number">70</span> <span class="keyword">where</span> Sno <span class="operator">=</span> <span class="string">&#x27;2001110&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> Grade;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 11.5</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> Grade <span class="keyword">where</span> Sno <span class="operator">=</span> <span class="string">&#x27;2001110&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> Grade;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 11.6</span></span><br><span class="line"><span class="keyword">create</span> index IX_Class <span class="keyword">on</span> Student(Clno <span class="keyword">ASC</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 11.7</span></span><br><span class="line"><span class="keyword">drop</span> index IX_Class <span class="keyword">on</span> Student;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="插入书本中的数据"><a href="#插入书本中的数据" class="headerlink" title="插入书本中的数据"></a>插入书本中的数据</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 插入Class数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> class <span class="keyword">values</span></span><br><span class="line">(<span class="string">&#x27;00311&#x27;</span>,<span class="string">&#x27;计算机软件&#x27;</span>,<span class="string">&#x27;2000&#x27;</span>,<span class="number">120</span>,<span class="string">&#x27;2000101&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;00312&#x27;</span>,<span class="string">&#x27;计算机应用&#x27;</span>,<span class="string">&#x27;2000&#x27;</span>,<span class="number">140</span>,<span class="string">&#x27;2000103&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;01311&#x27;</span>,<span class="string">&#x27;计算机软件&#x27;</span>,<span class="string">&#x27;2001&#x27;</span>,<span class="number">220</span>,<span class="string">&#x27;2001103&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> Class;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入Course数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Course <span class="keyword">values</span></span><br><span class="line">(<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;数据库&#x27;</span>,<span class="number">4</span>),</span><br><span class="line">(<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;离散数学&#x27;</span>,<span class="number">3</span>),</span><br><span class="line">(<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;管理信息系统&#x27;</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;操作系统&#x27;</span>,<span class="number">4</span>),</span><br><span class="line">(<span class="string">&#x27;5&#x27;</span>,<span class="string">&#x27;数据结构&#x27;</span>,<span class="number">4</span>),</span><br><span class="line">(<span class="string">&#x27;6&#x27;</span>,<span class="string">&#x27;数据处理&#x27;</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="string">&#x27;7&#x27;</span>,<span class="string">&#x27;C语言&#x27;</span>,<span class="number">4</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> Course;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入Grade数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Grade <span class="keyword">values</span></span><br><span class="line">(<span class="string">&#x27;2000101&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="number">92</span>),</span><br><span class="line">(<span class="string">&#x27;2000101&#x27;</span>,<span class="string">&#x27;3&#x27;</span>,<span class="keyword">NULL</span>),</span><br><span class="line">(<span class="string">&#x27;2000101&#x27;</span>,<span class="string">&#x27;5&#x27;</span>,<span class="number">86</span>),</span><br><span class="line">(<span class="string">&#x27;2000102&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="number">78</span>),</span><br><span class="line">(<span class="string">&#x27;2000102&#x27;</span>,<span class="string">&#x27;6&#x27;</span>,<span class="number">55</span>),</span><br><span class="line">(<span class="string">&#x27;2000103&#x27;</span>,<span class="string">&#x27;3&#x27;</span>,<span class="number">65</span>),</span><br><span class="line">(<span class="string">&#x27;2000103&#x27;</span>,<span class="string">&#x27;6&#x27;</span>,<span class="number">78</span>),</span><br><span class="line">(<span class="string">&#x27;2000103&#x27;</span>,<span class="string">&#x27;5&#x27;</span>,<span class="number">66</span>),</span><br><span class="line">(<span class="string">&#x27;2000104&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="number">54</span>),</span><br><span class="line">(<span class="string">&#x27;2000104&#x27;</span>,<span class="string">&#x27;6&#x27;</span>,<span class="number">83</span>),</span><br><span class="line">(<span class="string">&#x27;2001101&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="number">70</span>),</span><br><span class="line">(<span class="string">&#x27;2001101&#x27;</span>,<span class="string">&#x27;4&#x27;</span>,<span class="number">65</span>),</span><br><span class="line">(<span class="string">&#x27;2001102&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="number">80</span>),</span><br><span class="line">(<span class="string">&#x27;2001102&#x27;</span>,<span class="string">&#x27;4&#x27;</span>,<span class="keyword">NULL</span>),</span><br><span class="line">(<span class="string">&#x27;2000103&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="number">83</span>),</span><br><span class="line">(<span class="string">&#x27;2000103&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="number">76</span>),</span><br><span class="line">(<span class="string">&#x27;2000103&#x27;</span>,<span class="string">&#x27;4&#x27;</span>,<span class="number">56</span>),</span><br><span class="line">(<span class="string">&#x27;2000103&#x27;</span>,<span class="string">&#x27;7&#x27;</span>,<span class="number">88</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> Grade; </span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入student数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span></span><br><span class="line">(<span class="string">&#x27;2000101&#x27;</span>,<span class="string">&#x27;李勇&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;00311&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;2000102&#x27;</span>,<span class="string">&#x27;刘诗晨&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="number">19</span>,<span class="string">&#x27;00311&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;2000103&#x27;</span>,<span class="string">&#x27;王一鸣&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;00312&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;2000104&#x27;</span>,<span class="string">&#x27;张婷婷&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="number">21</span>,<span class="string">&#x27;00312&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;2001101&#x27;</span>,<span class="string">&#x27;李勇敏&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="number">19</span>,<span class="string">&#x27;01311&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;2001102&#x27;</span>,<span class="string">&#x27;贾向东&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">22</span>,<span class="string">&#x27;01311&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;2001103&#x27;</span>,<span class="string">&#x27;陈宝玉&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;01311&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;2001104&#x27;</span>,<span class="string">&#x27;张逸凡&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">21</span>,<span class="string">&#x27;01311&#x27;</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> Student;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>课程作业</category>
        <category>数据库作业</category>
        <category>数据库上机1</category>
      </categories>
      <tags>
        <tag>课程</tag>
        <tag>数据库作业</tag>
        <tag>基本操作</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库上机2</title>
    <url>/2021/11/08/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BD%9C%E4%B8%9A2/</url>
    <content><![CDATA[<h1 id="数据库上机2"><a href="#数据库上机2" class="headerlink" title="数据库上机2"></a>数据库上机2</h1><p><a href="https://www.yclyclycl.cn/2021/10/20/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BD%9C%E4%B8%9A1/#more">第一次上机代码如下</a></p>
<p>代码如下</p>
<h2 id="12题"><a href="#12题" class="headerlink" title="12题"></a>12题</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 12.1</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> Cno <span class="keyword">from</span> grade,student <span class="keyword">WHERE</span> grade.Sno <span class="operator">=</span> student.Sno;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 12.2</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> student <span class="keyword">where</span> Clno <span class="operator">=</span> <span class="number">00311</span> <span class="keyword">AND</span> Ssex <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 12.3</span></span><br><span class="line"><span class="keyword">SELECT</span> Sname,Sage,Sno <span class="keyword">from</span> student <span class="keyword">where</span> Clno <span class="keyword">in</span> (<span class="string">&#x27;01311&#x27;</span>,<span class="string">&#x27;01312&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 12.4</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> student <span class="keyword">where</span> Sname <span class="keyword">LIKE</span> <span class="string">&#x27;李%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 12.5</span></span><br><span class="line"><span class="keyword">SELECT</span> Number <span class="keyword">AS</span> <span class="string">&#x27;李勇班级人数&#x27;</span> <span class="keyword">from</span> class <span class="keyword">WHERE</span> Clno <span class="keyword">IN</span> (<span class="keyword">SELECT</span> Clno <span class="keyword">from</span> student <span class="keyword">WHERE</span> Sname <span class="operator">=</span> <span class="string">&#x27;李勇&#x27;</span>);</span><br><span class="line"><span class="comment">-- 方法一</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> <span class="string">&#x27;李勇班级人数&#x27;</span> <span class="keyword">from</span> student <span class="keyword">where</span> Clno <span class="keyword">in</span> (<span class="keyword">select</span> Clno <span class="keyword">from</span> student <span class="keyword">where</span> Sname <span class="operator">=</span> <span class="string">&#x27;李勇&#x27;</span>);</span><br><span class="line"><span class="comment">-- 方法二</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 12.6</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(Gmark) <span class="keyword">AS</span> <span class="string">&#x27;最高分&#x27;</span>, <span class="built_in">MIN</span>(Gmark) <span class="keyword">AS</span> <span class="string">&#x27;最低分&#x27;</span> , <span class="built_in">AVG</span>(Gmark) <span class="keyword">AS</span> <span class="string">&#x27;平均成绩&#x27;</span> <span class="keyword">FROM</span> Grade g, Course c <span class="keyword">WHERE</span> g.Cno <span class="keyword">IN</span>(<span class="keyword">SELECT</span> c.Cno <span class="keyword">FROM</span> Course </span><br><span class="line"><span class="keyword">WHERE</span> c.Cname <span class="operator">=</span> <span class="string">&#x27;操作系统&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 12.7</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> Sno,Sno) <span class="keyword">AS</span> <span class="string">&#x27;选修了课程的学生人数&#x27;</span> <span class="keyword">from</span> grade <span class="keyword">where</span> Sno <span class="keyword">IN</span> (<span class="keyword">SELECT</span> Sno <span class="keyword">from</span> student);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 12.8</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> <span class="string">&#x27;选修操作系统人数&#x27;</span> <span class="keyword">FROM</span> grade <span class="keyword">WHERE</span> Cno <span class="keyword">IN</span> (<span class="keyword">SELECT</span> Cno <span class="keyword">from</span> course <span class="keyword">WHERE</span> Cname <span class="operator">=</span> <span class="string">&#x27;操作系统&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 12.9</span></span><br><span class="line"><span class="keyword">SELECT</span> Sname <span class="keyword">from</span> Student <span class="keyword">where</span> Sno <span class="keyword">IN</span> (<span class="keyword">SELECT</span> Sno <span class="keyword">from</span> grade <span class="keyword">where</span> Gmark <span class="keyword">is</span> <span class="keyword">NULL</span> <span class="keyword">AND</span> Clno <span class="keyword">IN</span> (<span class="keyword">SELECT</span> Clno <span class="keyword">from</span> class <span class="keyword">where</span> Speciality <span class="operator">=</span> <span class="string">&#x27;计算机软件&#x27;</span> <span class="keyword">AND</span> Inyear <span class="operator">=</span> <span class="string">&#x27;2000&#x27;</span>));</span><br></pre></td></tr></table></figure>

<h2 id="13题"><a href="#13题" class="headerlink" title="13题"></a>13题</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">-- 13.1</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> Clno <span class="keyword">in</span> (</span><br><span class="line">	<span class="keyword">SELECT</span> Clno </span><br><span class="line">	<span class="keyword">from</span> student </span><br><span class="line">	<span class="keyword">WHERE</span> Sname <span class="operator">=</span> <span class="string">&#x27;李勇&#x27;</span>) <span class="keyword">AND</span> Sname <span class="keyword">not</span> <span class="keyword">in</span> (<span class="string">&#x27;李勇&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 13.2</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> Sno <span class="keyword">in</span> (</span><br><span class="line">	<span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> Sno </span><br><span class="line">	<span class="keyword">from</span> grade </span><br><span class="line">	<span class="keyword">where</span> Cno <span class="keyword">in</span> (</span><br><span class="line">		<span class="keyword">SELECT</span> Cno </span><br><span class="line">		<span class="keyword">from</span> grade </span><br><span class="line">		<span class="keyword">where</span> Sno <span class="keyword">IN</span> (</span><br><span class="line">			<span class="keyword">SELECT</span> Sno </span><br><span class="line">			<span class="keyword">from</span> student </span><br><span class="line">			<span class="keyword">where</span> Sname <span class="operator">=</span> <span class="string">&#x27;李勇&#x27;</span>))) <span class="keyword">AND</span> Sname <span class="operator">&lt;&gt;</span> <span class="string">&#x27;李勇&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 13.3</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> Sage <span class="keyword">BETWEEN</span> (<span class="keyword">SELECT</span> Sage <span class="keyword">from</span> student <span class="keyword">where</span> Sname <span class="operator">=</span> <span class="string">&#x27;李勇&#x27;</span>) <span class="keyword">AND</span> <span class="number">25</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 13.4</span></span><br><span class="line"><span class="keyword">SELECT</span> Sno,Sname </span><br><span class="line"><span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> Sno <span class="keyword">IN</span> (</span><br><span class="line">	<span class="keyword">SELECT</span> Sno </span><br><span class="line">	<span class="keyword">from</span> grade </span><br><span class="line">	<span class="keyword">where</span> Cno <span class="keyword">IN</span>(</span><br><span class="line">		<span class="keyword">SELECT</span> Cno </span><br><span class="line">		<span class="keyword">from</span> course</span><br><span class="line">		<span class="keyword">WHERE</span> Cname <span class="keyword">IN</span>(<span class="string">&#x27;操作系统&#x27;</span>)));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 13.5</span></span><br><span class="line"><span class="keyword">SELECT</span> Sname </span><br><span class="line"><span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> Sno <span class="keyword">NOT</span> <span class="keyword">IN</span> (</span><br><span class="line">	<span class="keyword">SELECT</span> Sno <span class="keyword">from</span> grade <span class="keyword">where</span> Cno <span class="keyword">IN</span> (<span class="number">1</span>));</span><br><span class="line">	</span><br><span class="line"><span class="comment">-- 13.6</span></span><br><span class="line"><span class="keyword">SELECT</span> Sname </span><br><span class="line"><span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> Sno <span class="keyword">IN</span> (</span><br><span class="line">	<span class="keyword">SELECT</span> Sno </span><br><span class="line">	<span class="keyword">from</span> grade </span><br><span class="line">	<span class="keyword">GROUP</span> <span class="keyword">BY</span> Sno </span><br><span class="line">	<span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="operator">=</span> (<span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> course));</span><br></pre></td></tr></table></figure>

<h2 id="14题"><a href="#14题" class="headerlink" title="14题"></a>14题</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 14.1</span></span><br><span class="line"><span class="keyword">SELECT</span> Sno,Gmark <span class="keyword">from</span> grade <span class="keyword">where</span> Cno <span class="operator">=</span> <span class="string">&#x27;3&#x27;</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> Gmark <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 14.2</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> student <span class="keyword">ORDER</span> <span class="keyword">BY</span> Clno <span class="keyword">ASC</span>, Sage <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 14.3</span></span><br><span class="line"><span class="keyword">SELECT</span> Cno <span class="keyword">AS</span> <span class="string">&#x27;课程号&#x27;</span>, <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> <span class="string">&#x27;选修人数&#x27;</span> <span class="keyword">from</span> grade <span class="keyword">GROUP</span> <span class="keyword">BY</span> Cno;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 14.4</span></span><br><span class="line"><span class="keyword">SELECT</span> Sno, <span class="built_in">COUNT</span>(sno) <span class="keyword">AS</span> <span class="string">&#x27;选修课程数&#x27;</span> <span class="keyword">from</span> grade <span class="keyword">GROUP</span> <span class="keyword">BY</span> Sno <span class="keyword">HAVING</span>(<span class="built_in">COUNT</span>(Sno) <span class="operator">&gt;</span> <span class="number">3</span>);</span><br></pre></td></tr></table></figure>

<h2 id="15题"><a href="#15题" class="headerlink" title="15题"></a>15题</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">-- 15.1</span></span><br><span class="line"><span class="keyword">UPDATE</span> grade <span class="keyword">SET</span> Gmark <span class="operator">=</span> <span class="number">0</span> <span class="keyword">where</span> Sno <span class="keyword">IN</span> (<span class="keyword">SELECT</span> Sno <span class="keyword">from</span> student <span class="keyword">where</span> Clno <span class="operator">=</span> <span class="string">&#x27;01311&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> grade <span class="keyword">where</span> Sno <span class="keyword">IN</span> (<span class="keyword">SELECT</span> Sno <span class="keyword">from</span> student <span class="keyword">WHERE</span> Clno <span class="operator">=</span> <span class="string">&#x27;01311&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 15.2</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">from</span> grade <span class="keyword">where</span> Sno <span class="keyword">LIKE</span> <span class="string">&#x27;2001%&#x27;</span> <span class="keyword">AND</span> Sno <span class="keyword">IN</span> (</span><br><span class="line">	<span class="keyword">SELECT</span> Sno </span><br><span class="line">	<span class="keyword">from</span> student </span><br><span class="line">	<span class="keyword">where</span> Clno <span class="keyword">IN</span> (<span class="keyword">select</span> Clno <span class="keyword">from</span> class <span class="keyword">where</span> Speciality <span class="operator">=</span> <span class="string">&#x27;计算机软件&#x27;</span>));</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> grade;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 15.3</span></span><br><span class="line"><span class="keyword">UPDATE</span> class <span class="keyword">set</span> Monitor <span class="operator">=</span> <span class="keyword">null</span> <span class="keyword">where</span> Monitor <span class="keyword">IN</span> (<span class="keyword">SELECT</span> Sno <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> Sname <span class="operator">=</span> <span class="string">&#x27;李勇&#x27;</span>);</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">from</span> Grade <span class="keyword">where</span> Sno <span class="keyword">IN</span> (<span class="keyword">SELECT</span> Sno <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> Sname <span class="operator">=</span> <span class="string">&#x27;李勇&#x27;</span>);</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">from</span> student <span class="keyword">where</span> Sname <span class="operator">=</span> <span class="string">&#x27;李勇&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 15.4</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> AvgAge <span class="keyword">AS</span> (<span class="keyword">SELECT</span> Clno <span class="keyword">AS</span> <span class="string">&#x27;班级号&#x27;</span>,<span class="built_in">AVG</span>(Sage)  <span class="keyword">AS</span> <span class="string">&#x27;平均年龄&#x27;</span> <span class="keyword">from</span> student <span class="keyword">GROUP</span> <span class="keyword">BY</span> Clno);</span><br></pre></td></tr></table></figure>

<h2 id="上机补充题"><a href="#上机补充题" class="headerlink" title="上机补充题"></a>上机补充题</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 第二次上机补充题1</span></span><br><span class="line"><span class="keyword">SELECT</span> s.Sno <span class="keyword">AS</span> <span class="string">&#x27;学号&#x27;</span>, s.Sname <span class="keyword">AS</span> <span class="string">&#x27;姓名&#x27;</span>,<span class="built_in">COUNT</span>(g.Sno) <span class="keyword">AS</span> <span class="string">&#x27;选课数&#x27;</span> <span class="keyword">from</span> student s <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> grade g <span class="keyword">ON</span> s.Sno <span class="operator">=</span> g.Sno <span class="keyword">GROUP</span> <span class="keyword">BY</span> s.Sno,s.Sname;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 第二次上机补充题2</span></span><br><span class="line"><span class="keyword">SELECT</span> cl.Clno <span class="keyword">AS</span> <span class="string">&#x27;班级号&#x27;</span>, Cno <span class="keyword">AS</span> <span class="string">&#x27;课程号&#x27;</span>, <span class="built_in">COUNT</span>(g.Sno) <span class="keyword">AS</span> <span class="string">&#x27;选课人数&#x27;</span>, <span class="built_in">AVG</span>(Gmark) <span class="keyword">AS</span> <span class="string">&#x27;该班级的平均分&#x27;</span> </span><br><span class="line"><span class="keyword">from</span> grade g </span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> student s <span class="keyword">ON</span> g.Sno <span class="operator">=</span> s.Sno </span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> class cl <span class="keyword">ON</span> s.Clno <span class="operator">=</span> cl.Clno </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> cl.Clno,g.Cno;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>课程作业</category>
        <category>数据库作业</category>
        <category>数据库上机2</category>
      </categories>
      <tags>
        <tag>课程</tag>
        <tag>数据库作业</tag>
        <tag>基本操作</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库作业3</title>
    <url>/2021/12/06/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BD%9C%E4%B8%9A3/</url>
    <content><![CDATA[<h1 id="数据库上机3"><a href="#数据库上机3" class="headerlink" title="数据库上机3"></a>数据库上机3</h1><p>还有待改进，下一版请稍等，有问题可以联系本人</p>
<h2 id="上机实验7"><a href="#上机实验7" class="headerlink" title="上机实验7"></a>上机实验7</h2><p>代码如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># 上机实验<span class="number">7.1</span></span><br><span class="line"><span class="comment">-- 16.1</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> Stu_01311_1</span><br><span class="line">  <span class="keyword">AS</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> clno <span class="operator">=</span> &quot;01311&quot; <span class="keyword">AND</span> Sno <span class="keyword">IN</span></span><br><span class="line">	  (<span class="keyword">SELECT</span> sno <span class="keyword">from</span> grade <span class="keyword">WHERE</span> cno <span class="operator">=</span> <span class="string">&#x27;1&#x27;</span>);</span><br><span class="line">			</span><br><span class="line"><span class="comment">-- 16.2</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> Stu_01311_2</span><br><span class="line">  <span class="keyword">AS</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> clno <span class="operator">=</span> &quot;01311&quot; <span class="keyword">AND</span> Sno <span class="keyword">IN</span></span><br><span class="line">	  (<span class="keyword">SELECT</span> sno <span class="keyword">from</span> grade <span class="keyword">WHERE</span> Gmark <span class="operator">&lt;</span> <span class="number">60.0</span> <span class="keyword">AND</span> cno <span class="operator">=</span> <span class="string">&#x27;1&#x27;</span>);</span><br><span class="line">		</span><br><span class="line"><span class="comment">-- 16.3</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> Stu_year</span><br><span class="line">  <span class="keyword">AS</span> <span class="keyword">SELECT</span> s.Sno <span class="keyword">AS</span> <span class="string">&#x27;学生学号&#x27;</span>, s.Sname <span class="keyword">AS</span> <span class="string">&#x27;姓名&#x27;</span>, (DATE_FORMAT(NOW(), <span class="string">&#x27;%Y&#x27;</span>) <span class="operator">-</span> s.Sage) <span class="keyword">AS</span> <span class="string">&#x27;出生年份&#x27;</span> <span class="keyword">FROM</span> student s;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 16.4</span></span><br><span class="line"><span class="keyword">SELECT</span> 姓名 <span class="keyword">AS</span> <span class="string">&#x27;学生姓名&#x27;</span> <span class="keyword">FROM</span> stu_year <span class="keyword">WHERE</span> 出生年份 <span class="operator">&gt;</span> <span class="number">199</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 16.5</span></span><br><span class="line"><span class="keyword">SELECT</span> sno <span class="keyword">AS</span> <span class="string">&#x27;学号&#x27;</span>, Sname <span class="keyword">AS</span> <span class="string">&#x27;姓名&#x27;</span>, (DATE_FORMAT(NOW(), <span class="string">&#x27;%Y&#x27;</span>) <span class="operator">-</span> Sage) <span class="keyword">AS</span> <span class="string">&#x27;出生年份&#x27;</span> <span class="keyword">FROM</span> stu_01311_2;</span><br><span class="line"></span><br><span class="line"># 上机实验<span class="number">7.2</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> Class_grade</span><br><span class="line"> <span class="keyword">AS</span> <span class="keyword">SELECT</span> S.Clno <span class="keyword">AS</span> <span class="string">&#x27;班级&#x27;</span> , cno <span class="keyword">AS</span> <span class="string">&#x27;课程名&#x27;</span>, <span class="built_in">AVG</span>(Gmark) <span class="keyword">as</span> <span class="string">&#x27;平均成绩&#x27;</span> </span><br><span class="line"> <span class="keyword">FROM</span> student S </span><br><span class="line">      <span class="keyword">right</span> <span class="keyword">JOIN</span> grade G <span class="keyword">on</span> S.sno <span class="operator">=</span> G.sno <span class="keyword">GROUP</span> <span class="keyword">BY</span> Clno , Cno;</span><br><span class="line">			</span><br><span class="line"><span class="keyword">UPDATE</span> Class_grade</span><br><span class="line"><span class="keyword">SET</span> 平均成绩 <span class="operator">=</span> <span class="number">90.0</span></span><br><span class="line"><span class="keyword">WHERE</span> 班级 <span class="operator">=</span> <span class="string">&#x27;03310&#x27;</span>; <span class="operator">/</span><span class="operator">/</span>该表无法<span class="keyword">update</span></span><br><span class="line"></span><br><span class="line"># 上机实验<span class="number">7.4</span></span><br><span class="line"><span class="comment">-- (1)</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> Course_grade</span><br><span class="line"> <span class="keyword">AS</span> <span class="keyword">SELECT</span> cno <span class="keyword">AS</span> <span class="string">&#x27;课程&#x27;</span> , <span class="built_in">AVG</span>(Gmark) <span class="keyword">as</span> <span class="string">&#x27;平均成绩&#x27;</span> <span class="keyword">FROM</span> grade <span class="keyword">GROUP</span> <span class="keyword">BY</span> cno;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">SELECT</span> S.sno <span class="keyword">AS</span> <span class="string">&#x27;学号&#x27;</span>, S.sname <span class="keyword">AS</span> <span class="string">&#x27;姓名&#x27;</span>, G.cno <span class="keyword">AS</span> <span class="string">&#x27;课程名&#x27;</span>, G.gmark <span class="operator">-</span> CC.平均成绩</span><br><span class="line"><span class="keyword">AS</span> <span class="string">&#x27;与平均分差值&#x27;</span> </span><br><span class="line"><span class="keyword">from</span> grade G <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> student S <span class="keyword">ON</span> G.sno <span class="operator">=</span> S.sno</span><br><span class="line">             <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> course_grade CC <span class="keyword">ON</span> CC.课程 <span class="operator">=</span> G.Cno;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- (2)</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> Course_classNum</span><br><span class="line"><span class="keyword">AS</span> <span class="keyword">SELECT</span> clno,<span class="built_in">count</span>(Sno) <span class="keyword">AS</span> Number <span class="keyword">FROM</span> student <span class="keyword">GROUP</span> <span class="keyword">BY</span> Clno;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> Cl.Clno, Cl.Speciality, Cl.Number <span class="keyword">AS</span> <span class="string">&#x27;Class表人数&#x27;</span>, CLn.Number <span class="keyword">AS</span> <span class="string">&#x27;实际人数&#x27;</span> <span class="keyword">FROM</span> class Cl </span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> Course_ClassNum Cln <span class="keyword">on</span> cl.Clno <span class="operator">=</span> Cln.Clno;</span><br></pre></td></tr></table></figure>

<h2 id="上机实验8"><a href="#上机实验8" class="headerlink" title="上机实验8"></a>上机实验8</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># 上机实验<span class="number">8.2</span></span><br><span class="line"><span class="comment">-- 创建学生表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Student(</span><br><span class="line">	 Sno <span class="type">char</span>(<span class="number">7</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">	 Sname <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">DEFAULT</span>(<span class="string">&#x27;男&#x27;</span>) <span class="keyword">CHECK</span>(Sname <span class="keyword">IN</span>(<span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;女&#x27;</span>)),</span><br><span class="line">	 Ssex <span class="type">char</span>(<span class="number">2</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">CHECK</span> ( Ssex <span class="operator">&gt;</span> <span class="number">14</span> <span class="keyword">AND</span> Ssex <span class="operator">&lt;</span> <span class="number">65</span> ),</span><br><span class="line">	 Sage <span class="type">SMALLINT</span> <span class="keyword">CHECK</span>(Sage<span class="operator">&gt;</span><span class="number">14</span> <span class="keyword">AND</span> Sage<span class="operator">&lt;</span><span class="number">65</span>),</span><br><span class="line">	 Clno <span class="type">Char</span>(<span class="number">5</span>)<span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">REFERENCES</span> Class(Clno) <span class="keyword">ON</span> <span class="keyword">UPDATE</span> CASCADE <span class="keyword">ON</span> <span class="keyword">DELETE</span> RESTRICT</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建课程表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Course(</span><br><span class="line">		Cno <span class="type">char</span>(<span class="number">1</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">		Cname <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">		Credit <span class="type">Smallint</span> <span class="keyword">CHECK</span> ( Credit <span class="operator">&lt;=</span> <span class="number">6</span> )</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建班级表</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Class(</span><br><span class="line">		Clno <span class="type">Char</span>(<span class="number">5</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">		Speciality <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">		Inyear <span class="type">char</span>(<span class="number">4</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">		Number <span class="type">INTEGER</span> <span class="keyword">CHECK</span>(Number <span class="operator">&gt;</span> <span class="number">1</span> <span class="keyword">AND</span> Number <span class="operator">&lt;</span> <span class="number">100</span>),</span><br><span class="line">		Monitor <span class="type">Char</span>(<span class="number">7</span>) <span class="keyword">REFERENCES</span> Student(Sno) <span class="keyword">ON</span> <span class="keyword">UPDATE</span> CASCADE <span class="keyword">ON</span> <span class="keyword">DELETE</span> RESTRICT</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建成绩表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">table</span> Grade(</span><br><span class="line">	Sno <span class="type">Char</span>(<span class="number">7</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">	Cno <span class="type">char</span>(<span class="number">1</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">	Gmark <span class="type">Numeric</span>(<span class="number">4</span>,<span class="number">1</span>) <span class="keyword">CHECK</span>(Gmark <span class="operator">&gt;</span> <span class="number">0</span> <span class="keyword">AND</span> Gmark <span class="operator">&lt;</span> <span class="number">100</span>),</span><br><span class="line">	<span class="keyword">PRIMARY</span> KEY(Sno, Cno),</span><br><span class="line">	<span class="keyword">FOREIGN</span> KEY (Sno) <span class="keyword">REFERENCES</span> Student (Sno) <span class="keyword">ON</span> <span class="keyword">UPDATE</span> CASCADE,</span><br><span class="line">	<span class="keyword">FOREIGN</span> KEY (Cno) <span class="keyword">REFERENCES</span> course (Cno) <span class="keyword">ON</span> <span class="keyword">UPDATE</span> CASCADE</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实验内容</span></span><br><span class="line"># 触发器为选做</span><br></pre></td></tr></table></figure>



<h2 id="上机实验9"><a href="#上机实验9" class="headerlink" title="上机实验9"></a>上机实验9</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># 上机实验<span class="number">9</span></span><br><span class="line"><span class="comment">-- 14.1</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> </span><br><span class="line">  <span class="keyword">ON</span> student</span><br><span class="line">	<span class="keyword">TO</span> ZhangYong</span><br><span class="line">	<span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> </span><br><span class="line">  <span class="keyword">ON</span> grade</span><br><span class="line">	<span class="keyword">TO</span> ZhangYong</span><br><span class="line">	<span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION;</span><br><span class="line">	</span><br><span class="line"><span class="comment">-- 14.2</span></span><br><span class="line"><span class="keyword">Grant</span> <span class="keyword">INSERT</span>, <span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">ON</span> Student</span><br><span class="line">	<span class="keyword">TO</span> ZhangSan</span><br><span class="line">	<span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION;</span><br><span class="line">	</span><br><span class="line"><span class="comment">-- 14.3</span></span><br><span class="line"><span class="keyword">Grant</span> <span class="keyword">INSERT</span>, <span class="keyword">DELETE</span></span><br><span class="line">  <span class="keyword">ON</span> Student</span><br><span class="line">	<span class="keyword">TO</span> Lisi;</span><br><span class="line">	</span><br><span class="line"><span class="comment">-- 14.4</span></span><br><span class="line"><span class="keyword">Grant</span> <span class="keyword">ALL</span> PRIVILEGES</span><br><span class="line">  <span class="keyword">ON</span> Student</span><br><span class="line">	<span class="keyword">TO</span> LiYong</span><br><span class="line">	<span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION;</span><br><span class="line">	</span><br><span class="line"><span class="comment">-- 14.5</span></span><br><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">ALL</span> PRIVILEGES</span><br><span class="line"> <span class="keyword">on</span> Student</span><br><span class="line"> <span class="keyword">FROM</span> ZhangYong;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">ALL</span> PRIVILEGES</span><br><span class="line"> <span class="keyword">on</span> Course</span><br><span class="line"> <span class="keyword">FROM</span> ZhangYong;</span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 14.6</span></span><br><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">ALL</span> PRIVILEGES</span><br><span class="line">  <span class="keyword">ON</span> Student</span><br><span class="line">	<span class="keyword">FROM</span> ZhangSan;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>课程作业</category>
        <category>数据库作业</category>
        <category>数据库上机3</category>
      </categories>
      <tags>
        <tag>课程</tag>
        <tag>数据库作业</tag>
        <tag>基本操作</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构1.1</title>
    <url>/2021/10/03/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%841-1/</url>
    <content><![CDATA[<h1 id="数据结构第一次作业之顺序表"><a href="#数据结构第一次作业之顺序表" class="headerlink" title="数据结构第一次作业之顺序表"></a>数据结构第一次作业之顺序表</h1><h2 id="代码下载"><a href="#代码下载" class="headerlink" title="代码下载"></a>代码下载</h2><p><a href="shunxuList.rar">点击下载源代码</a></p>
<h2 id="代码展示"><a href="#代码展示" class="headerlink" title="代码展示"></a>代码展示</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">该顺序表所能存放的数为int整型（-32768~32767之间的整数）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXSIZE 100<span class="comment">//顺序表最大长度</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义顺序表*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="type">int</span> data[MAXSIZE];</span><br><span class="line">	<span class="type">int</span> length;</span><br><span class="line">&#125;ShunXuList;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">IsNum</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> ch[<span class="number">10</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, ch);</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(ch[i<span class="number">-1</span>]!=<span class="string">&#x27;\0&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ch[i<span class="number">-1</span>] &lt; <span class="string">&#x27;0&#x27;</span> || ch[i<span class="number">-1</span>] &gt; <span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;输入格式错误\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;请输入需要输入整数的个数(1~100之间的整数)：&quot;</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, ch);</span><br><span class="line">            i = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> number = atoi(ch);</span><br><span class="line">    <span class="keyword">return</span> number;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断输入的是不是整数类型数据</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">IsDataNum</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> ch[<span class="number">10</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,ch);</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(ch[i<span class="number">-1</span>]!=<span class="string">&#x27;\0&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ch[i<span class="number">-1</span>] &lt; <span class="string">&#x27;0&#x27;</span> || ch[i<span class="number">-1</span>] &gt; <span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;输入格式错误\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;请输入-32768~32767之间的整数：&quot;</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, ch);</span><br><span class="line">            i = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> number = atoi(ch);</span><br><span class="line">    <span class="keyword">return</span> number;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断输入的数据是不是小于等于数据个数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">IsLengthNum</span><span class="params">(ShunXuList *shunXuList)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> ch[<span class="number">10</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,ch);</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(ch[i<span class="number">-1</span>]!=<span class="string">&#x27;\0&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ch[i<span class="number">-1</span>] &lt; <span class="string">&#x27;0&#x27;</span> || ch[i<span class="number">-1</span>] &gt; <span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;输入格式错误\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;请0~%d之内的整数：&quot;</span>,shunXuList-&gt;length);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, ch);</span><br><span class="line">            i = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> number = atoi(ch);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> number;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除顺序表中相同部分的数据</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">DeleteSameList</span><span class="params">(ShunXuList *shunXuList)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= shunXuList-&gt;length; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>;j &lt;= shunXuList-&gt;length; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (shunXuList-&gt;data[i - <span class="number">1</span>] == shunXuList-&gt;data[j - <span class="number">1</span>])&#123;</span><br><span class="line">                DeletePositionList(shunXuList,j);</span><br><span class="line">                j--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    PrintList(shunXuList);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//按照key值删除顺序表中的数据</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">DeleteKeyList</span><span class="params">(ShunXuList *shunXuList)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入key值：\n&quot;</span>);</span><br><span class="line">    <span class="type">int</span> number = IsDataNum();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= shunXuList-&gt;length; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (number == shunXuList-&gt;data[i<span class="number">-1</span>])&#123;</span><br><span class="line">            DeletePositionList(shunXuList,i);</span><br><span class="line">            i--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    PrintList(shunXuList);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">AddList</span><span class="params">(ShunXuList *shunXuList)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入需要插入的数(-32768~32767之间)：\n&quot;</span>);</span><br><span class="line">    <span class="type">int</span> num = IsDataNum();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入插入的位置（小于等于%d）：\n&quot;</span>,shunXuList-&gt;length);</span><br><span class="line">    <span class="type">int</span> position = IsLengthNum(shunXuList);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = shunXuList-&gt;length; i &gt;= position; i--)&#123;</span><br><span class="line">        shunXuList-&gt;data[i] = shunXuList-&gt;data[i<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    shunXuList-&gt;data[position<span class="number">-1</span>] = num;</span><br><span class="line"></span><br><span class="line">    shunXuList-&gt;length++;</span><br><span class="line"></span><br><span class="line">    PrintList(shunXuList);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">DeletePositionList</span><span class="params">(ShunXuList *shunXuList,<span class="type">int</span> position)</span></span><br><span class="line">&#123;</span><br><span class="line">    shunXuList-&gt;length--;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = position; i &lt;= shunXuList-&gt;length; i++)&#123;</span><br><span class="line">        shunXuList-&gt;data[i<span class="number">-1</span>] = shunXuList-&gt;data[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//释放空间</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ExitList</span><span class="params">(ShunXuList *shunXuList)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">free</span>(shunXuList);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;空间释放成功&quot;</span>);</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">ChuangJian</span><span class="params">(ShunXuList *shunXuList)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入需要输入整数的个数(1~100之间的整数)：&quot;</span>);</span><br><span class="line">    <span class="type">int</span> number; <span class="comment">//存放输入数据的个数</span></span><br><span class="line">    number = IsNum();</span><br><span class="line">    shunXuList-&gt;length = number;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= number; i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入第%d个数据:&quot;</span>,i);</span><br><span class="line">        shunXuList-&gt;data[i<span class="number">-1</span>] = IsDataNum();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintList</span><span class="params">(ShunXuList *shunXuList)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;开始打印顺序表\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= shunXuList-&gt;length; i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;第%d个数据为：%d\n&quot;</span>,i,shunXuList-&gt;data[i<span class="number">-1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Menu</span><span class="params">(ShunXuList *shunXuList)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">char</span> ch[<span class="number">10</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,ch);</span><br><span class="line">    <span class="keyword">while</span>(ch[<span class="number">1</span>]!=<span class="string">&#x27;\0&#x27;</span> || ch[<span class="number">0</span>] &lt;= <span class="string">&#x27;0&#x27;</span> || ch[<span class="number">0</span>] &gt;= <span class="string">&#x27;6&#x27;</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请键入1~5的整数&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,ch);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">switch</span> (ch[<span class="number">0</span>])</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">        DeleteSameList(shunXuList);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">        DeleteKeyList(shunXuList);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">        AddList(shunXuList);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入想删除的节点位置\n&quot;</span>);</span><br><span class="line">        DeletePositionList(shunXuList,IsLengthNum(shunXuList));</span><br><span class="line">        PrintList(shunXuList);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line">        ExitList(shunXuList);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    ShunXuList *shunXuList = <span class="literal">NULL</span>;</span><br><span class="line">    shunXuList = (ShunXuList *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(ShunXuList));</span><br><span class="line">    shunXuList-&gt;length = <span class="number">0</span>;</span><br><span class="line">    ChuangJian(shunXuList);</span><br><span class="line"></span><br><span class="line">    PrintList(shunXuList);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;您已成功创建顺序表\n*******************************************\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入你想进行的操作\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1:删除重复的节点\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;2:删除节点中所有的key值\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;3:插入一个数\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;4:删除某个节点的数据\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;5:退出程序\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    Menu(shunXuList);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>课程作业</category>
        <category>数据结构作业</category>
        <category>第一次作业</category>
        <category>顺序表</category>
      </categories>
      <tags>
        <tag>课程</tag>
        <tag>数据结构作业</tag>
        <tag>顺序表</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构1.2</title>
    <url>/2021/10/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%841-2/</url>
    <content><![CDATA[<h1 id="数据结构第一次作业之单链表"><a href="#数据结构第一次作业之单链表" class="headerlink" title="数据结构第一次作业之单链表"></a>数据结构第一次作业之单链表</h1><h2 id="代码下载"><a href="#代码下载" class="headerlink" title="代码下载"></a>代码下载</h2><p><a href="Lianlist1.rar">点击下载源代码</a></p>
<h2 id="代码展示"><a href="#代码展示" class="headerlink" title="代码展示"></a>代码展示</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">该链表所能存放的数为int整型（-32768~32767之间的整数）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXSIZE 100<span class="comment">//顺序表最大长度</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义顺序表*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="type">int</span> num;</span><br><span class="line">	<span class="type">int</span> length;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;*LNode;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">CreateList</span><span class="params">(LNode *node)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> number;</span><br><span class="line">    LNode p = node;</span><br><span class="line">    LNode head = node;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入您需要输入的数据的个数\n&quot;</span>);</span><br><span class="line">    number = IsDataNum();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= number<span class="number">-1</span>; i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入第%d个节点的数：\n&quot;</span>,i);</span><br><span class="line">        p-&gt;num = IsDataNum();</span><br><span class="line">        p-&gt;next = (LNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    head-&gt;length = number;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入第%d个节点的数：\n&quot;</span>,number);</span><br><span class="line">    p-&gt;num = IsDataNum();</span><br><span class="line">    p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintList</span><span class="params">(LNode *node)</span></span><br><span class="line">&#123;</span><br><span class="line">    LNode p = node;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(p!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;第%d个节点的值为：%d\n&quot;</span>,num,p-&gt;num);</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">        num++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LNode <span class="title function_">DeletePositionList</span><span class="params">(LNode *node,<span class="type">int</span> num)</span><span class="comment">//?</span></span><br><span class="line">&#123;</span><br><span class="line">    LNode p = node;</span><br><span class="line">    LNode head = node;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; num<span class="number">-1</span>; i++)&#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (num != head-&gt;length &amp;&amp; num != <span class="number">1</span>)&#123;</span><br><span class="line">        LNode q = p-&gt;next;</span><br><span class="line">        p-&gt;next = p-&gt;next-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(q);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(num != <span class="number">1</span>)&#123;</span><br><span class="line">        LNode q = p-&gt;next;</span><br><span class="line">        p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="built_in">free</span>(q);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">DeleteSameList</span><span class="params">(LNode *node)</span></span><br><span class="line">&#123;</span><br><span class="line">    LNode p,head,q;</span><br><span class="line">    q = node;</span><br><span class="line">    p = node;</span><br><span class="line">    head = node;</span><br><span class="line">    <span class="keyword">while</span>(p != <span class="literal">NULL</span> &amp;&amp; p-&gt;next != <span class="literal">NULL</span>)&#123;</span><br><span class="line">        q = p;</span><br><span class="line">        <span class="keyword">while</span>(q-&gt;next != <span class="literal">NULL</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;num == q-&gt;next-&gt;num)&#123;</span><br><span class="line">                    LNode ql = q-&gt;next;</span><br><span class="line">                    q-&gt;next = q-&gt;next-&gt;next;</span><br><span class="line">                    <span class="built_in">free</span>(ql);</span><br><span class="line">                    head-&gt;length--;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            q = q-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    PrintList(node);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">DeleteKeyList</span><span class="params">(LNode *node)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入删除的Key值：\n&quot;</span>);</span><br><span class="line">    <span class="type">int</span> number = IsDataNum();</span><br><span class="line">    LNode forehead = (LNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">    forehead-&gt;next = node;</span><br><span class="line"></span><br><span class="line">    LNode p = forehead;</span><br><span class="line">    <span class="keyword">while</span>(p-&gt;next != <span class="literal">NULL</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;next-&gt;num == number)&#123;</span><br><span class="line">            LNode q = p-&gt;next;</span><br><span class="line">            p-&gt;next = p-&gt;next-&gt;next;</span><br><span class="line">            <span class="built_in">free</span>(q);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    PrintList(forehead-&gt;next);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">AddList</span><span class="params">(LNode *node)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;不想写了，反正作业没要求，你看着办吧！&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">ExitList</span><span class="params">(LNode *node)</span></span><br><span class="line">&#123;</span><br><span class="line">    LNode p = node;</span><br><span class="line">    <span class="keyword">while</span>(p-&gt;next != <span class="literal">NULL</span>)&#123;</span><br><span class="line">        LNode q = p;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(q);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">free</span>(p);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;已经成功释放所有的空间&quot;</span>);</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">IsLengthNum</span><span class="params">(LNode *node)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> ch[<span class="number">10</span>];</span><br><span class="line">    LNode p = node;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,ch);</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(ch[i<span class="number">-1</span>]!=<span class="string">&#x27;\0&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ch[i<span class="number">-1</span>] &lt; <span class="string">&#x27;0&#x27;</span> || ch[i<span class="number">-1</span>] &gt; <span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;输入格式错误\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;请0~%d之内的整数：&quot;</span>,p-&gt;length);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, ch);</span><br><span class="line">            i = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> number = atoi(ch);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> number;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Menu</span><span class="params">(LNode *node)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> ch[<span class="number">10</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,ch);</span><br><span class="line">    <span class="keyword">while</span>(ch[<span class="number">1</span>]!=<span class="string">&#x27;\0&#x27;</span> || ch[<span class="number">0</span>] &lt;= <span class="string">&#x27;0&#x27;</span> || ch[<span class="number">0</span>] &gt;= <span class="string">&#x27;6&#x27;</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请键入1~5的整数&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,ch);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">switch</span> (ch[<span class="number">0</span>])</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">        DeleteSameList(node);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">        DeleteKeyList(node);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">        AddList(node);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入想删除的节点位置\n&quot;</span>);</span><br><span class="line">        LNode *m = DeletePositionList(node,IsLengthNum(node));</span><br><span class="line">        PrintList(m);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line">        ExitList(node);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取一个整形，并判断该整形是否合法</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">IsDataNum</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> ch[<span class="number">10</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,ch);</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(ch[i<span class="number">-1</span>]!=<span class="string">&#x27;\0&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ch[i<span class="number">-1</span>] &lt; <span class="string">&#x27;0&#x27;</span> || ch[i<span class="number">-1</span>] &gt; <span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;输入格式错误\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;请输入-32768~32767之间的整数：&quot;</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, ch);</span><br><span class="line">            i = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> number = atoi(ch);</span><br><span class="line">    <span class="keyword">return</span> number;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    LNode *node = <span class="literal">NULL</span>;</span><br><span class="line">    node = (LNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line"></span><br><span class="line">    CreateList(node);<span class="comment">//创建链表</span></span><br><span class="line"></span><br><span class="line">    PrintList(node);<span class="comment">//打印链表</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;您已成功创建链表\n*******************************************\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入你想进行的操作\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1:删除重复的节点\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;2:删除节点中所有的key值\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;3:插入一个数\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;4:删除某个节点的数据\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;5:退出程序\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    Menu(node);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>课程作业</category>
        <category>数据结构作业</category>
        <category>第一次作业</category>
        <category>单链表</category>
      </categories>
      <tags>
        <tag>课程</tag>
        <tag>单链表</tag>
        <tag>数据结构作业</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构1-G</title>
    <url>/2021/10/03/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%841-G/</url>
    <content><![CDATA[<h1 id="数据结构第一次作业之双链表G"><a href="#数据结构第一次作业之双链表G" class="headerlink" title="数据结构第一次作业之双链表G"></a>数据结构第一次作业之双链表G</h1><h2 id="代码下载"><a href="#代码下载" class="headerlink" title="代码下载"></a>代码下载</h2><p><a href="Lianlist2.rar">点击下载源代码</a></p>
<h2 id="代码展示"><a href="#代码展示" class="headerlink" title="代码展示"></a>代码展示</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">该链表所能存放的数为int整型（-32768~32767之间的整数）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXSIZE 100<span class="comment">//顺序表最大长度</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义顺序表*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="type">int</span> num;</span><br><span class="line">	<span class="type">int</span> length;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">next</span>;</span></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">prev</span>;</span></span><br><span class="line">&#125;*LNode;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">CreateList</span><span class="params">(LNode *node)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> number;</span><br><span class="line">    LNode p = node;</span><br><span class="line">    LNode head = node;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入您需要输入的数据的个数\n&quot;</span>);</span><br><span class="line">    number = IsDataNum();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= number<span class="number">-1</span>; i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入第%d个节点的数：\n&quot;</span>,i);</span><br><span class="line">        p-&gt;num = IsDataNum();</span><br><span class="line">        p-&gt;next = (LNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">        p-&gt;next-&gt;prev = p;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    head-&gt;length = number;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入第%d个节点的数：\n&quot;</span>,number);</span><br><span class="line">    p-&gt;num = IsDataNum();</span><br><span class="line">    p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintList</span><span class="params">(LNode *node)</span></span><br><span class="line">&#123;</span><br><span class="line">    LNode p = node;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(p!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;第%d个节点的值为：%d\n&quot;</span>,num,p-&gt;num);</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">        num++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">DeletePositionList</span><span class="params">(LNode *node,<span class="type">int</span> num)</span></span><br><span class="line">&#123;</span><br><span class="line">    LNode p = node;</span><br><span class="line">    LNode head = node;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= num<span class="number">-1</span>; i++)&#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (num != head-&gt;length)&#123;</span><br><span class="line">        p-&gt;prev-&gt;next = p-&gt;next;</span><br><span class="line">        p-&gt;next-&gt;prev = p-&gt;prev;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        p-&gt;prev-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">free</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">DeleteSameList</span><span class="params">(LNode *node)</span></span><br><span class="line">&#123;</span><br><span class="line">    LNode p,head,q;</span><br><span class="line">    q = node;</span><br><span class="line">    p = node;</span><br><span class="line">    head = node;</span><br><span class="line">    <span class="keyword">while</span>(p != <span class="literal">NULL</span>)&#123;</span><br><span class="line">        q = p-&gt;next;</span><br><span class="line">        <span class="keyword">while</span>(q != <span class="literal">NULL</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;num == q-&gt;num)&#123;</span><br><span class="line">                <span class="keyword">if</span>(q-&gt;next != <span class="literal">NULL</span>)&#123;</span><br><span class="line">                    LNode ql = q;</span><br><span class="line">                    q = q-&gt;prev;</span><br><span class="line">                    ql-&gt;prev-&gt;next = ql-&gt;next;</span><br><span class="line">                    ql-&gt;next-&gt;prev = ql-&gt;prev;</span><br><span class="line">                    <span class="built_in">free</span>(ql);</span><br><span class="line">                    head-&gt;length--;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    q-&gt;prev-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">                    q = <span class="literal">NULL</span>;</span><br><span class="line">                    <span class="built_in">free</span>(q);</span><br><span class="line">                    head-&gt;length--;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            q = q-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    PrintList(node);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">DeleteKeyList</span><span class="params">(LNode *node)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入删除的Key值：\n&quot;</span>);</span><br><span class="line">    <span class="type">int</span> number = IsDataNum();</span><br><span class="line"></span><br><span class="line">    LNode p = node;</span><br><span class="line">    <span class="keyword">while</span>(p != <span class="literal">NULL</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;num == number)&#123;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;next != <span class="literal">NULL</span> &amp;&amp; p != node)&#123;<span class="comment">//判断是否为最后一个节点</span></span><br><span class="line">                LNode q = p;</span><br><span class="line">                p-&gt;next-&gt;prev = p-&gt;prev;</span><br><span class="line">                p = p-&gt;next;</span><br><span class="line">                p-&gt;prev-&gt;next = p;</span><br><span class="line">                p = p-&gt;prev;</span><br><span class="line">                <span class="built_in">free</span>(q);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(p != node)&#123;</span><br><span class="line">                p-&gt;prev-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">                p = <span class="literal">NULL</span>;</span><br><span class="line">                <span class="built_in">free</span>(p);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                node = p-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    PrintList(node);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">AddList</span><span class="params">(LNode *node)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;写完发现是单链表，我G了，不想写了，你看着办吧！&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">ExitList</span><span class="params">(LNode *node)</span></span><br><span class="line">&#123;</span><br><span class="line">    LNode p = node;</span><br><span class="line">    <span class="keyword">while</span>(p-&gt;next != <span class="literal">NULL</span>)&#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(p-&gt;prev);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">free</span>(p);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;已经成功释放所有的空间&quot;</span>);</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">IsLengthNum</span><span class="params">(LNode *node)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> ch[<span class="number">10</span>];</span><br><span class="line">    LNode p = node;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,ch);</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(ch[i<span class="number">-1</span>]!=<span class="string">&#x27;\0&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ch[i<span class="number">-1</span>] &lt; <span class="string">&#x27;0&#x27;</span> || ch[i<span class="number">-1</span>] &gt; <span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;输入格式错误\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;请0~%d之内的整数：&quot;</span>,p-&gt;length);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, ch);</span><br><span class="line">            i = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> number = atoi(ch);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> number;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Menu</span><span class="params">(LNode *node)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> ch[<span class="number">10</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,ch);</span><br><span class="line">    <span class="keyword">while</span>(ch[<span class="number">1</span>]!=<span class="string">&#x27;\0&#x27;</span> || ch[<span class="number">0</span>] &lt;= <span class="string">&#x27;0&#x27;</span> || ch[<span class="number">0</span>] &gt;= <span class="string">&#x27;6&#x27;</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请键入1~5的整数&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,ch);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">switch</span> (ch[<span class="number">0</span>])</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">        DeleteSameList(node);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">        DeleteKeyList(node);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">        AddList(node);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入想删除的节点位置\n&quot;</span>);</span><br><span class="line">        DeletePositionList(node,IsLengthNum(node));</span><br><span class="line">        PrintList(node);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line">        ExitList(node);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取一个整形，并判断该整形是否合法</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">IsDataNum</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> ch[<span class="number">10</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,ch);</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(ch[i<span class="number">-1</span>]!=<span class="string">&#x27;\0&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ch[i<span class="number">-1</span>] &lt; <span class="string">&#x27;0&#x27;</span> || ch[i<span class="number">-1</span>] &gt; <span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;输入格式错误\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;请输入-32768~32767之间的整数：&quot;</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, ch);</span><br><span class="line">            i = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> number = atoi(ch);</span><br><span class="line">    <span class="keyword">return</span> number;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    LNode *node = <span class="literal">NULL</span>;</span><br><span class="line">    node = (LNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line"></span><br><span class="line">    CreateList(node);<span class="comment">//创建链表</span></span><br><span class="line"></span><br><span class="line">    PrintList(node);<span class="comment">//打印链表</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;您已成功创建链表\n*******************************************\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入你想进行的操作\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1:删除重复的节点\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;2:删除节点中所有的key值\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;3:插入一个数\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;4:删除某个节点的数据\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;5:退出程序\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    Menu(node);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>课程作业</category>
        <category>数据结构作业</category>
        <category>第一次作业</category>
        <category>双链表(个人作死)</category>
      </categories>
      <tags>
        <tag>课程</tag>
        <tag>数据结构作业</tag>
        <tag>双链表</tag>
      </tags>
  </entry>
  <entry>
    <title>电子发票自动识别</title>
    <url>/2021/05/21/%E7%94%B5%E5%AD%90%E5%8F%91%E7%A5%A8%E8%87%AA%E5%8A%A8%E8%AF%86%E5%88%AB/</url>
    <content><![CDATA[<h3 id="关键词"><a href="#关键词" class="headerlink" title="关键词"></a>关键词</h3><p>智能发票扫描识别sdk软件接口发票智能识别 发票扫描识别 自动增票识别 发票识别接口 发票识别录入</p>
<h3 id="一、智能发票扫描识别sdk软件接口应用背景"><a href="#一、智能发票扫描识别sdk软件接口应用背景" class="headerlink" title="一、智能发票扫描识别sdk软件接口应用背景"></a>一、智能发票扫描识别sdk软件接口应用背景</h3><p>对于一些大型集团公司来讲，目前主要采用的依旧是分散式财务管理模式，而这就造成了企业财务管理效率不高，管理成本高等问题，同时也制约了集团企业发展战略的进行，所以需要建设FSSC财务共享中心。<br>而一个企业想建造FSSC财务共享中心，所面临的一大难题就是需要投入大量的人力、物力参与财务数据采集和处理工作，特别是财务票据的信息采集录入工作，更是难之又难、烦之又烦。</p>
<h3 id="二、智能发票扫描识别sdk软件接口方案介绍"><a href="#二、智能发票扫描识别sdk软件接口方案介绍" class="headerlink" title="二、智能发票扫描识别sdk软件接口方案介绍"></a>二、智能发票扫描识别sdk软件接口方案介绍</h3><p>针对企业财务部门繁重的原始票据信息采集和管理工作，国内智能识别领域推出了智能发票扫描识别sdk软件接口解决方案-奥普快票通，通过利用发票OCR扫描识别技术，批量采集增值税发票等票据的影像和信息，并输出excel表格和结构化的数据，与传统的人工录入数据相比，大大的减少了财务人员的工作量，提升了其工作效率。</p>
<p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@8e42e614e886c8b0c20cd869baf780c03f30caf1/2021/05/24/eaa7a14e50b21467ac522df58ec8c715.png"></p>
<h3 id="奥普快票通智能发票扫描识别sdk软件接口技术优势："><a href="#奥普快票通智能发票扫描识别sdk软件接口技术优势：" class="headerlink" title="奥普快票通智能发票扫描识别sdk软件接口技术优势："></a>奥普快票通智能发票扫描识别sdk软件接口技术优势：</h3><p>1、支持多种发票类型：增值税专用发票、增值税普通发票、电子发票PDF版、电子发票打印版。<br>2、支持多种文件格式：支持PDF、JPG、TIF、BMP等文件格式。<br>3、支持自定义编辑模板识别，可扩展火车票、财务凭证、银行对账单、定额发票等。<br>4、智能发票扫描识别sdk软件接口性能<br>（1）关键字段识别率＞98%；<br>（2）处理速度&gt;40张&#x2F;分钟；识别时间&lt;3秒；<br>5、产品形态可提供：发票专用扫描仪 + 快票通发票OCR识别客户端软件；服务器版；webservice私有云；移动端SDK；<br>6、支持各种识别场景，如扫描的发票、拍照的发票、粘贴在A4纸上的发票、高拍仪的发票等；</p>
<p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@622ce2893b30d7bfc69e527dee6511bfe48252b7/2021/05/24/7b5978262321d0175cebfc7029749700.png"></p>
<h3 id="三、智能发票扫描识别sdk软件接口应用领域"><a href="#三、智能发票扫描识别sdk软件接口应用领域" class="headerlink" title="三、智能发票扫描识别sdk软件接口应用领域"></a>三、智能发票扫描识别sdk软件接口应用领域</h3><p>1、信贷&#x2F;银行&#x2F;基金等行业：通过扫描识别增值税发票获取影像和发票数据，对企业的实际经营情况进行评估，减去大量人工整理企业资料的工作量。<br>2、拥有大量供应商的第三方平台：奥普快票通发票扫描识别解决方案可以缩减发票审核、录入、验证、流转这四个环节，极大地从中节省人力物力。<br>3、集团企业财务管理：增值税发票扫描识别获取影像和数据，并通过联网批量验真，便于企业财务发票管理、检索、对账、FSSC财务共享中心数据存储等。</p>
<p>More info: <a href="https://www.yuque.com/docs/share/924a3a69-5813-47e6-a6ea-75fec486e388#">more</a></p>
<hr>
<h2 id="人工智能简述"><a href="#人工智能简述" class="headerlink" title="人工智能简述"></a>人工智能简述</h2><h3 id="发展历史"><a href="#发展历史" class="headerlink" title="发展历史"></a>发展历史</h3><p>机器学习是人工智能( artificial intelligence)研究发展到一定阶段的必然产物.二十世纪五十年代到七十年代初,人工智能研究处于“推理期”,那时人们以为只要能赋予机器逻辑推理能力,机器就能具有智能.这一阶段的代表性工作主要有A. Newell和H. Simon的“逻辑理论家”( Logic Theorist)程序以及此后的“通用问题求解”( General Problem Solving)程序等,这些工作在当时取得了令人振奋的结果.例如,“逻辑理论家”程序在1952年证明了著名数学家罗素和怀特海的名著《数学原理》中的38条定理,在1963年证明了全部52 条定理,特别值得一提的是,定理2.85甚至比罗素和怀特海证明得更巧妙,A Newell 7和H. Simon因为这方面的工作获得了1975年图灵奖,然而,随着研究向前发展,人们逐渐认识到,仅具有逻辑推理能力是远远实现不了人工智能的E.A. Feigenbaum等人认为,要使机器具有智能,就必须设法使机器拥有知识在他们的倡导下,从二十世纪七十年代中期开始,人工智能研究进入了“知识期”、在这一时期,大量专家系统问世,在很多应用领域取得了大量成果.E.A Feigenbaum作为“知识工程”之父在1994年获得图灵奖.但是,人们逐渐认识到,专家系统面临“知识工程瓶颈”,简单地说,就是由人来把知识总结出来再教给计算机是相当困难的.于是,一些学者想到,如果机器自己能够学习知识该多好! 事实上,图灵在1950年关于图灵测试的文章中,就曾提到了机器学习的可能;二十世纪五十年代初已有机器学习的相关研究,例如A. Samuel著名的跳棋程序.五十年代中后期,基于神经网络的“连接主义”( connectionism)学习开始出现,代表性工作有F. Rosenblatt的感知机( Perceptron)、B. Widrow的Adaline等、在六七十年代,基于逻辑表示的“符号主义”( symbolism)学习技术蓬勃发展,代表性工作有P. Winston的“结构学习系统”、R.S. Michalski 等人的“基于逻辑的归纳学习系统”、E.B.Hunt等人的“概念学习系统”等;以决策理论为基础的学习技术以及强化学习技术等也得到发展,代表性工作有N.J. Nilson的“学习机器”等;二十多年后红极一时的统计学习理论的一些奠基性结果也是在这个时期取得的。</p>
<h3 id="应用现状"><a href="#应用现状" class="headerlink" title="应用现状"></a>应用现状</h3><p>在过去二十年中,人类收集、存储、传输、处理数据的能力取得了飞速提升,人类社会的各个角落都积累了大量数据,亟需能有效地对数据进行分析利用的计算机算法,而机器学习恰顺应了大时代的这个迫切需求,因此该学科领域很自然地取得巨大发展、受到广泛关注.<br>今天,在计算机科学的诸多分支学科领域中,无论是多媒体、图形学,还是网络通信、软件工程,乃至体系結构、芯片设计,都能找到机器学习技术的身影,尤其是在计算机视觉、自然语言处理等”计算机应用技术”领域.机器学习已成为最重要的技术进步源泉之一.<br>机器学习还为许多交叉学科提供了重要的技术支撑.例如,”生物信息学”试图利用信息技术来研究生命现象和规律,而基因组计划的实施和基因苗物的美好愿景让人们为之心潮潔屏.生物信息学研究涉及从”生命现象”到”规律发现”的整个过程,其间必然包括数据获取、数据管理、数据分祈、仿真实验等环节,而”数据分析”恰是机器学习技术的舞台,各种机器学习技术已经在这个舞台上大放异彩.</p>
<p>事实上,随着科学研究的基本手段从传统的“理论+实验”走向现在的“理论+实验+计算”,乃至出现“数据科学”这样的提法,机器学习的重要性日趋显著,因为“计算”的目的往往是数据分析,而数据科学的核心也恰是通过分析数据来获得价值.若要列出目前计算机科学技术中最活跃、最受瞩目的研究分支,那么机器学习必居其中.2001年,美国NASA-JPL的科学家在 Science 3杂志上专门撰文 Mjolsness and Decoste,200]指出,机器学习对科学研究的整个过程正起到越来越大的支撑作用,其进展对科技发展意义重大2003年, DARPA启动PAL计划,将机器学习的重要性上升到美国国家安全的高度来考虑众所周知,美国最尖端科技的研究通常是由NASA和 DARPA推进的,而这两大机构不约而同地强调机器学习的重要性,其意义不言而喻2006年,卡耐基梅隆大学宣告成立世界上第一个“机器学习系”,机器学习领域寞基人之一T. Mitchell教授出任首任系主任.2012年3月,美国奥巴马政府启动“大数据研究与发展计划”,美国国家科学基金会旋即在加州大学伯克利分校启动加强计划,强调要深入研究和整合大数据时代的三大关键技术机器学习、云计算、众包( crowdsourcing).显然,机器学习在大数据时代是必不可少的核心技术,道理很简单:收集、存储、传输、管理大数据的目的,是为了“利用”大数据,而如果没有机器学习技术分析数据,则“利用”无从谈起谈到对数据进行分析利用,很多人会想到“数据挖掘”( data mining),这里简单探讨一下数据挖掘与机器学习的联系.数据挖掘领域在二十世纪九十年代形成,它受到很多学科领域的影响,其中数据库、机器学习、统计学无疑影响最大Zhou,2003].数据挖掘是从海量数据中发掘知识,这就必然涉及对“海量数据”的管理和分析.大体来说,数据库领域的研究为数据挖掘提供数据管理技术,而机器学习和统计学的研究为数据挖掘提供数据分析技术.由于统计学界的研究成果通常需要经由机器学习研究来形成有效的学习算法,之后再进入数据挖掘领域,因此从这个意义上说,统计学主要是通过机器学习对数据挖掘发挥影响,而机器学习领域和数据库领域则是数据挖掘的两大支撑</p>
<h3 id="模型评估与选择"><a href="#模型评估与选择" class="headerlink" title="模型评估与选择"></a>模型评估与选择</h3><h3 id="经验误差与过拟合"><a href="#经验误差与过拟合" class="headerlink" title="经验误差与过拟合"></a>经验误差与过拟合</h3><p>通常我们把分类错误的样本数占样本总数的比例称为”错误率”(error rate),即如果在m个样本中有a个样本分类错误,则错误率E &#x3D;: a&#x2F;m;相应的, 1 _ a&#x2F;m称为”精度”(MC皿My),即”精度&#x3D;1-错误率”.更一般地,我们把学习器的实际预测输出与样本的真实输出之间的差异称为”误差”(error), 学习器在训练集上的误差称为”训练误差”(training enor)或”经验误差”(empirical error),在新样本上的误差称为”泛化误差”(generalization error).显然,我们希望得到泛化误差小的学习器.然而,我们事先并不知道新样本是计么样,实际能做的是努力使经验误差最小化.在很多情况下,我们可以学得一个经验误差很小、在训练集上表现很好的学习器,例如甚至对所有训练样本都分类正确,即分类错误率为零,分类精度为100%,但这是不是我们想要的学习器呢?遗憾的是,这样的学巧器在多数情况下都不好.<br>我们实际希望的,是在新样本上能表现得很好的学习器.为了达到这个目的,应该从训练样本中尽可能学出适用于所有潜在样本的”普遍规律”,这样才能在遇到新样本时做出正确的判别.然而,当学习器把训练样本学得”太好”了的时候,很可能已经把训练样本自身的一些特点当作了所有潜在样本都会具有的一般性质,这样就会导致泛化性能下降.这种现象在机器学习中称为”过拟合”(overfitting). 与”过拟合”相对的是”欠拟合”(underfitting),这是指对训练样本的一般性质尚未学好.图2.1给出了关于过拟合与欠拟合的一个便于直观理解的类比.</p>
<p>有多种因素可能导致过拟合,其中最常见的情况是由于学习能力过于强大, 以至于把训练样本所包含的不太一般的特性都学到了,而欠拟合则通常是由于学习能力低下而造成的.欠拟合比较容易克服,例如在决策树学习中扩展分支、在神经网络学习中增加训练轮数等,而过拟合则很麻烦.在后面的学习中我们将看到,过拟合是机器学习面临的关键障碍,各类学习算法都必然带有一些针对过拟合的措施;然而必须认识到,过拟合是无法彻底避免的,我们所能做的只是”缓解”,或者说减小其风险.关于这一点,可大致这样理解:</p>
]]></content>
      <categories>
        <category>人工智能应用</category>
        <category>智能发票</category>
      </categories>
      <tags>
        <tag>智能发票扫描识别</tag>
        <tag>sdk软件接口</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构大作业2-电梯</title>
    <url>/2021/12/12/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%A7%E4%BD%9C%E4%B8%9A2-%E7%94%B5%E6%A2%AF/</url>
    <content><![CDATA[<h1 id="文件下载"><a href="#文件下载" class="headerlink" title="文件下载"></a>文件下载</h1><p><a href="Elevator.zip">点击下载</a></p>
<p>运行文件为解压后的Elevator.exe</p>
<p><img src="https://i.bmp.ovh/imgs/2021/12/5e44d318a8fd3804.png"></p>
<h2 id="如果您发现无法执行，程序显示无法找到V142的生成工具"><a href="#如果您发现无法执行，程序显示无法找到V142的生成工具" class="headerlink" title="如果您发现无法执行，程序显示无法找到V142的生成工具"></a>如果您发现无法执行，程序显示无法找到V142的生成工具</h2><p><a href="https://blog.csdn.net/weixin_39956356/article/details/103112448">请点击这里</a></p>
<h1 id="源代码展示"><a href="#源代码展示" class="headerlink" title="源代码展示"></a>源代码展示</h1><h2 id="dianTi-h"><a href="#dianTi-h" class="headerlink" title="dianTi.h"></a>dianTi.h</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;conio.h&gt;</span><span class="comment">//控制台的一些文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//颜色的定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RED <span class="string">&quot;\033[0;32;31m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NONE <span class="string">&quot;\033[m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> YELLOW <span class="string">&quot;\033[44;34m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BLUE <span class="string">&quot;\033[43;34m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GREEN <span class="string">&quot;\033[40;32m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PURPLE <span class="string">&quot;\033[43;35m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DGREEN <span class="string">&quot;\033[40;36m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WHITE <span class="string">&quot;\033[46;37m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OBLUE <span class="string">&quot;\033[40;34m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ORED <span class="string">&quot;\033[40;31m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OPURPLE <span class="string">&quot;\033[40;35m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OWHITE <span class="string">&quot;\033[47;37m&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//基本架构函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GotoXY</span><span class="params">(<span class="type">int</span>, <span class="type">int</span>)</span>;  <span class="comment">//光标定位函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Hide</span><span class="params">()</span>;<span class="comment">//隐藏光标函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">printElevator</span><span class="params">()</span>;<span class="comment">//打印电梯主函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">clearFormerElevator</span><span class="params">()</span>;<span class="comment">//将之前的电梯去干净</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">printPlatform</span><span class="params">()</span>; <span class="comment">//打印平台函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">kaimen</span><span class="params">(<span class="type">int</span>)</span>;  <span class="comment">//开门函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">guanmen</span><span class="params">(<span class="type">int</span>)</span>; <span class="comment">//关门函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">chushihua</span><span class="params">()</span>; <span class="comment">//初始化相应的一些参数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//附加函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">absto1</span><span class="params">(<span class="type">int</span>)</span>; <span class="comment">//正负转化+-1</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">cengLocation</span><span class="params">(<span class="type">int</span>)</span>; <span class="comment">//层的定位函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">haveshangXingButton</span><span class="params">(<span class="type">int</span>, <span class="type">int</span>)</span>; <span class="comment">//判断上行按钮在两个整数中有无1的值</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">havexiaXingButton</span><span class="params">(<span class="type">int</span>, <span class="type">int</span>)</span>; <span class="comment">//判断下行按钮在两个整数中有无1的值</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">haveTargetButton</span><span class="params">(<span class="type">int</span>, <span class="type">int</span>)</span>; <span class="comment">//判断电梯两个整数间有无要到达的楼层</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">chuLiButton</span><span class="params">(<span class="type">int</span>, <span class="type">int</span>, <span class="type">int</span>)</span>; <span class="comment">//将每个楼层按下的button进行可视化处理(方向1上-1下，楼层，按钮1上0下上下)</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">createPeople</span><span class="params">()</span>; <span class="comment">//对人创建的处理</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">movePeople</span><span class="params">()</span>; <span class="comment">//对人物移动的处理</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">scanPeopleStruct</span><span class="params">()</span>;<span class="comment">//扫描所有的人空间，寻找到最近的一个没有使用的人空间如果没有返回0</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">isPaiDui</span><span class="params">(<span class="type">int</span>)</span>; <span class="comment">//判断前面是否有人在排队</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">InOutElevator</span><span class="params">()</span>; <span class="comment">//出入电梯函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">refreshZTL</span><span class="params">()</span>; <span class="comment">//电梯状态栏的刷新</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">countPeopleInElevator</span><span class="params">()</span>; <span class="comment">//电梯内人数的计算</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">countPeopleToFloorElevator</span><span class="params">(<span class="type">int</span>)</span>; <span class="comment">//电梯内前往每层楼人数的总和</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//模块的各个函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Menu</span><span class="params">()</span>;      <span class="comment">//主菜单函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//下面是开始游戏函数部分</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Start</span><span class="params">()</span>;       <span class="comment">//开始游戏</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//下面是游戏中一些全局变量</span></span><br><span class="line"><span class="type">int</span> lowFloor; <span class="comment">//定义楼层的个数（&gt;=2）</span></span><br><span class="line"><span class="type">int</span> cengGao; <span class="comment">//定义楼层高度</span></span><br><span class="line"><span class="type">int</span> diantiWidth; <span class="comment">//定义电梯宽度</span></span><br><span class="line"><span class="type">int</span> platformWidth; <span class="comment">//定义平台宽度</span></span><br><span class="line"><span class="type">int</span> nowceng; <span class="comment">//定于电梯当前所在的楼层</span></span><br><span class="line"><span class="type">int</span> dianTizhuangTai; <span class="comment">//定义当前天梯是上行1还是下行-1</span></span><br><span class="line"><span class="type">int</span> target[<span class="number">6</span>]; <span class="comment">//定义目标楼层 1表示该楼层电梯内有乘客需要抵达</span></span><br><span class="line"><span class="type">int</span> nowLocation; <span class="comment">//定义当前图片所在位置即乘上cengGao的值</span></span><br><span class="line"><span class="type">int</span> shangXingButton[<span class="number">6</span>];<span class="comment">//上行电梯按钮状态1表示亮起</span></span><br><span class="line"><span class="type">int</span> xiaXingButton[<span class="number">6</span>];<span class="comment">//下行电梯按钮状态1表示亮起</span></span><br><span class="line"><span class="type">int</span> peopleNumMax;  <span class="comment">//定义人数的最大值</span></span><br></pre></td></tr></table></figure>

<h2 id="work-c"><a href="#work-c" class="headerlink" title="work.c"></a>work.c</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;dianTi.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">lowFloor = <span class="number">4</span>; <span class="comment">//暂定楼层为5层</span></span><br><span class="line">cengGao = <span class="number">10</span>; <span class="comment">//暂定层高10</span></span><br><span class="line">diantiWidth = <span class="number">15</span>;  <span class="comment">//暂定电梯宽度为15</span></span><br><span class="line">platformWidth = <span class="number">25</span>; <span class="comment">//暂定平台宽度为25</span></span><br><span class="line">nowceng = <span class="number">1</span>; <span class="comment">//刚开始默认楼层为1</span></span><br><span class="line">peopleNumMax = <span class="number">10</span>; <span class="comment">//定义最多的人数为10个人</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">PeopleStruct</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> isInUse;  <span class="comment">//定义该人的空间是否在使用中，如果在使用，则为1 否则为0</span></span><br><span class="line">    <span class="type">int</span> weight;</span><br><span class="line">    <span class="type">int</span> positionx; <span class="comment">//轴所在的位置</span></span><br><span class="line">    <span class="type">int</span> nowFloor; <span class="comment">//当前楼层</span></span><br><span class="line">    <span class="type">int</span> targetFloor; <span class="comment">//目标楼层</span></span><br><span class="line">    <span class="type">int</span> In_or_Out;<span class="comment">//往电梯进入为1 出电梯为-1 不动为0</span></span><br><span class="line">    <span class="type">int</span> isInElevator;  <span class="comment">//判断是否在电梯中</span></span><br><span class="line">&#125;People;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PeopleList</span>&#123;</span></span><br><span class="line">    People people[<span class="number">10</span>];</span><br><span class="line">&#125;peoplelist;</span><br><span class="line"></span><br><span class="line"><span class="comment">//光标定位函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GotoXY</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    HANDLE hout;</span><br><span class="line">    COORD cor;</span><br><span class="line">    hout = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">    cor.X = x;</span><br><span class="line">    cor.Y = y;</span><br><span class="line">    SetConsoleCursorPosition(hout, cor);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//隐藏光标</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Hide</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    HANDLE hout = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">    CONSOLE_CURSOR_INFO cor_info = &#123; <span class="number">1</span>, <span class="number">0</span> &#125;;</span><br><span class="line">    SetConsoleCursorInfo(hout, &amp;cor_info);<span class="comment">//隐藏光标</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//菜单栏目</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Menu</span><span class="params">()</span> &#123;</span><br><span class="line">    Hide();</span><br><span class="line">    GotoXY(<span class="number">36</span>, <span class="number">12</span>);   <span class="comment">//定位光标的位置</span></span><br><span class="line">    <span class="built_in">printf</span>(ORED<span class="string">&quot;欢迎来到电梯小游戏&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1. 开始游戏&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;2. 设置&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;退出游戏请输入     0&quot;</span>NONE);</span><br><span class="line">    Hide();    <span class="comment">//隐藏光标</span></span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="type">int</span> result = <span class="number">1</span>;</span><br><span class="line">    ch = _getch();</span><br><span class="line">    <span class="keyword">switch</span> (ch)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>: result = <span class="number">1</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>: result = <span class="number">2</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;0&#x27;</span>: result = <span class="number">0</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:  result = <span class="number">5</span>; <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);  <span class="comment">//清空当前页面</span></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化一些参数，包括电梯的状态以及电梯运行的状况</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">chushihua</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= lowFloor; i++) &#123;</span><br><span class="line">        shangXingButton[i] = <span class="number">0</span>;</span><br><span class="line">        xiaXingButton[i] = <span class="number">0</span>;</span><br><span class="line">        target[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        peoplelist.people[i].isInUse = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    nowLocation = cengLocation(nowceng);</span><br><span class="line">    <span class="comment">//zhuangTai = 1; //定义刚开始的状态是上行</span></span><br><span class="line">    refreshZTL();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//对人创建的处理</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">createPeople</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> suijiNum = (<span class="type">int</span>)rand() % <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">if</span> (suijiNum &lt;= <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="type">int</span> position = scanPeopleStruct();</span><br><span class="line">        <span class="keyword">if</span> (position)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> nowFloor = (<span class="type">int</span>)rand() % (lowFloor) + <span class="number">1</span>;</span><br><span class="line">            <span class="type">int</span> targetFloor = (<span class="type">int</span>)rand() % (lowFloor) + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (targetFloor == nowFloor) &#123;</span><br><span class="line">                targetFloor = (<span class="type">int</span>)rand() % (lowFloor)+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">int</span> weight = (<span class="type">int</span>)rand()%<span class="number">40</span> + <span class="number">40</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//下面就开始对数据进行赋值</span></span><br><span class="line">            peoplelist.people[position - <span class="number">1</span>].isInUse = <span class="number">1</span>;</span><br><span class="line">            peoplelist.people[position - <span class="number">1</span>].nowFloor = nowFloor;</span><br><span class="line">            peoplelist.people[position - <span class="number">1</span>].targetFloor = targetFloor;</span><br><span class="line">            peoplelist.people[position - <span class="number">1</span>].In_or_Out = <span class="number">1</span>;</span><br><span class="line">            peoplelist.people[position - <span class="number">1</span>].positionx = diantiWidth * <span class="number">3</span> + <span class="number">14</span>;</span><br><span class="line">            peoplelist.people[position - <span class="number">1</span>].isInElevator = <span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">movePeople</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> positiony;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//将每个需要移动的人移动一下</span></span><br><span class="line">        <span class="keyword">if</span> (peoplelist.people[i].In_or_Out == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (isPaiDui(i)) &#123;</span><br><span class="line">            peoplelist.people[i].In_or_Out = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">//人到电梯门前的按按钮处理</span></span><br><span class="line">            chuLiButton(absto1(peoplelist.people[i].targetFloor - peoplelist.people[i].nowFloor), peoplelist.people[i].nowFloor, <span class="number">1</span>);</span><br><span class="line">            refreshZTL();</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (peoplelist.people[i].isInUse) &#123;</span><br><span class="line">            positiony = (lowFloor - peoplelist.people[i].nowFloor + <span class="number">1</span>) * cengGao - <span class="number">1</span>;</span><br><span class="line">            GotoXY(peoplelist.people[i].positionx, positiony);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            GotoXY(peoplelist.people[i].positionx, positiony<span class="number">-1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            peoplelist.people[i].positionx = peoplelist.people[i].positionx - peoplelist.people[i].In_or_Out;</span><br><span class="line">            GotoXY(peoplelist.people[i].positionx, positiony);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;!&quot;</span>);</span><br><span class="line">            GotoXY(peoplelist.people[i].positionx, positiony<span class="number">-1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, peoplelist.people[i].targetFloor);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//人到达电梯后离开的处理操作</span></span><br><span class="line">        <span class="keyword">if</span> (peoplelist.people[i].positionx == diantiWidth * <span class="number">3</span> + <span class="number">16</span>) &#123;</span><br><span class="line">            peoplelist.people[i].isInUse = <span class="number">0</span>;</span><br><span class="line">            positiony = (lowFloor - peoplelist.people[i].nowFloor + <span class="number">1</span>) * cengGao - <span class="number">1</span>;</span><br><span class="line">            GotoXY(peoplelist.people[i].positionx, positiony);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            GotoXY(peoplelist.people[i].positionx, positiony<span class="number">-1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断前面是否有人在排队:0 没有人排队:1</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">isPaiDui</span><span class="params">(<span class="type">int</span> peopleNum)</span> &#123;</span><br><span class="line">    <span class="type">int</span> nowFloor = peoplelist.people[peopleNum].nowFloor;</span><br><span class="line">    <span class="type">int</span> positionxNext = peoplelist.people[peopleNum].positionx - peoplelist.people[peopleNum].In_or_Out;</span><br><span class="line">    <span class="type">int</span> positionxi;</span><br><span class="line">    <span class="type">int</span> iFloor;</span><br><span class="line">    <span class="comment">//处理到达墙但是门没开的情况</span></span><br><span class="line">    <span class="keyword">if</span> (peoplelist.people[peopleNum].positionx == <span class="number">2</span> * diantiWidth + <span class="number">6</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        positionxi = peoplelist.people[i].positionx;</span><br><span class="line">        iFloor = peoplelist.people[i].nowFloor;</span><br><span class="line">        <span class="keyword">if</span> (peoplelist.people[i].isInUse &amp;&amp; (nowFloor == iFloor) &amp;&amp; (peoplelist.people[i].In_or_Out == <span class="number">0</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (positionxi == positionxNext) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 扫描所有的人空间，寻找到最近的一个没有使用的人空间如果没有返回0</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">scanPeopleStruct</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (peoplelist.people[i].isInUse == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> i+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//电梯内人数计算</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">countPeopleInElevator</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> number = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; peopleNumMax; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (peoplelist.people[i].isInUse &amp;&amp; peoplelist.people[i].isInElevator) &#123;</span><br><span class="line">            number++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> number;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//电梯内前往每层楼人数的总和</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">countPeopleToFloorElevator</span><span class="params">(targetFloor)</span> &#123;</span><br><span class="line">    <span class="type">int</span> number = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; peopleNumMax; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (peoplelist.people[i].isInUse &amp;&amp; peoplelist.people[i].isInElevator) &#123;</span><br><span class="line">            <span class="keyword">if</span> (peoplelist.people[i].targetFloor == targetFloor) &#123;</span><br><span class="line">                number++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> number;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//电梯状态栏的刷新</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">refreshZTL</span><span class="params">()</span> &#123;</span><br><span class="line">    GotoXY(diantiWidth * <span class="number">3</span> + <span class="number">24</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;电梯内状态：&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (dianTizhuangTai == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;停止运行&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (dianTizhuangTai == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;电梯上行&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (dianTizhuangTai == <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;电梯下行&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    GotoXY(diantiWidth * <span class="number">3</span> + <span class="number">24</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;电梯内按钮状态为：&quot;</span>);</span><br><span class="line">    GotoXY(diantiWidth * <span class="number">3</span> + <span class="number">28</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= lowFloor; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (target[i] == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(BLUE<span class="string">&quot;%d&quot;</span>NONE, i);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    GotoXY(diantiWidth * <span class="number">3</span> + <span class="number">24</span>, <span class="number">4</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;电梯内人数为：%d&quot;</span>, countPeopleInElevator());</span><br><span class="line"></span><br><span class="line">    GotoXY(diantiWidth * <span class="number">3</span> + <span class="number">24</span>, <span class="number">6</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;电梯内前往每层楼的人数:&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= lowFloor; i++) &#123;</span><br><span class="line">        GotoXY(diantiWidth * <span class="number">3</span> + <span class="number">26</span>, <span class="number">6</span> + i);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;前往%d楼的人数为：%d&quot;</span>, i, countPeopleToFloorElevator(i));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//开始游戏</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Start</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    chushihua();</span><br><span class="line">    printPlatform();</span><br><span class="line">    printElevator();</span><br><span class="line">    dianTizhuangTai = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> timeCount = <span class="number">1</span>; <span class="comment">//时间单元，1~100用于分配速度</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        timeCount++;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (timeCount % <span class="number">4</span> == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            nowLocation = nowLocation - dianTizhuangTai;</span><br><span class="line">            <span class="keyword">if</span> (nowLocation % cengGao == <span class="number">0</span>) &#123;</span><br><span class="line">                nowceng = lowFloor - (nowLocation / cengGao);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (dianTizhuangTai != <span class="number">0</span>) &#123;</span><br><span class="line">                printElevator();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (dianTizhuangTai == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (haveshangXingButton(nowceng, lowFloor) || havexiaXingButton(nowceng + <span class="number">1</span>, lowFloor) || (haveTargetButton(nowceng, lowFloor) &amp;&amp; nowceng != lowFloor)) &#123;</span><br><span class="line">                <span class="comment">//状态保持不变</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (haveshangXingButton(<span class="number">1</span>, nowceng) || havexiaXingButton(<span class="number">1</span>, nowceng) || haveTargetButton(<span class="number">1</span>, nowceng)) &#123;</span><br><span class="line">                <span class="comment">//状态发生改变</span></span><br><span class="line">                dianTizhuangTai = <span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                dianTizhuangTai = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (dianTizhuangTai == <span class="number">-1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (haveshangXingButton(<span class="number">1</span>, nowceng - <span class="number">1</span>) || havexiaXingButton(<span class="number">1</span>, nowceng) || (haveTargetButton(<span class="number">1</span>, nowceng) &amp;&amp; nowceng != <span class="number">1</span>)) &#123;</span><br><span class="line">                <span class="comment">//状态保持不变</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (haveshangXingButton(nowceng, lowFloor) || havexiaXingButton(nowceng + <span class="number">1</span>, lowFloor) || haveTargetButton(nowceng, lowFloor)) &#123;</span><br><span class="line">                <span class="comment">//状态发生改变</span></span><br><span class="line">                dianTizhuangTai = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                dianTizhuangTai = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (dianTizhuangTai == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (haveshangXingButton(nowceng, lowFloor) || havexiaXingButton(nowceng + <span class="number">1</span>, lowFloor) || haveTargetButton(nowceng, lowFloor)) &#123;</span><br><span class="line">                dianTizhuangTai = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (haveshangXingButton(<span class="number">1</span>, nowceng) || havexiaXingButton(<span class="number">1</span>, nowceng) || haveTargetButton(<span class="number">1</span>, nowceng)) &#123;</span><br><span class="line">                dianTizhuangTai = <span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (nowLocation % cengGao == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (shangXingButton[nowceng] == <span class="number">1</span> || xiaXingButton[nowceng] == <span class="number">1</span> || target[nowceng] == <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (target[nowceng] == <span class="number">1</span>) &#123;</span><br><span class="line">                    target[nowceng] = <span class="number">0</span>;</span><br><span class="line">                    chuLiButton(dianTizhuangTai, nowceng, <span class="number">0</span>);</span><br><span class="line">                    kaimen(nowceng);</span><br><span class="line">                    InOutElevator();<span class="comment">//人进出电梯</span></span><br><span class="line">                    refreshZTL();</span><br><span class="line">                    guanmen(nowceng);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span> (dianTizhuangTai == <span class="number">1</span> &amp;&amp; shangXingButton[nowceng] == <span class="number">1</span>) &#123;</span><br><span class="line">                    chuLiButton(dianTizhuangTai, nowceng, <span class="number">0</span>);</span><br><span class="line">                    kaimen(nowceng);</span><br><span class="line">                    InOutElevator();<span class="comment">//人进出电梯</span></span><br><span class="line">                    refreshZTL();</span><br><span class="line">                    guanmen(nowceng);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span> (dianTizhuangTai == <span class="number">-1</span> &amp;&amp; xiaXingButton[nowceng] == <span class="number">1</span>) &#123;</span><br><span class="line">                    chuLiButton(dianTizhuangTai, nowceng, <span class="number">0</span>);</span><br><span class="line">                    kaimen(nowceng);</span><br><span class="line">                    InOutElevator();<span class="comment">//人进出电梯</span></span><br><span class="line">                    refreshZTL();</span><br><span class="line">                    guanmen(nowceng);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        createPeople(); <span class="comment">//定义人的创建过程</span></span><br><span class="line">        movePeople();  <span class="comment">//对人物移动的处理</span></span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">       <span class="keyword">if</span> (timeCount == <span class="number">100</span>)</span><br><span class="line">       &#123;</span><br><span class="line">           timeCount = <span class="number">0</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       Sleep(<span class="number">50</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//出入电梯函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">InOutElevator</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (peoplelist.people[i].In_or_Out == <span class="number">0</span> &amp;&amp; peoplelist.people[i].nowFloor == nowceng &amp;&amp; peoplelist.people[i].isInElevator == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (dianTizhuangTai == absto1(peoplelist.people[i].targetFloor - peoplelist.people[i].nowFloor)) &#123;</span><br><span class="line">                <span class="type">int</span> positiony = (lowFloor - peoplelist.people[i].nowFloor + <span class="number">1</span>) * cengGao - <span class="number">1</span>;</span><br><span class="line">                GotoXY(peoplelist.people[i].positionx, positiony);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">                GotoXY(peoplelist.people[i].positionx, positiony - <span class="number">1</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">                peoplelist.people[i].positionx = <span class="number">6</span>;</span><br><span class="line">                target[peoplelist.people[i].targetFloor] = <span class="number">1</span>;</span><br><span class="line">                peoplelist.people[i].isInElevator = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (peoplelist.people[i].isInElevator == <span class="number">1</span> &amp;&amp; peoplelist.people[i].targetFloor == nowceng) &#123;</span><br><span class="line">            <span class="type">int</span> positiony = (lowFloor - peoplelist.people[i].nowFloor + <span class="number">1</span>) * cengGao - <span class="number">1</span>;</span><br><span class="line">            peoplelist.people[i].positionx = diantiWidth * <span class="number">3</span> + <span class="number">6</span>;</span><br><span class="line">            peoplelist.people[i].In_or_Out = <span class="number">-1</span>;</span><br><span class="line">            peoplelist.people[i].nowFloor = nowceng;</span><br><span class="line">            peoplelist.people[i].isInElevator = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印电梯主函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">printElevator</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Hide();</span><br><span class="line">    clearFormerElevator();</span><br><span class="line">    GotoXY(<span class="number">0</span>, nowLocation); <span class="comment">//电梯上框</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= diantiWidth; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(DGREEN<span class="string">&quot;██&quot;</span>NONE);</span><br><span class="line">    &#125;</span><br><span class="line">    GotoXY(<span class="number">0</span>, nowLocation + <span class="number">10</span>);<span class="comment">//电梯下框</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= diantiWidth; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(DGREEN<span class="string">&quot;██&quot;</span>NONE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">10</span>; i++) &#123;<span class="comment">//电梯门</span></span><br><span class="line">        GotoXY(diantiWidth * <span class="number">2</span>, i + nowLocation);</span><br><span class="line">        <span class="built_in">printf</span>(DGREEN<span class="string">&quot;██&quot;</span>NONE);</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="comment">//内部人员;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//清理之前的电梯</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">clearFormerElevator</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= lowFloor * cengGao; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= diantiWidth*<span class="number">2</span>; j++) &#123;</span><br><span class="line">            GotoXY(j, i);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印平台函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">printPlatform</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//平台打印</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= cengGao * lowFloor; i = i + cengGao) &#123;</span><br><span class="line">        GotoXY(diantiWidth * <span class="number">2</span> + <span class="number">4</span>, i); <span class="comment">//平台上框</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">16</span>; i++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(PURPLE<span class="string">&quot;██&quot;</span>NONE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//造平台门</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= cengGao * lowFloor; i++) &#123;</span><br><span class="line">        GotoXY(diantiWidth * <span class="number">2</span> + <span class="number">4</span>, i); </span><br><span class="line">        <span class="built_in">printf</span>(YELLOW<span class="string">&quot;██&quot;</span>NONE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">kaimen</span><span class="params">(<span class="type">int</span> ceng)</span> &#123;</span><br><span class="line">    <span class="type">int</span> dingweiY = (lowFloor - ceng) * cengGao;<span class="comment">//定义楼层上框</span></span><br><span class="line">    <span class="comment">//平台门开启</span></span><br><span class="line">    Sleep(<span class="number">200</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">9</span>; i &gt; <span class="number">2</span>; i--) &#123;</span><br><span class="line">        <span class="comment">//平台门开启</span></span><br><span class="line">        GotoXY(diantiWidth * <span class="number">2</span> + <span class="number">4</span>, i + dingweiY);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">        <span class="comment">//电梯门开启</span></span><br><span class="line">        GotoXY(diantiWidth * <span class="number">2</span>, i + dingweiY);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    GotoXY(diantiWidth * <span class="number">2</span> + <span class="number">2</span>, <span class="number">10</span> + dingweiY);</span><br><span class="line">    <span class="built_in">printf</span>(PURPLE<span class="string">&quot;██&quot;</span>NONE);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">guanmen</span><span class="params">(<span class="type">int</span> ceng)</span> &#123;</span><br><span class="line">    <span class="type">int</span> dingweiY = (lowFloor - ceng) * cengGao;<span class="comment">//定义楼层上框</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="comment">//平台门关闭</span></span><br><span class="line">        GotoXY(diantiWidth * <span class="number">2</span> + <span class="number">4</span>, i + dingweiY);</span><br><span class="line">        <span class="built_in">printf</span>(YELLOW<span class="string">&quot;██&quot;</span>NONE);</span><br><span class="line">        <span class="comment">//电梯门关闭</span></span><br><span class="line">        GotoXY(diantiWidth * <span class="number">2</span>, i + dingweiY);</span><br><span class="line">        <span class="built_in">printf</span>(DGREEN<span class="string">&quot;██&quot;</span>NONE);</span><br><span class="line">        Sleep(<span class="number">200</span>);</span><br><span class="line">        GotoXY(diantiWidth * <span class="number">2</span> + <span class="number">2</span>, <span class="number">10</span> + dingweiY);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="elevator-main-c"><a href="#elevator-main-c" class="headerlink" title="elevator_main.c"></a>elevator_main.c</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;dianTi.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	system(<span class="string">&quot;title 电梯&quot;</span>);</span><br><span class="line">	<span class="type">int</span> flag = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span> (flag) &#123;</span><br><span class="line">		system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">		<span class="keyword">switch</span> (Menu())</span><br><span class="line">		&#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">			Start();</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">			flag = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">default</span>:</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="addition-c"><a href="#addition-c" class="headerlink" title="addition.c"></a>addition.c</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;dianTi.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//正负转化+-1</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">absto1</span><span class="params">(<span class="type">int</span> i)</span> &#123;</span><br><span class="line">	<span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(i &lt; <span class="number">0</span>)&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">cengLocation</span><span class="params">(<span class="type">int</span> i)</span> &#123;</span><br><span class="line">	<span class="keyword">return</span> (lowFloor - i) * cengGao;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断上行按钮在两个整数中有无1的值</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">haveshangXingButton</span><span class="params">(<span class="type">int</span> min, <span class="type">int</span> max)</span> &#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = min; i &lt;= max; i++) &#123;</span><br><span class="line">		<span class="keyword">if</span> (shangXingButton[i]) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断下行按钮在两个整数中有无1的值</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">havexiaXingButton</span><span class="params">(<span class="type">int</span> min, <span class="type">int</span> max)</span> &#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = min; i &lt;= max; i++) &#123;</span><br><span class="line">		<span class="keyword">if</span> (xiaXingButton[i]) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断电梯两个整数间有无要到达的楼层</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">haveTargetButton</span><span class="params">(<span class="type">int</span> min, <span class="type">int</span> max)</span> &#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = min; i &lt;= max; i++) &#123;</span><br><span class="line">		<span class="keyword">if</span> (target[i]) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将每个楼层按下的button进行可视化处理</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">chuLiButton</span><span class="params">(<span class="type">int</span> direction, <span class="type">int</span> ceng, <span class="type">int</span> data)</span> &#123;</span><br><span class="line">	<span class="keyword">if</span> (direction == <span class="number">1</span>) &#123;</span><br><span class="line">		<span class="keyword">if</span> (shangXingButton[ceng] == data) &#123;</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		shangXingButton[ceng] = data;</span><br><span class="line">		Hide();</span><br><span class="line">		<span class="type">int</span> y = cengLocation(ceng) + <span class="number">2</span>;</span><br><span class="line">		<span class="type">int</span> x = diantiWidth * <span class="number">2</span> + <span class="number">7</span>;</span><br><span class="line">		GotoXY(x, y);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (data == <span class="number">1</span>) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;▲&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (data == <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (direction == <span class="number">-1</span>) &#123;</span><br><span class="line">		<span class="keyword">if</span> (xiaXingButton[ceng] == data) &#123;</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		xiaXingButton[ceng] = data;</span><br><span class="line">		Hide();</span><br><span class="line"></span><br><span class="line">		<span class="type">int</span> y = cengLocation(ceng) + <span class="number">5</span>;</span><br><span class="line">		<span class="type">int</span> x = diantiWidth * <span class="number">2</span> + <span class="number">7</span>;</span><br><span class="line">		GotoXY(x, y);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (data == <span class="number">1</span>) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;▼&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (data == <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果对您有帮助，欢迎投币哦~</p>
]]></content>
      <categories>
        <category>课程作业</category>
        <category>数据结构作业</category>
        <category>数据结构电梯</category>
      </categories>
      <tags>
        <tag>数据结构作业</tag>
        <tag>智慧电梯</tag>
      </tags>
  </entry>
  <entry>
    <title>智慧走迷宫游戏</title>
    <url>/2021/06/18/%E6%99%BA%E6%85%A7%E8%B5%B0%E8%BF%B7%E5%AE%AB%E6%B8%B8%E6%88%8F/</url>
    <content><![CDATA[<p><a href="%E6%99%BA%E6%85%A7%E8%B5%B0%E8%BF%B7%E5%AE%AB.rar" title="C语言源代码下载">点击下载</a></p>
<p>运行文件为解压后文件夹内的Migong.exe</p>
<p><img src="/2021/06/18/%E6%99%BA%E6%85%A7%E8%B5%B0%E8%BF%B7%E5%AE%AB%E6%B8%B8%E6%88%8F/Migong.png" alt="img"></p>
<p>如果对你有帮助，希望可以打赏哦~（打赏按钮在下方）</p>
<h3 id="以下为代码区"><a href="#以下为代码区" class="headerlink" title="以下为代码区"></a>以下为代码区</h3><h3 id="Mi-main-c"><a href="#Mi-main-c" class="headerlink" title="Mi_main.c"></a>Mi_main.c</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Mi.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;title 走迷宫&quot;</span>);</span><br><span class="line">    <span class="type">int</span> flag = <span class="number">1</span>;</span><br><span class="line">    Hide();</span><br><span class="line">    srand((<span class="type">unsigned</span>)time(<span class="literal">NULL</span>)); <span class="comment">//初始化随即种子</span></span><br><span class="line">    height = HEIGHT + <span class="number">4</span> * difficult ;</span><br><span class="line">    width = WIDTH + <span class="number">4</span> * difficult ;</span><br><span class="line">    <span class="keyword">while</span> (flag) &#123;</span><br><span class="line">        system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="keyword">switch</span> (Menu())</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            Start();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            setting();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            Help();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            About();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Mi-h"><a href="#Mi-h" class="headerlink" title="Mi.h"></a>Mi.h</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;conio.h&gt;</span><span class="comment">//控制台的一些文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//宏定义</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> UP <span class="string">&#x27;w&#x27;</span>        <span class="comment">// 定义上移键</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DOWN <span class="string">&#x27;s&#x27;</span>      <span class="comment">// 定义下移键</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LEFT <span class="string">&#x27;a&#x27;</span>      <span class="comment">// 定义左移键</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RIGHT <span class="string">&#x27;d&#x27;</span>     <span class="comment">// 定义右移键</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHOOT <span class="string">&#x27;j&#x27;</span>     <span class="comment">// 有冲锋枪时攻击键</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> KILL  <span class="string">&#x27;k&#x27;</span>     <span class="comment">// 有瑞士军刀时的砍键</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ESC   <span class="string">&#x27;0&#x27;</span>     <span class="comment">//游戏暂停</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ru 2          <span class="comment">//入为   2</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> wall 1        <span class="comment">//墙为   1</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> road 0        <span class="comment">//路为   0</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> guaishou 5    <span class="comment">//怪兽为 5</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> guaishou1 7</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> jinbi 6       <span class="comment">//金币为 6</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> chu 3         <span class="comment">//出为   3</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HEIGHT 21 <span class="comment">// 地图高度</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WIDTH 21  <span class="comment">// 地图的宽度</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Zhulu 100 <span class="comment">// 主路的位置</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//颜色的定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RED <span class="string">&quot;\033[0;32;31m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NONE <span class="string">&quot;\033[m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> YELLOW <span class="string">&quot;\033[44;34m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BLUE <span class="string">&quot;\033[43;34m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GREEN <span class="string">&quot;\033[40;32m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PURPLE <span class="string">&quot;\033[43;35m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DGREEN <span class="string">&quot;\033[40;36m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WHITE <span class="string">&quot;\033[46;37m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OBLUE <span class="string">&quot;\033[40;34m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ORED <span class="string">&quot;\033[40;31m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OPURPLE <span class="string">&quot;\033[40;35m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OWHITE <span class="string">&quot;\033[47;37m&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">40: 黑 30: 黑</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">41: 红 31: 红</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">42: 绿 32: 绿</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">43: 黄 33: 黄</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">44: 蓝 34: 蓝</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">45: 紫 35: 紫</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">46: 深绿 36: 深绿</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">47: 白色 37: 白色</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="built_in">map</span>[HEIGHT + <span class="number">40</span>][WIDTH + <span class="number">40</span>];</span><br><span class="line"><span class="type">int</span> mapx[<span class="number">2600</span>];  <span class="comment">//记录自动路途的x坐标</span></span><br><span class="line"><span class="type">int</span> mapy[<span class="number">2600</span>];  <span class="comment">//记录自动路途的y坐标</span></span><br><span class="line"><span class="type">int</span> mapp[HEIGHT + <span class="number">32</span>][HEIGHT + <span class="number">32</span>]; <span class="comment">//主路的数组</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> x;    <span class="comment">// x坐标的位置</span></span><br><span class="line">    <span class="type">int</span> y;    <span class="comment">// y坐标的位置</span></span><br><span class="line">&#125;Jiangshi, People, Money;<span class="comment">//前者僵尸中间人后者金币</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*typedef struct</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">    int x;    // x坐标</span></span><br><span class="line"><span class="comment">    int y;    // y坐标</span></span><br><span class="line"><span class="comment">    struct next; //前一个节点</span></span><br><span class="line"><span class="comment">    struct prev; //后一个节点</span></span><br><span class="line"><span class="comment">&#125;MAP;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//123</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> qdo 262 </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> qre 294</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> qmi 330     <span class="comment">//q前缀为低音，1后缀为高音，s前缀为半音阶 </span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> qfa 349</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> qso 392</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> qla 440</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> qsi 494</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> do 523</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> re 578</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mi 659</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fa 698</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> so 784</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> la 880</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> si 988</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> do1 1046</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> re1 1175</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mi1 1318</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fa1 1480</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> so1 1568</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> la1 1760</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> si1 1976</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sqdo 277</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sqre 311</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sqfa 370</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sqso 415</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sqla 466</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sdo 554</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sre 622</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sfa 740</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sso 831</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sla 932</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sdo1 1046</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sre1 1245</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sfa1 1480</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sso1 1661</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sla1 1865</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//音乐函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">d1music</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">d2music</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">d3music</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">d4music</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">d5music</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">d6music</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">d7music</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">music1</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">music2</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">music3</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">music4</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">music5</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">music6</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">music7</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">music1q</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">music2q</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">music3q</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">music4q</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">music5q</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">music6q</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">music7q</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">heavensong</span><span class="params">()</span>; <span class="comment">//天空之城音乐走起</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//基本架构函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GotoXY</span><span class="params">(<span class="type">int</span>, <span class="type">int</span>)</span>; <span class="comment">//光标定位函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Hide</span><span class="params">()</span>;     <span class="comment">//隐藏光标函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Chuli</span><span class="params">(<span class="type">int</span>, <span class="type">int</span>)</span>; <span class="comment">//彩蛋处理函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//模块的各个函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Menu</span><span class="params">()</span>;      <span class="comment">//主菜单函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//下面是开始游戏函数部分</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Start</span><span class="params">()</span>;       <span class="comment">//开始游戏</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Movepeople</span><span class="params">()</span>;  <span class="comment">//人物移动</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">ztlan</span><span class="params">()</span>;       <span class="comment">//右侧状态栏更新</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Shop</span><span class="params">()</span>;        <span class="comment">//进入商店界面</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">lackrmb</span><span class="params">()</span>;     <span class="comment">//金币不足界面</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">albuy</span><span class="params">()</span>;       <span class="comment">//已经购买界面</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Remap</span><span class="params">()</span>;      <span class="comment">//重新绘制地图</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">fdmap</span><span class="params">()</span>;       <span class="comment">//找到一条合适的路</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">lose</span><span class="params">()</span>;        <span class="comment">//游戏失败界面</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">win</span><span class="params">()</span>;         <span class="comment">//游戏胜利界面</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">reroad</span><span class="params">(<span class="type">int</span>, <span class="type">int</span>)</span>; <span class="comment">//怪物走到主路原路返回函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">shoot</span><span class="params">()</span>;       <span class="comment">//射击函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">kill</span><span class="params">()</span>;        <span class="comment">//用瑞士军刀</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Suspend</span><span class="params">()</span>;     <span class="comment">//游戏暂停函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//下面是所有设置的部分</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">setting</span><span class="params">()</span>;   <span class="comment">//设置函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">mapset</span><span class="params">()</span>;    <span class="comment">//地图设置</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">modeset</span><span class="params">()</span>;  <span class="comment">//模式设定</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">shopset</span><span class="params">()</span>;  <span class="comment">//商店设置</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">lifeset</span><span class="params">()</span>;  <span class="comment">//生命值设置</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//下面是帮助信息部分</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Help</span><span class="params">()</span>;     <span class="comment">//帮助信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//下面是程序相关信息</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">About</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//下面初始化函数部分</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitMap</span><span class="params">()</span>;   <span class="comment">//地图初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ptmonster</span><span class="params">()</span>; <span class="comment">//打印怪兽</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ptmoney</span><span class="params">()</span>;   <span class="comment">//打印金钱（用于买装备升级）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//下面是具体实现函数部分</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">iswall</span><span class="params">(<span class="type">int</span>,<span class="type">int</span>)</span>;   <span class="comment">//判断是否是墙</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">prt</span><span class="params">()</span>;  <span class="comment">//打印▇（墙）</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">map2</span><span class="params">()</span>;  <span class="comment">//彩蛋地图</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//下面是一些全局变量</span></span><br><span class="line"><span class="type">int</span> bufa;    <span class="comment">//设置自动走的路数</span></span><br><span class="line"><span class="type">int</span> <span class="built_in">set</span>;     <span class="comment">//设置返回值</span></span><br><span class="line"><span class="type">int</span> monster; <span class="comment">//怪物数等级</span></span><br><span class="line"><span class="type">int</span> cgn;     <span class="comment">//闯关数</span></span><br><span class="line"><span class="type">int</span> mode;    <span class="comment">//模式</span></span><br><span class="line"><span class="type">int</span> life;    <span class="comment">//生命值</span></span><br><span class="line"><span class="type">int</span> Life;    <span class="comment">//确定好的生命值</span></span><br><span class="line"><span class="type">int</span> shop;    <span class="comment">//商店开启或关闭 （1-开启 0-关闭）</span></span><br><span class="line"><span class="type">int</span> height;  <span class="comment">//地图的高</span></span><br><span class="line"><span class="type">int</span> width;   <span class="comment">//地图的宽</span></span><br><span class="line"><span class="type">int</span> rmb;     <span class="comment">//当前金币数量</span></span><br><span class="line"><span class="type">int</span> difficult;  <span class="comment">//地图难度系数</span></span><br><span class="line"><span class="type">int</span> monstern;   <span class="comment">//怪物数量等级系数</span></span><br><span class="line"><span class="type">int</span> gun;        <span class="comment">//是否购买冲锋枪    1表示购买了 0表示未购买</span></span><br><span class="line"><span class="type">int</span> knife;     <span class="comment">//是否购买瑞士军     1表示购买了 0表示未购买</span></span><br><span class="line"><span class="type">char</span> direction; <span class="comment">//人预期的朝向</span></span><br><span class="line"><span class="type">char</span> now_Dir;    <span class="comment">//人当前的朝向</span></span><br><span class="line"><span class="type">long</span> TIME;     <span class="comment">//倒计时的时间</span></span><br><span class="line"><span class="type">int</span> eatpeople;<span class="comment">//人是否被怪物吃到 1表示没被吃到</span></span><br><span class="line"><span class="type">int</span> cycle;</span><br><span class="line"><span class="type">int</span> times;</span><br></pre></td></tr></table></figure>

<h3 id="work-c"><a href="#work-c" class="headerlink" title="work.c"></a>work.c</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Mi.h&quot;</span></span></span><br><span class="line">cgn = <span class="number">0</span>;</span><br><span class="line">difficult = <span class="number">1</span>;</span><br><span class="line">monstern = <span class="number">1</span>;</span><br><span class="line">mode = <span class="number">1</span>;</span><br><span class="line">monster = <span class="number">3</span>;</span><br><span class="line">life = <span class="number">1</span>;</span><br><span class="line">Life = <span class="number">1</span>;</span><br><span class="line">shop = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">set</span> = <span class="number">1</span>;</span><br><span class="line">rmb = <span class="number">10</span>;</span><br><span class="line">gun = <span class="number">0</span>;</span><br><span class="line">knife = <span class="number">0</span>;</span><br><span class="line">TIME = <span class="number">55000</span>; <span class="comment">//TIME = 15*1000 + difficult * 40000;</span></span><br><span class="line">times = <span class="number">30</span>;</span><br><span class="line">cycle = <span class="number">0</span>;</span><br><span class="line">eatpeople = <span class="number">1</span>;</span><br><span class="line">People people;</span><br><span class="line">People peoplenext;</span><br><span class="line">Jiangshi jshi;</span><br><span class="line">Money money;</span><br><span class="line"></span><br><span class="line"><span class="comment">//音乐模块</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">d1music</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">262</span>,<span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">d2music</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">294</span>,<span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">d3music</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">330</span>,<span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">d4music</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">349</span>,<span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">d5music</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">392</span>,<span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">d6music</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">440</span>,<span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">d7music</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">494</span>,<span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">music1</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">523</span>, <span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">music2</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">578</span>, <span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">music3</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">659</span>, <span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">music4</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">698</span>, <span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">music5</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">784</span>, <span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">music6</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">880</span>, <span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">music7</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">988</span>, <span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">music1q</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">1046</span>, <span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">music2q</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">1175</span>, <span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">music3q</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">1318</span>, <span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">music4q</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">1480</span>, <span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">music5q</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">1568</span>, <span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">music6q</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">1760</span>, <span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">music7q</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">1976</span>, <span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//胜利音效</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">winmusic</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    music1();</span><br><span class="line">    music1();</span><br><span class="line">    music5();</span><br><span class="line">    music5();</span><br><span class="line">    music6();</span><br><span class="line">    music6();</span><br><span class="line">    music5();</span><br><span class="line">    Sleep(<span class="number">500</span>);</span><br><span class="line">    music4();</span><br><span class="line">    music4();</span><br><span class="line">    music3();</span><br><span class="line">    music3();</span><br><span class="line">    music2();</span><br><span class="line">    music2();</span><br><span class="line">    music1();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//天空之城</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">heavensong</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> pai = <span class="number">400</span>, ban = <span class="number">200</span>;</span><br><span class="line">    <span class="type">int</span> ting = <span class="number">128</span>;</span><br><span class="line">    Sleep(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">    Beep(la, ban);</span><br><span class="line">    Beep(si, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(do1, pai + ban);</span><br><span class="line">    Beep(si, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(mi1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(si, <span class="number">3</span> * pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line"></span><br><span class="line">    Beep(la, ban + pai);</span><br><span class="line">    Beep(so, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(la, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(so, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Sleep(pai);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line">    Sleep(ting / <span class="number">2</span>);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line">    Sleep(ting / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    Beep(fa, pai + ban);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(fa, ban);</span><br><span class="line">    Beep(do1, ban + pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(mi, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Sleep(ban);</span><br><span class="line">    Beep(do1, ban);</span><br><span class="line">    Sleep(ting / <span class="number">2</span>);</span><br><span class="line">    Beep(do1, ban);</span><br><span class="line">    Sleep(ting / <span class="number">2</span>);</span><br><span class="line">    Beep(do1, ban);</span><br><span class="line">    Sleep(ting / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    Beep(si, ban + pai);</span><br><span class="line">    Beep(sfa, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(sfa, pai);</span><br><span class="line">    Beep(si, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(si, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Sleep(pai);</span><br><span class="line">    Beep(la, ban);</span><br><span class="line">    Beep(si, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(do1, pai + ban);</span><br><span class="line">    Beep(si, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(mi1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(si, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Sleep(pai);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line">    Sleep(<span class="number">20</span>);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(la, pai + ban);</span><br><span class="line">    Beep(so, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(la, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(so, <span class="number">3</span> * pai);</span><br><span class="line">    Sleep(ting + ban);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line">    Sleep(ting / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    Beep(fa, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, ban);</span><br><span class="line">    Beep(si, ban);</span><br><span class="line">    Sleep(<span class="number">20</span>);</span><br><span class="line">    Beep(si, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(re1, ban);</span><br><span class="line">    Sleep(<span class="number">20</span>);</span><br><span class="line">    Beep(re1, ban);</span><br><span class="line">    Sleep(<span class="number">20</span>);</span><br><span class="line">    Beep(mi1, ban);</span><br><span class="line">    Sleep(ting / <span class="number">2</span>);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting + pai);</span><br><span class="line"></span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Beep(si, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(la, ban);</span><br><span class="line">    Sleep(<span class="number">20</span>);</span><br><span class="line">    Beep(la, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(si, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(sso, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(sso, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting + pai);</span><br><span class="line">    Beep(do1, ban);</span><br><span class="line">    Beep(re1, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(mi1, pai + ban);</span><br><span class="line">    Beep(re1, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(mi1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(fa1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(re1, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(pai + ting);</span><br><span class="line">    Beep(so, ban);</span><br><span class="line">    Sleep(<span class="number">20</span>);</span><br><span class="line">    Beep(so, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(do1, ban);</span><br><span class="line">    Beep(si, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(mi1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(mi1, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting + <span class="number">2</span> * pai);</span><br><span class="line"></span><br><span class="line">    Beep(la, ban);</span><br><span class="line">    Beep(si, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(si, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(re1, ban);</span><br><span class="line">    Sleep(<span class="number">20</span>);</span><br><span class="line">    Beep(re1, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(do1, pai + ban);</span><br><span class="line">    Beep(so, ban);</span><br><span class="line">    Sleep(<span class="number">20</span>);</span><br><span class="line">    Beep(so, pai);</span><br><span class="line">    Sleep(pai + ting);</span><br><span class="line"></span><br><span class="line">    Beep(fa1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(mi1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(re1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(mi1, <span class="number">4</span> * pai);</span><br><span class="line"></span><br><span class="line">    Beep(mi1, pai * <span class="number">2</span>);</span><br><span class="line">    Sleep(pai + ting);</span><br><span class="line">    Beep(mi1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(la1, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(so1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(so1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(mi1, ban);</span><br><span class="line">    Sleep(ting / <span class="number">2</span>);</span><br><span class="line">    Beep(re1, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting + ban);</span><br><span class="line">    Beep(do1, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(re1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, ban);</span><br><span class="line">    Beep(re1, ban);</span><br><span class="line">    Sleep(<span class="number">20</span>);</span><br><span class="line">    Beep(re1, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(so1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(mi1, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting + pai);</span><br><span class="line">    Beep(mi, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(la1, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(so1, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(mi1, ban);</span><br><span class="line">    Beep(re1, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting + ban);</span><br><span class="line">    Beep(do1, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(re1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, ban);</span><br><span class="line">    Beep(re1, ban);</span><br><span class="line">    Sleep(<span class="number">20</span>);</span><br><span class="line">    Beep(re1, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(si, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(la, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(la, ban);</span><br><span class="line">    Beep(si, ban);</span><br><span class="line"></span><br><span class="line">    Beep(do1, pai + ban);</span><br><span class="line">    Beep(si, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(mi1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(si, <span class="number">3</span> * pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line"></span><br><span class="line">    Beep(la, ban + pai);</span><br><span class="line">    Beep(so, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(la, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(so, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Sleep(pai);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line">    Sleep(ting / <span class="number">2</span>);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line">    Sleep(ting / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    Beep(fa, pai + ban);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(fa, ban);</span><br><span class="line">    Beep(do1, ban + pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(mi, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Sleep(ban);</span><br><span class="line">    Beep(do1, ban);</span><br><span class="line">    Sleep(ting / <span class="number">2</span>);</span><br><span class="line">    Beep(do1, ban);</span><br><span class="line">    Sleep(ting / <span class="number">2</span>);</span><br><span class="line">    Beep(do1, ban);</span><br><span class="line">    Sleep(ting / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    Beep(si, ban + pai);</span><br><span class="line">    Beep(sfa, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(sfa, pai);</span><br><span class="line">    Beep(si, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(si, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Sleep(pai);</span><br><span class="line">    Beep(la, ban);</span><br><span class="line">    Beep(si, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(do1, pai + ban);</span><br><span class="line">    Beep(si, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(mi1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(si, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Sleep(pai);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line">    Sleep(<span class="number">20</span>);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(la, pai + ban);</span><br><span class="line">    Beep(so, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(la, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(so, <span class="number">3</span> * pai);</span><br><span class="line">    Sleep(ting + ban);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line">    Sleep(ting / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    Beep(fa, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, ban);</span><br><span class="line">    Beep(si, ban);</span><br><span class="line">    Sleep(<span class="number">20</span>);</span><br><span class="line">    Beep(si, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(re1, ban);</span><br><span class="line">    Sleep(<span class="number">20</span>);</span><br><span class="line">    Beep(re1, ban);</span><br><span class="line">    Sleep(<span class="number">20</span>);</span><br><span class="line">    Beep(mi1, ban);</span><br><span class="line">    Sleep(ting / <span class="number">2</span>);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting + pai);</span><br><span class="line"></span><br><span class="line">    Beep(la, <span class="number">4</span> * pai);</span><br><span class="line"></span><br><span class="line">    Sleep(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//光标定位函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GotoXY</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    HANDLE hout;</span><br><span class="line">    COORD cor;</span><br><span class="line">    hout = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">    cor.X = x;</span><br><span class="line">    cor.Y = y;</span><br><span class="line">    SetConsoleCursorPosition(hout, cor);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//隐藏光标</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Hide</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    HANDLE hout = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">    CONSOLE_CURSOR_INFO cor_info = &#123; <span class="number">1</span>, <span class="number">0</span> &#125;;</span><br><span class="line">    SetConsoleCursorInfo(hout, &amp;cor_info);<span class="comment">//隐藏光标</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//菜单页面</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Menu</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Hide();</span><br><span class="line">    GotoXY(<span class="number">36</span>, <span class="number">12</span>);   <span class="comment">//定位光标的位置</span></span><br><span class="line">    <span class="built_in">printf</span>(ORED<span class="string">&quot;欢迎来到智慧迷宫游戏&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1. 开始游戏&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;2. 设置&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;3. 帮助&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">20</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;4. 关于(请谨慎进入因为进入可能要好久才能出来)&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">22</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;退出游戏请输入     0&quot;</span>NONE);</span><br><span class="line">    Hide();    <span class="comment">//隐藏光标</span></span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="type">int</span> result = <span class="number">1</span>;</span><br><span class="line">    ch = _getch();</span><br><span class="line">    <span class="keyword">switch</span> (ch)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>: result = <span class="number">1</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>: result = <span class="number">2</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>: result = <span class="number">3</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>: result = <span class="number">4</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;0&#x27;</span>: result = <span class="number">0</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:  result = <span class="number">5</span>; <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);  <span class="comment">//清空当前页面</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置页面</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">setting</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Hide();</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">printf</span>(GREEN<span class="string">&quot;地图设置请输入     1&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">12</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;模式设置请输入     2&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;生命值设置请输入   3&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;商店设置请输入     4&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">45</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按其他任意键返回上一级&quot;</span>NONE);</span><br><span class="line">    <span class="type">char</span> ch = _getch();</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    <span class="keyword">switch</span> (ch)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">        mapset();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">        modeset();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">        lifeset();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">        shopset();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//地图设置</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">mapset</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Hide();</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;输入1-6的正整数来表示迷宫的大小&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;当前迷宫的大小系数为   %d&quot;</span>, difficult);</span><br><span class="line">    GotoXY(<span class="number">45</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按其他任意键设置怪物数量等级&quot;</span>);</span><br><span class="line">    <span class="type">char</span> ch = _getch();</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    <span class="keyword">switch</span> (ch)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">        difficult = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">        difficult = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">        difficult = <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">        difficult = <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line">        difficult = <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;6&#x27;</span>:</span><br><span class="line">        difficult = <span class="number">6</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    height = HEIGHT + <span class="number">4</span> * difficult ;</span><br><span class="line">    width = WIDTH + <span class="number">4</span> * difficult ;</span><br><span class="line">    TIME = <span class="number">15</span>*<span class="number">1000</span> + difficult * <span class="number">40000</span>;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;输入1-7中的一个数表示迷宫怪物数量等级&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;当前怪物数量等级为   %d&quot;</span>, monstern);</span><br><span class="line">    GotoXY(<span class="number">45</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按其他任意键返回主菜单&quot;</span>);</span><br><span class="line">    ch = _getch();</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    <span class="keyword">switch</span> (ch)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">        monstern = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">        monstern = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">        monstern = <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">        monstern = <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line">        monstern = <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;6&#x27;</span>:</span><br><span class="line">        monstern = <span class="number">6</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;7&#x27;</span>:</span><br><span class="line">        monstern = <span class="number">7</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    monster = <span class="number">3</span> + monstern;</span><br><span class="line">    <span class="keyword">return</span> monster;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//找到合适的路</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">fdmap</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> stmap[<span class="number">54</span>][<span class="number">54</span>];</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    i = j = <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= width; i++) &#123;   <span class="comment">//对找到的位置进行初始化</span></span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= height; j++) &#123;</span><br><span class="line">            stmap[i][j] = <span class="built_in">map</span>[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    i = <span class="number">1</span>;</span><br><span class="line">    j = <span class="number">1</span>;</span><br><span class="line">    mapx[i] = <span class="number">2</span>;</span><br><span class="line">    mapy[j] = <span class="number">2</span>;</span><br><span class="line">    stmap[mapx[i]][mapy[j]] = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">while</span> (stmap[mapx[i]][mapy[j]] != chu) &#123;</span><br><span class="line">        <span class="keyword">if</span> (stmap[mapx[i] + <span class="number">1</span>][mapy[j]] == road || stmap[mapx[i] + <span class="number">1</span>][mapy[j]] == jinbi || stmap[mapx[i] + <span class="number">1</span>][mapy[j]] == chu) &#123;</span><br><span class="line">            <span class="keyword">if</span> (stmap[mapx[i] + <span class="number">1</span>][mapy[j]] == chu) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            stmap[mapx[i] + <span class="number">1</span>][mapy[j]] = <span class="number">10</span>;</span><br><span class="line">            mapx[i + <span class="number">1</span>] = mapx[i] + <span class="number">1</span>;</span><br><span class="line">            mapy[j + <span class="number">1</span>] = mapy[j];</span><br><span class="line">            i++;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (stmap[mapx[i] - <span class="number">1</span>][mapy[j]] == road || stmap[mapx[i] - <span class="number">1</span>][mapy[j]] == jinbi || stmap[mapx[i] - <span class="number">1</span>][mapy[j]] == chu) &#123;</span><br><span class="line">            <span class="keyword">if</span> (stmap[mapx[i] - <span class="number">1</span>][mapy[j]] == chu) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            stmap[mapx[i] - <span class="number">1</span>][mapy[j]] = <span class="number">10</span>;</span><br><span class="line">            mapx[i + <span class="number">1</span>] = mapx[i] - <span class="number">1</span>;</span><br><span class="line">            mapy[j + <span class="number">1</span>] = mapy[j];</span><br><span class="line">            i++;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (stmap[mapx[i]][mapy[j] + <span class="number">1</span>] == road || stmap[mapx[i]][mapy[j] + <span class="number">1</span>] == jinbi || stmap[mapx[i]][mapy[j] + <span class="number">1</span>] == chu) &#123;</span><br><span class="line">            <span class="keyword">if</span> (stmap[mapx[i]][mapy[j] + <span class="number">1</span>] == chu) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            stmap[mapx[i]][mapy[j] + <span class="number">1</span>] = <span class="number">10</span>;</span><br><span class="line">            mapx[i + <span class="number">1</span>] = mapx[i];</span><br><span class="line">            mapy[j + <span class="number">1</span>] = mapy[j] + <span class="number">1</span>;</span><br><span class="line">            i++;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (stmap[mapx[i]][mapy[j] - <span class="number">1</span>] == road || stmap[mapx[i]][mapy[j] - <span class="number">1</span>] == jinbi || stmap[mapx[i]][mapy[j] - <span class="number">1</span>] == chu) &#123;</span><br><span class="line">            <span class="keyword">if</span> (stmap[mapx[i]][mapy[j] - <span class="number">1</span>] == chu) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            stmap[mapx[i]][mapy[j] - <span class="number">1</span>] = <span class="number">10</span>;</span><br><span class="line">            mapx[i + <span class="number">1</span>] = mapx[i];</span><br><span class="line">            mapy[j + <span class="number">1</span>] = mapy[j] - <span class="number">1</span>;</span><br><span class="line">            i++;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            i--;</span><br><span class="line">            j--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//模式设置</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">modeset</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Hide();</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;限时模式     1&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">12</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;自走模式     2&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;无尽模式     3&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;战神模式     4&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;彩蛋****     5&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">20</span>);</span><br><span class="line">    <span class="keyword">switch</span> (mode)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>: <span class="built_in">printf</span>(<span class="string">&quot;当前模式为：  限时模式&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>: <span class="built_in">printf</span>(<span class="string">&quot;当前模式为：  自走模式&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>: <span class="built_in">printf</span>(<span class="string">&quot;当前模式为：  无尽模式&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>: <span class="built_in">printf</span>(<span class="string">&quot;当前模式为：  战神模式&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>: <span class="built_in">printf</span>(<span class="string">&quot;当前模式为：  菜单****（玩得开心哦！）&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    GotoXY(<span class="number">45</span>, <span class="number">22</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按其他任意键返回上级菜单&quot;</span>);</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    ch = _getch();</span><br><span class="line">    <span class="keyword">switch</span> (ch)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>: mode = <span class="number">1</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>: mode = <span class="number">2</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>: mode = <span class="number">3</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>: mode = <span class="number">4</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line">        mode = <span class="number">5</span>;</span><br><span class="line">        width = <span class="number">54</span>;</span><br><span class="line">        height = <span class="number">54</span>;</span><br><span class="line">        monster = <span class="number">10</span>;</span><br><span class="line">        rmb = <span class="number">10</span>;</span><br><span class="line">        difficult = <span class="number">6</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);  <span class="comment">//清空当前页面</span></span><br><span class="line">    <span class="keyword">return</span> mode;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//生命值设置</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">lifeset</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Hide();</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;输入你想要的生命值 1 — 9 (为了较好游戏体验，建议生命值3-5之间)&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;当前生命值为：  %d&quot;</span>, life);</span><br><span class="line">    GotoXY(<span class="number">45</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按其他任意键返回上级菜单      &quot;</span>);</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    ch = _getch();</span><br><span class="line">    <span class="keyword">switch</span> (ch)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>: Life = <span class="number">1</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>: Life = <span class="number">2</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>: Life = <span class="number">3</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>: Life = <span class="number">4</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;5&#x27;</span>: Life = <span class="number">5</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;6&#x27;</span>: Life = <span class="number">6</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;7&#x27;</span>: Life = <span class="number">7</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;8&#x27;</span>: Life = <span class="number">8</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;9&#x27;</span>: Life = <span class="number">9</span>; <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    life = Life;</span><br><span class="line">    <span class="keyword">return</span> life;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//商店设置</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">shopset</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Hide();</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">12</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;商店开启请输入 1&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;商店关闭请输入 0&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="keyword">switch</span> (shop)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:<span class="built_in">printf</span>(<span class="string">&quot;当前商店处于   开启状态&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:<span class="built_in">printf</span>(<span class="string">&quot;当前商店处于   关闭状态&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    GotoXY(<span class="number">45</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按任意键返回上级菜单      &quot;</span>);</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    ch = _getch();</span><br><span class="line">    <span class="keyword">switch</span> (ch)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>: shop = <span class="number">1</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;0&#x27;</span>: shop = <span class="number">0</span>; <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> shop;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//开始游戏</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Start</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    InitMap();</span><br><span class="line">    <span class="comment">//响应键盘的操作</span></span><br><span class="line">    <span class="keyword">if</span> (mode == <span class="number">5</span>) &#123;</span><br><span class="line">        monster = <span class="number">10</span>;</span><br><span class="line">        rmb = <span class="number">10</span>;</span><br><span class="line">        difficult = <span class="number">6</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (Movepeople());</span><br><span class="line">    <span class="keyword">if</span> (mode == <span class="number">5</span>) &#123;</span><br><span class="line">        monster = <span class="number">3</span>;</span><br><span class="line">        rmb = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//游戏暂停按钮</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Suspend</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(GREEN<span class="string">&quot;游戏已暂停，按 0 返回主菜单&quot;</span>NONE);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(GREEN<span class="string">&quot;按其他任意键继续游戏！&quot;</span>NONE);</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="type">int</span> result = <span class="number">1</span>;</span><br><span class="line">    ch = _getch();</span><br><span class="line">    <span class="keyword">switch</span> (ch)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">default</span> :</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//移动人物</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Movepeople</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> lag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (mode != <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (eatpeople == <span class="number">0</span>) &#123;</span><br><span class="line">            lose();</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Hide();</span><br><span class="line">        <span class="keyword">if</span> (_kbhit()) &#123;</span><br><span class="line">            direction = _getch();</span><br><span class="line">            <span class="keyword">switch</span> (direction)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> UP:</span><br><span class="line">                now_Dir = direction;</span><br><span class="line">                lag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> DOWN:</span><br><span class="line">                now_Dir = direction;</span><br><span class="line">                lag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> RIGHT:</span><br><span class="line">                now_Dir = direction;</span><br><span class="line">                lag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> LEFT:</span><br><span class="line">                now_Dir = direction;</span><br><span class="line">                lag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> SHOOT:</span><br><span class="line">                <span class="keyword">if</span> (gun) &#123;</span><br><span class="line">                    shoot();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> KILL:</span><br><span class="line">                <span class="keyword">if</span> (knife) &#123;</span><br><span class="line">                    kill();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;p&#x27;</span>:</span><br><span class="line">                <span class="keyword">if</span> (shopset) &#123;</span><br><span class="line">                    Shop();</span><br><span class="line">                    Remap();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ESC:</span><br><span class="line">                <span class="keyword">if</span> (Suspend()) &#123;</span><br><span class="line">                    Remap();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            GotoXY(people.x * <span class="number">2</span> - <span class="number">2</span>, people.y - <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">            peoplenext.x = people.x;</span><br><span class="line">            peoplenext.y = people.y;</span><br><span class="line">            <span class="keyword">if</span> (lag) &#123;</span><br><span class="line">                <span class="keyword">switch</span> (now_Dir) <span class="comment">//进行移动</span></span><br><span class="line">                &#123;</span><br><span class="line">                <span class="keyword">case</span> UP:peoplenext.y--; lag = <span class="number">0</span>; <span class="keyword">break</span>; <span class="comment">//上移</span></span><br><span class="line">                <span class="keyword">case</span> DOWN:peoplenext.y++; lag = <span class="number">0</span>; <span class="keyword">break</span>; <span class="comment">//下移</span></span><br><span class="line">                <span class="keyword">case</span> LEFT:peoplenext.x--; lag = <span class="number">0</span>; <span class="keyword">break</span>; <span class="comment">//左移</span></span><br><span class="line">                <span class="keyword">case</span> RIGHT:peoplenext.x++; lag = <span class="number">0</span>; <span class="keyword">break</span>; <span class="comment">//右移</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (mode == <span class="number">4</span>) &#123;</span><br><span class="line">                people.x = peoplenext.x;</span><br><span class="line">                people.y = peoplenext.y;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> ((iswall(peoplenext.x, peoplenext.y) != wall) &amp;&amp; peoplenext.y &gt;= <span class="number">2</span>) &#123; <span class="comment">//如果是墙的处理</span></span><br><span class="line">                    people.x = peoplenext.x;</span><br><span class="line">                    people.y = peoplenext.y;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    peoplenext.x = people.x;</span><br><span class="line">                    peoplenext.y = people.y;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (iswall(people.x, people.y) == jinbi) &#123;  <span class="comment">//碰到金币时候的处理</span></span><br><span class="line">                    <span class="built_in">map</span>[people.x][people.y] = road;</span><br><span class="line">                    rmb++;</span><br><span class="line">                    ztlan();</span><br><span class="line">                    music6q();</span><br><span class="line">                    music6q();</span><br><span class="line">                    music6q();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (iswall(people.x, people.y) == guaishou) &#123; <span class="comment">//碰到怪兽时候的处理</span></span><br><span class="line">                    <span class="keyword">if</span> (life &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                        life--;</span><br><span class="line">                        GotoXY(people.x * <span class="number">2</span> - <span class="number">2</span>, people.y - <span class="number">1</span>);</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;怪&quot;</span>);</span><br><span class="line">                        people.x = <span class="number">2</span>;</span><br><span class="line">                        people.y = <span class="number">2</span>;</span><br><span class="line">                        GotoXY(people.x * <span class="number">2</span> - <span class="number">2</span>, people.y - <span class="number">1</span>);</span><br><span class="line">                        <span class="built_in">printf</span>(WHITE<span class="string">&quot;〇&quot;</span>NONE);</span><br><span class="line">                        ztlan();</span><br><span class="line">                        d5music();</span><br><span class="line">                        d5music();</span><br><span class="line">                        d1music();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        lose();</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (iswall(people.x, people.y) == chu) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (mode == <span class="number">3</span>) &#123;</span><br><span class="line">                        cgn++;</span><br><span class="line">                        <span class="keyword">if</span> (difficult &lt; <span class="number">6</span>) &#123;</span><br><span class="line">                            difficult++;</span><br><span class="line">                        &#125;</span><br><span class="line">                        win();</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        win();</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            GotoXY(people.x * <span class="number">2</span> - <span class="number">2</span>, people.y - <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(WHITE<span class="string">&quot;〇&quot;</span>NONE);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Sleep(<span class="number">100</span>);</span><br><span class="line">        <span class="keyword">if</span> (mode == <span class="number">1</span>) &#123;</span><br><span class="line">            TIME = TIME - <span class="number">100</span>;</span><br><span class="line">            times = TIME / <span class="number">1000</span>;</span><br><span class="line">            <span class="keyword">if</span> (TIME &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                lose();</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            GotoXY(<span class="number">2</span> * width + <span class="number">8</span>, <span class="number">3</span>);</span><br><span class="line">            Hide();</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;剩余时间为： %d 秒   &quot;</span>, times);</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">       cycle++;</span><br><span class="line">            <span class="keyword">if</span> (cycle  == <span class="number">5</span>) &#123;</span><br><span class="line">                eatpeople = Movemonster();</span><br><span class="line">                cycle = <span class="number">0</span>;</span><br><span class="line">            &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        bufa = fdmap();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> m = <span class="number">1</span>; m &lt;= bufa; m++) &#123;</span><br><span class="line">            GotoXY(mapx[m]*<span class="number">2</span> - <span class="number">2</span>, mapy[m] - <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(WHITE<span class="string">&quot;〇&quot;</span>NONE);</span><br><span class="line">            Sleep(<span class="number">200</span>);</span><br><span class="line">            GotoXY(mapx[m]*<span class="number">2</span> - <span class="number">2</span>, mapy[m] - <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        win();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//射击函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">shoot</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> x = people.x;</span><br><span class="line">    <span class="type">int</span> y = people.y;</span><br><span class="line">    <span class="keyword">switch</span> (now_Dir)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;w&#x27;</span>:</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">map</span>[x][y - <span class="number">1</span>] == road || <span class="built_in">map</span>[x][y - <span class="number">1</span>] == guaishou) &#123;</span><br><span class="line">            y--;</span><br><span class="line">            Remap();</span><br><span class="line">            GotoXY(<span class="number">2</span> * x - <span class="number">2</span>, y - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == guaishou) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;＃&quot;</span>);</span><br><span class="line">                <span class="built_in">map</span>[x][y] = jinbi;</span><br><span class="line">                Sleep(<span class="number">200</span>);</span><br><span class="line">                Remap();</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;·&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Sleep(<span class="number">60</span>);</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>:</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">map</span>[x + <span class="number">1</span>][y] == road || <span class="built_in">map</span>[x + <span class="number">1</span>][y] == guaishou) &#123;</span><br><span class="line">            x++;</span><br><span class="line">            Remap();</span><br><span class="line">            GotoXY(<span class="number">2</span> * x - <span class="number">2</span>, y - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == guaishou) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;＃&quot;</span>);</span><br><span class="line">                <span class="built_in">map</span>[x][y] = jinbi;</span><br><span class="line">                Sleep(<span class="number">200</span>);</span><br><span class="line">                Remap();</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;·&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Sleep(<span class="number">60</span>);</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">map</span>[x][y + <span class="number">1</span>] == road || <span class="built_in">map</span>[x][y + <span class="number">1</span>] == guaishou) &#123;</span><br><span class="line">            y++;</span><br><span class="line">            Remap();</span><br><span class="line">            GotoXY(<span class="number">2</span> * x - <span class="number">2</span>, y - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == guaishou) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;＃&quot;</span>);</span><br><span class="line">                <span class="built_in">map</span>[x][y] = jinbi;</span><br><span class="line">                Sleep(<span class="number">200</span>);</span><br><span class="line">                Remap();</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;·&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Sleep(<span class="number">60</span>);</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">map</span>[x - <span class="number">1</span>][y] == road || <span class="built_in">map</span>[x - <span class="number">1</span>][y] == guaishou) &#123;</span><br><span class="line">            x--;</span><br><span class="line">            Remap();</span><br><span class="line">            GotoXY(<span class="number">2</span> * x - <span class="number">2</span>, y - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == guaishou) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;＃&quot;</span>);</span><br><span class="line">                <span class="built_in">map</span>[x][y] = jinbi;</span><br><span class="line">                Sleep(<span class="number">200</span>);</span><br><span class="line">                Remap();</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;·&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Sleep(<span class="number">60</span>);</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Remap();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//kill(瑞士军刀)函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">kill</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> x = people.x;</span><br><span class="line">    <span class="type">int</span> y = people.y;</span><br><span class="line">    <span class="keyword">switch</span> (now_Dir)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;w&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">map</span>[x][y - <span class="number">1</span>] == road || <span class="built_in">map</span>[x][y - <span class="number">1</span>] == guaishou) &#123;</span><br><span class="line">            y--;</span><br><span class="line">            GotoXY(<span class="number">2</span> * x - <span class="number">2</span>, y - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == guaishou) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;＃&quot;</span>);</span><br><span class="line">                <span class="built_in">map</span>[x][y] = jinbi;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;｜&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">map</span>[x][y - <span class="number">1</span>] == road || <span class="built_in">map</span>[x][y - <span class="number">1</span>] == guaishou) &#123;</span><br><span class="line">            y--;</span><br><span class="line">            GotoXY(<span class="number">2</span> * x - <span class="number">2</span>, y - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == guaishou) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;＃&quot;</span>);</span><br><span class="line">                <span class="built_in">map</span>[x][y] = jinbi;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;｜&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Sleep(<span class="number">200</span>);</span><br><span class="line">        Remap();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">map</span>[x + <span class="number">1</span>][y] == road || <span class="built_in">map</span>[x + <span class="number">1</span>][y] == guaishou) &#123;</span><br><span class="line">            x++;</span><br><span class="line">            GotoXY(<span class="number">2</span> * x - <span class="number">2</span>, y - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == guaishou) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;＃&quot;</span>);</span><br><span class="line">                <span class="built_in">map</span>[x][y] = jinbi;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;－&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">map</span>[x + <span class="number">1</span>][y] == road || <span class="built_in">map</span>[x + <span class="number">1</span>][y] == guaishou) &#123;</span><br><span class="line">            x++;</span><br><span class="line">            GotoXY(<span class="number">2</span> * x - <span class="number">2</span>, y - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == guaishou) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;＃&quot;</span>);</span><br><span class="line">                <span class="built_in">map</span>[x][y] = jinbi;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;－&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Sleep(<span class="number">200</span>);</span><br><span class="line">        Remap();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">map</span>[x][y + <span class="number">1</span>] == road || <span class="built_in">map</span>[x][y + <span class="number">1</span>] == guaishou) &#123;</span><br><span class="line">            y++;</span><br><span class="line">            GotoXY(<span class="number">2</span> * x - <span class="number">2</span>, y - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == guaishou) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;＃&quot;</span>);</span><br><span class="line">                <span class="built_in">map</span>[x][y] = jinbi;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;｜&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">map</span>[x][y + <span class="number">1</span>] == road || <span class="built_in">map</span>[x][y + <span class="number">1</span>] == guaishou) &#123;</span><br><span class="line">            y++;</span><br><span class="line">            GotoXY(<span class="number">2</span> * x - <span class="number">2</span>, y - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == guaishou) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;＃&quot;</span>);</span><br><span class="line">                <span class="built_in">map</span>[x][y] = jinbi;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;｜&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Sleep(<span class="number">200</span>);</span><br><span class="line">        Remap();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">map</span>[x - <span class="number">1</span>][y] == road || <span class="built_in">map</span>[x - <span class="number">1</span>][y] == guaishou) &#123;</span><br><span class="line">            x--;</span><br><span class="line">            GotoXY(<span class="number">2</span> * x - <span class="number">2</span>, y - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == guaishou) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;＃&quot;</span>);</span><br><span class="line">                <span class="built_in">map</span>[x][y] = jinbi;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;－&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">map</span>[x - <span class="number">1</span>][y] == road || <span class="built_in">map</span>[x - <span class="number">1</span>][y] == guaishou) &#123;</span><br><span class="line">            x--;</span><br><span class="line">            GotoXY(<span class="number">2</span> * x - <span class="number">2</span>, y - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == guaishou) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;＃&quot;</span>);</span><br><span class="line">                <span class="built_in">map</span>[x][y] = jinbi;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;－&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Sleep(<span class="number">200</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    Remap();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//移动怪物</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Movemonster</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> fangxiang;       <span class="comment">//用于解决怪兽的方向</span></span><br><span class="line">    <span class="type">int</span> flag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= width; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= height; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[i][j] == guaishou) &#123;</span><br><span class="line">                <span class="keyword">while</span> (flag) &#123;</span><br><span class="line">                    fangxiang =  rand() % <span class="number">4</span>;</span><br><span class="line">                    <span class="keyword">switch</span> (fangxiang)</span><br><span class="line">                    &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                        <span class="keyword">if</span> (<span class="built_in">map</span>[i + <span class="number">1</span>][j] == road &amp;&amp; mapp[i][j] != Zhulu) &#123;</span><br><span class="line">                            <span class="built_in">map</span>[i + <span class="number">1</span>][j] = guaishou1;</span><br><span class="line">                            <span class="built_in">map</span>[i][j] = road;</span><br><span class="line">                            GotoXY(i * <span class="number">2</span> - <span class="number">2</span>, j - <span class="number">1</span>);</span><br><span class="line">                            <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">                            flag = <span class="number">0</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span> (mapp[i][j] == Zhulu) &#123;</span><br><span class="line">                            reroad(i, j);</span><br><span class="line">                            flag = <span class="number">0</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        </span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                        <span class="keyword">if</span> (<span class="built_in">map</span>[i - <span class="number">1</span>][j] == road &amp;&amp; mapp[i][j] != Zhulu) &#123;</span><br><span class="line">                            <span class="built_in">map</span>[i - <span class="number">1</span>][j] = guaishou1;</span><br><span class="line">                            <span class="built_in">map</span>[i][j] = road;</span><br><span class="line">                            GotoXY(i * <span class="number">2</span> - <span class="number">2</span>, j - <span class="number">1</span>);</span><br><span class="line">                            <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">                            flag = <span class="number">0</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span> (mapp[i][j] == Zhulu) &#123;</span><br><span class="line">                            reroad(i, j);</span><br><span class="line">                            flag = <span class="number">0</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        </span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                        <span class="keyword">if</span> (<span class="built_in">map</span>[i][j + <span class="number">1</span>] == road &amp;&amp; mapp[i][j] != Zhulu) &#123;</span><br><span class="line">                            <span class="built_in">map</span>[i][j + <span class="number">1</span>] = guaishou1;</span><br><span class="line">                            <span class="built_in">map</span>[i][j] = road;</span><br><span class="line">                            GotoXY(i * <span class="number">2</span> - <span class="number">2</span>, j - <span class="number">1</span>);</span><br><span class="line">                            <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">                            flag = <span class="number">0</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span> (mapp[i][j] == Zhulu) &#123;</span><br><span class="line">                            reroad(i, j);</span><br><span class="line">                            flag = <span class="number">0</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        </span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                        <span class="keyword">if</span> (<span class="built_in">map</span>[i][j - <span class="number">1</span>] == road &amp;&amp; mapp[i][j] != Zhulu) &#123;</span><br><span class="line">                            <span class="built_in">map</span>[i][j - <span class="number">1</span>] = guaishou1;</span><br><span class="line">                            <span class="built_in">map</span>[i][j] = road;</span><br><span class="line">                            GotoXY(i * <span class="number">2</span> - <span class="number">2</span>, j - <span class="number">1</span>);</span><br><span class="line">                            <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">                            flag = <span class="number">0</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span> (mapp[i][j] == Zhulu) &#123;</span><br><span class="line">                            reroad(i, j);</span><br><span class="line">                            flag = <span class="number">0</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= width; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= height; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[i][j] == guaishou1) &#123;</span><br><span class="line">                <span class="built_in">map</span>[i][j] = guaishou;</span><br><span class="line">                <span class="keyword">if</span> (people.x == i &amp;&amp; people.y == j) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (life &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                        life--;</span><br><span class="line">                        GotoXY(people.x * <span class="number">2</span> - <span class="number">2</span>, people.y - <span class="number">1</span>);</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;怪&quot;</span>);</span><br><span class="line">                        people.x = <span class="number">2</span>;</span><br><span class="line">                        people.y = <span class="number">2</span>;</span><br><span class="line">                        GotoXY(people.x * <span class="number">2</span> - <span class="number">2</span>, people.y - <span class="number">1</span>);</span><br><span class="line">                        <span class="built_in">printf</span>(WHITE<span class="string">&quot;〇&quot;</span>NONE);</span><br><span class="line">                        ztlan();</span><br><span class="line">                        d5music();</span><br><span class="line">                        d5music();</span><br><span class="line">                        d1music();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                GotoXY(i * <span class="number">2</span> - <span class="number">2</span>, j - <span class="number">1</span>);</span><br><span class="line">                <span class="built_in">printf</span>(BLUE<span class="string">&quot;怪&quot;</span>NONE);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//怪物走到主路原路返回</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">reroad</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> flag = <span class="number">1</span>;  <span class="comment">//找到返回的方向为0 没有找到为1</span></span><br><span class="line">    <span class="keyword">while</span> (flag) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">map</span>[i + <span class="number">1</span>][j] == road &amp;&amp; mapp[i + <span class="number">1</span>][j] != Zhulu ) &#123;</span><br><span class="line">            <span class="built_in">map</span>[i + <span class="number">1</span>][j] = guaishou1;</span><br><span class="line">            <span class="built_in">map</span>[i][j] = road;</span><br><span class="line">            GotoXY(i * <span class="number">2</span> - <span class="number">2</span>, j - <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">map</span>[i - <span class="number">1</span>][j] == road &amp;&amp; mapp[i - <span class="number">1</span>][j] != Zhulu) &#123;</span><br><span class="line">            <span class="built_in">map</span>[i - <span class="number">1</span>][j] = guaishou1;</span><br><span class="line">            <span class="built_in">map</span>[i][j] = road;</span><br><span class="line">            GotoXY(i * <span class="number">2</span> - <span class="number">2</span>, j - <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">map</span>[i][j + <span class="number">1</span>] == road &amp;&amp; mapp[i][j + <span class="number">1</span>] != Zhulu) &#123;</span><br><span class="line">            <span class="built_in">map</span>[i][j + <span class="number">1</span>] = guaishou1;</span><br><span class="line">            <span class="built_in">map</span>[i][j] = road;</span><br><span class="line">            GotoXY(i * <span class="number">2</span> - <span class="number">2</span>, j - <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">map</span>[i][j - <span class="number">1</span>] == road &amp;&amp; mapp[i][j - <span class="number">1</span>] != Zhulu) &#123;</span><br><span class="line">            <span class="built_in">map</span>[i][j - <span class="number">1</span>] = guaishou1;</span><br><span class="line">            <span class="built_in">map</span>[i][j] = road;</span><br><span class="line">            GotoXY(i * <span class="number">2</span> - <span class="number">2</span>, j - <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//游戏失败界面</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">lose</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);  <span class="comment">//清空当前页面</span></span><br><span class="line"></span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">12</span>);   <span class="comment">//定位光标的位置</span></span><br><span class="line">    <span class="built_in">printf</span>(RED<span class="string">&quot;YOU LOSE !!!&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;你真菜！！！&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;游戏结束&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (mode == <span class="number">3</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;你成功闯过 %d 关&quot;</span>, cgn);</span><br><span class="line">    &#125;</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;关闭游戏请点击右上角 X&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">22</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;继续游戏按0回到主菜单栏目&quot;</span>NONE);</span><br><span class="line">    music3();</span><br><span class="line">    music3();</span><br><span class="line">    music2();</span><br><span class="line">    music2();</span><br><span class="line">    d5music();</span><br><span class="line">    Hide();    <span class="comment">//隐藏光标</span></span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="type">int</span> result = <span class="number">1</span>;</span><br><span class="line">    ch = _getch();</span><br><span class="line">    <span class="keyword">while</span> (ch != <span class="string">&#x27;0&#x27;</span>) &#123;</span><br><span class="line">        ch = _getch();</span><br><span class="line">    &#125;</span><br><span class="line">    life = Life;    <span class="comment">//重置生命数量</span></span><br><span class="line">    eatpeople = <span class="number">1</span>;  <span class="comment">//重置人被吃状态为1</span></span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);  <span class="comment">//清空当前页面</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//游戏胜利界面</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">win</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);  <span class="comment">//清空当前页面</span></span><br><span class="line"></span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">12</span>);   <span class="comment">//定位光标的位置</span></span><br><span class="line">    <span class="built_in">printf</span>(BLUE<span class="string">&quot;YOU WIN !!!&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;你真棒！！！&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">16</span>);</span><br><span class="line">    winmusic();</span><br><span class="line">    <span class="keyword">if</span> (mode == <span class="number">3</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;你已经闯过 %d 关&quot;</span>, cgn);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;游戏结束&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;关闭游戏请点击右上角 X&quot;</span>NONE);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">22</span>);</span><br><span class="line">    <span class="keyword">if</span> (mode != <span class="number">3</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(BLUE<span class="string">&quot;继续游戏按任意键回到主菜单栏目&quot;</span>NONE);</span><br><span class="line">        life = Life;    <span class="comment">//重置生命数量</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(BLUE<span class="string">&quot;继续游戏按任意键开启下一关卡&quot;</span>NONE);</span><br><span class="line">    &#125;</span><br><span class="line">    Hide();    <span class="comment">//隐藏光标</span></span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="type">int</span> result = <span class="number">1</span>;</span><br><span class="line">    ch = _getch();</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);  <span class="comment">//清空当前页面</span></span><br><span class="line">    <span class="keyword">if</span> (mode == <span class="number">3</span>) &#123;</span><br><span class="line">        Start();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//右侧状态栏更新</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">ztlan</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    GotoXY(<span class="number">2</span>*width + <span class="number">8</span>, <span class="number">5</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;当前生命值： &quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= life; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;●&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = life; i &lt;= <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    GotoXY(<span class="number">2</span> * width + <span class="number">8</span>, <span class="number">7</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;当前金币 ￥：  %d&quot;</span>, rmb);</span><br><span class="line">    GotoXY(<span class="number">2</span> * width + <span class="number">8</span>, <span class="number">9</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;当前模式为： &quot;</span>);</span><br><span class="line">    <span class="keyword">switch</span> (mode)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;限时模式&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;自走模式&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;无尽模式&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;战神模式&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    GotoXY(<span class="number">2</span> * width + <span class="number">8</span>, <span class="number">11</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;当前已装备  &quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (gun)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;  冲锋枪&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (knife)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;  瑞士军刀&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    GotoXY(<span class="number">2</span> * width + <span class="number">8</span>, <span class="number">13</span>);</span><br><span class="line">    <span class="keyword">if</span> (mode == <span class="number">3</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;你已经闯过 %d 关&quot;</span>, cgn);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//商店代码</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Shop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;购买生命2￥        请输入 1&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;购买瑞士军刀10￥   请输入 2&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;购买冲锋枪20￥     请输入 3&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">20</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;当前生命值 %d&quot;</span>, life);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">22</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;当前金额 %d&quot;</span>, rmb);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">24</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;当前已装备  &quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (gun)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;  冲锋枪&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (knife)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;  瑞士军刀&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    GotoXY(<span class="number">45</span>, <span class="number">26</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按其他任意键返回游戏&quot;</span>);</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    ch = _getch();</span><br><span class="line">    <span class="keyword">switch</span> (ch)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> (rmb &lt; <span class="number">2</span>) &#123;</span><br><span class="line">            lackrmb();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            rmb -= <span class="number">2</span>;</span><br><span class="line">            life++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> (knife) &#123;</span><br><span class="line">            albuy();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (rmb &lt; <span class="number">10</span>)&#123;</span><br><span class="line">            lackrmb();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            knife = <span class="number">1</span>;</span><br><span class="line">            rmb -= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> (gun) &#123;</span><br><span class="line">            albuy();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (rmb &lt; <span class="number">10</span>) &#123;</span><br><span class="line">            lackrmb();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            gun = <span class="number">1</span>;</span><br><span class="line">            rmb -= <span class="number">20</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Shop();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//金币不足界面</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">lackrmb</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">12</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;金币不足！！！&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">13</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按任意建返回商店！&quot;</span>);</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    ch = _getch();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//已经购买界面</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">albuy</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">12</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;该装备已购买！&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">13</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按任意建返回商店！&quot;</span>);</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    ch = _getch();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置帮助页面</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Help</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">printf</span>(OBLUE<span class="string">&quot;w 上          按 p 进入商店模式&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">12</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;s 下          有瑞士军刀时按 k 可以挥剑&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a 左          有冲锋枪时按 j 可以开枪&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;d 右          游戏进行时按 0 可以暂停&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;用尽快的方式躲避怪兽！走出迷宫！加油！胜利属于你！&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">45</span>, <span class="number">20</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按任意键返回上级菜单      &quot;</span>NONE);</span><br><span class="line">    <span class="type">char</span> ch = _getch();</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//关于信息界面</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">About</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">12</span>);</span><br><span class="line">    <span class="built_in">printf</span>(OPURPLE<span class="string">&quot;程序设计综合实践作业&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;智慧走迷宫小游戏&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;制作人：虞程龙 杨铄 侯磊&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按任意键返回上级菜单&quot;</span>NONE);</span><br><span class="line">    heavensong();</span><br><span class="line">    Hide();    <span class="comment">//隐藏光标</span></span><br><span class="line">    <span class="type">char</span> ch = _getch();</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//随机数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">create</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> <span class="comment">//随机生成迷宫</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> c[<span class="number">4</span>][<span class="number">2</span>] = &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">0</span> &#125;; <span class="comment">//四个方向</span></span><br><span class="line">    <span class="type">int</span> i, j, t;</span><br><span class="line">    <span class="comment">//将方向打乱</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        j = rand() % <span class="number">4</span>;</span><br><span class="line">        t = c[i][<span class="number">0</span>]; c[i][<span class="number">0</span>] = c[j][<span class="number">0</span>]; c[j][<span class="number">0</span>] = t;</span><br><span class="line">        t = c[i][<span class="number">1</span>]; c[i][<span class="number">1</span>] = c[j][<span class="number">1</span>]; c[j][<span class="number">1</span>] = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">map</span>[x][y] = road;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">map</span>[x + <span class="number">2</span> * c[i][<span class="number">0</span>]][y + <span class="number">2</span> * c[i][<span class="number">1</span>]] == wall)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">map</span>[x + c[i][<span class="number">0</span>]][y + c[i][<span class="number">1</span>]] = road;</span><br><span class="line">            create(x + <span class="number">2</span> * c[i][<span class="number">0</span>], y + <span class="number">2</span> * c[i][<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//地图初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitMap</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (mode == <span class="number">1</span>) &#123;</span><br><span class="line">        TIME = <span class="number">15</span> * <span class="number">1000</span> + difficult * <span class="number">40000</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Hide();</span><br><span class="line">    <span class="keyword">if</span> (mode == <span class="number">5</span>) &#123;</span><br><span class="line">        map2();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">int</span> i, j;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= height; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= width; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">0</span> || i == height || j == <span class="number">0</span> || j == width) &#123;  <span class="comment">//初始化迷宫</span></span><br><span class="line">                    <span class="built_in">map</span>[i][j] = road;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="built_in">map</span>[i][j] = wall;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        create(<span class="number">2</span> * (rand() % ((height - <span class="number">1</span>) / <span class="number">2</span>) + <span class="number">1</span>), <span class="number">2</span> * (rand() % ((width - <span class="number">1</span>) / <span class="number">2</span>) + <span class="number">1</span>)); <span class="comment">//从随机一个点开始生成迷宫，该点行列都为偶数</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= height; i++) <span class="comment">//边界处理</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">map</span>[<span class="number">1</span>][i] = wall;</span><br><span class="line">            <span class="built_in">map</span>[width][i] = wall;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= width; j++) <span class="comment">//边界处理</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">map</span>[j][<span class="number">1</span>] = wall;</span><br><span class="line">            <span class="built_in">map</span>[j][height] = wall;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">map</span>[<span class="number">2</span>][<span class="number">1</span>] = <span class="number">2</span>; <span class="comment">//给定入口</span></span><br><span class="line">        <span class="built_in">map</span>[width][height - <span class="number">1</span>] = <span class="number">3</span>; <span class="comment">//给定出口</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= height; i++)</span><br><span class="line">            <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= width; j++) &#123;</span><br><span class="line">                GotoXY(<span class="number">2</span> * j - <span class="number">2</span>, i - <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">switch</span> (<span class="built_in">map</span>[j][i])</span><br><span class="line">                &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                    <span class="built_in">printf</span>(GREEN<span class="string">&quot;入&quot;</span>); <span class="keyword">break</span>; <span class="comment">//画入口</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                    <span class="built_in">printf</span>(RED<span class="string">&quot;出&quot;</span>); <span class="keyword">break</span>; <span class="comment">//画出口</span></span><br><span class="line">                <span class="keyword">case</span> wall:</span><br><span class="line">                    <span class="built_in">printf</span>(YELLOW<span class="string">&quot;██&quot;</span>NONE); <span class="keyword">break</span>; <span class="comment">//画墙</span></span><br><span class="line">                <span class="keyword">case</span> road:</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>); <span class="keyword">break</span>; <span class="comment">//画路</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    people.x = <span class="number">2</span>;</span><br><span class="line">    people.y = <span class="number">2</span>;</span><br><span class="line">    GotoXY(people.x * <span class="number">2</span> - <span class="number">2</span>, people.y - <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(WHITE<span class="string">&quot;〇&quot;</span>NONE);</span><br><span class="line">    ptmonster(); <span class="comment">//打印怪兽</span></span><br><span class="line">    ptmoney();   <span class="comment">//打印金币</span></span><br><span class="line">    ztlan();     <span class="comment">//右侧状态栏打印</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//下面用于怪兽自动走</span></span><br><span class="line">    <span class="keyword">if</span> (mode != <span class="number">5</span>) &#123;</span><br><span class="line">        bufa = fdmap();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= width; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= height; j++) &#123;</span><br><span class="line">                mapp[i][j] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (bufa &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            mapp[mapx[bufa]][mapy[bufa]] = Zhulu;</span><br><span class="line">            bufa--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        Remap();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//重新绘制地图</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Remap</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= height; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= width; j++) &#123;</span><br><span class="line">            GotoXY(<span class="number">2</span> * j - <span class="number">2</span>, i - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">switch</span> (<span class="built_in">map</span>[j][i])</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="built_in">printf</span>(GREEN<span class="string">&quot;入&quot;</span>NONE); <span class="keyword">break</span>; <span class="comment">//画入口</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="built_in">printf</span>(RED<span class="string">&quot;出&quot;</span>NONE); <span class="keyword">break</span>; <span class="comment">//画出口</span></span><br><span class="line">            <span class="keyword">case</span> wall:</span><br><span class="line">                <span class="built_in">printf</span>(YELLOW<span class="string">&quot;██&quot;</span>NONE); <span class="keyword">break</span>; <span class="comment">//画墙</span></span><br><span class="line">            <span class="keyword">case</span> road:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>); <span class="keyword">break</span>; <span class="comment">//画路</span></span><br><span class="line">            <span class="keyword">case</span> jinbi:</span><br><span class="line">                <span class="built_in">printf</span>(PURPLE<span class="string">&quot;￥&quot;</span>NONE); <span class="keyword">break</span>; <span class="comment">//画金币</span></span><br><span class="line">            <span class="keyword">case</span> guaishou:</span><br><span class="line">                <span class="built_in">printf</span>(BLUE<span class="string">&quot;怪&quot;</span>NONE); <span class="keyword">break</span>; <span class="comment">//画怪兽</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    GotoXY(people.x * <span class="number">2</span> - <span class="number">2</span>, people.y - <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(WHITE<span class="string">&quot;〇&quot;</span>NONE);</span><br><span class="line">    ztlan();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印怪兽</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ptmonster</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> ci = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (ci &lt; monster) &#123;</span><br><span class="line">        jshi.x = rand() % (width  - <span class="number">2</span>) + <span class="number">2</span>;</span><br><span class="line">        jshi.y = rand() % (height - <span class="number">2</span>) + <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (iswall(jshi.x, jshi.y) == wall) &#123;</span><br><span class="line">            <span class="built_in">map</span>[jshi.x][jshi.y] = guaishou;</span><br><span class="line">            GotoXY(jshi.x * <span class="number">2</span> - <span class="number">2</span>, jshi.y - <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(BLUE<span class="string">&quot;怪&quot;</span>NONE);</span><br><span class="line">            ci++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印金币</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ptmoney</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (!shop) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">int</span> ci = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (ci &lt; difficult * <span class="number">3</span>) &#123;</span><br><span class="line">            money.x = rand() % (width - <span class="number">1</span>) + <span class="number">2</span>;</span><br><span class="line">            money.y = rand() % (height - <span class="number">1</span>) + <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (iswall(money.x, money.y) == road) &#123;</span><br><span class="line">                <span class="built_in">map</span>[money.x][money.y] = jinbi;</span><br><span class="line">                GotoXY(money.x * <span class="number">2</span> - <span class="number">2</span>, money.y - <span class="number">1</span>);</span><br><span class="line">                <span class="built_in">printf</span>(PURPLE<span class="string">&quot;￥&quot;</span>NONE);</span><br><span class="line">                ci++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断是否是墙</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">iswall</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == wall) &#123;</span><br><span class="line">        <span class="keyword">return</span> wall;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">map</span>[x][y] == road)&#123;</span><br><span class="line">        <span class="keyword">return</span> road;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == <span class="number">2</span> &amp;&amp; y &gt;= <span class="number">1</span> &amp;&amp; y &lt; height &amp;&amp; x &gt;= <span class="number">2</span> &amp;&amp; x &lt; width * <span class="number">2</span> - <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == chu) &#123;</span><br><span class="line">        <span class="keyword">return</span> chu;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == jinbi) &#123;</span><br><span class="line">        <span class="keyword">return</span> jinbi;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == guaishou) &#123;</span><br><span class="line">        <span class="keyword">return</span> guaishou;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">4</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//彩蛋处理函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Chuli</span><span class="params">(x, y)</span> &#123;</span><br><span class="line">    <span class="built_in">map</span>[x + <span class="number">1</span>][y + <span class="number">1</span>] = wall;</span><br><span class="line">    GotoXY(<span class="number">2</span> * x, y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="map-c"><a href="#map-c" class="headerlink" title="map.c"></a>map.c</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Mi.h&quot;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">prt</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;▇&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">map2</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">54</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">54</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">map</span>[i][j] = road;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    Hide();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">53</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">0</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">53</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">0</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">53</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">53</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">53</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">53</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">21</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">1</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    Chuli(<span class="number">23</span>, <span class="number">1</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">24</span>, <span class="number">2</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">1</span>, <span class="number">5</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">24</span>, <span class="number">5</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">23</span>, <span class="number">6</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">37</span>, <span class="number">2</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">1</span>, <span class="number">16</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">43</span>, <span class="number">5</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">38</span>, <span class="number">7</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">43</span>, <span class="number">9</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">9</span>, <span class="number">7</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">15</span>, <span class="number">11</span>);</span><br><span class="line">    prt();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">34</span>; i &lt;= <span class="number">44</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">1</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">3</span>; i &lt;= <span class="number">19</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">5</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">24</span>; i &lt;= <span class="number">25</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">5</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">15</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">3</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">17</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">3</span>; i &lt;= <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">19</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">5</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">21</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">10</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">6</span>; i &lt;= <span class="number">23</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">10</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">3</span>; i &lt;= <span class="number">27</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">25</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">6</span>; i &lt;= <span class="number">23</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">18</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">12</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">34</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">12</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">44</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">8</span>; i &lt;= <span class="number">9</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">8</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">7</span>; i &lt;= <span class="number">8</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">9</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">6</span>; i &lt;= <span class="number">7</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">10</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">5</span>; i &lt;= <span class="number">6</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">11</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">4</span>; i &lt;= <span class="number">5</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">12</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">3</span>; i &lt;= <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">13</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">15</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">15</span>; i &lt;= <span class="number">17</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">8</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">19</span>; i &lt;= <span class="number">21</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">8</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">15</span>; i &lt;= <span class="number">20</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">12</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">7</span>; i &lt;= <span class="number">8</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">11</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">8</span>; i &lt;= <span class="number">9</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">12</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">9</span>; i &lt;= <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">13</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">10</span>; i &lt;= <span class="number">11</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">14</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">26</span>; i &lt;= <span class="number">33</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">12</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">24</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">6</span>; i &lt;= <span class="number">21</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">24</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">10</span>; i &lt;= <span class="number">32</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">28</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">32</span>; i &lt;= <span class="number">44</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">14</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">45</span>; i &lt;= <span class="number">52</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">12</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">38</span>; i &lt;= <span class="number">42</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">10</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">35</span>; i &lt;= <span class="number">41</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">6</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">35</span>; i &lt;= <span class="number">37</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">4</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">46</span>; i &lt;= <span class="number">52</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">28</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">5</span>; i &lt;= <span class="number">25</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">37</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">27</span>; i &lt;= <span class="number">52</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">37</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">8</span>; i &lt;= <span class="number">17</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">31</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">19</span>; i &lt;= <span class="number">22</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">31</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">35</span>; i &lt;= <span class="number">36</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">11</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">39</span>; i &lt;= <span class="number">40</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">41</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">45</span>; i &lt;= <span class="number">49</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">41</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">51</span>; i &lt;= <span class="number">52</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">41</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">42</span>; i &lt;= <span class="number">43</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">42</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">42</span>; i &lt;= <span class="number">45</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">45</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">47</span>; i &lt;= <span class="number">50</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">44</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">39</span>; i &lt;= <span class="number">42</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">47</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">39</span>; i &lt;= <span class="number">44</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">49</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">49</span>; i &lt;= <span class="number">52</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">49</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">46</span>; i &lt;= <span class="number">49</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">50</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">39</span>; i &lt;= <span class="number">41</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">51</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">39</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">3</span>; i &lt;= <span class="number">5</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">41</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">8</span>; i &lt;= <span class="number">9</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">36</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">9</span>; i &lt;= <span class="number">11</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">38</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">7</span>; i &lt;= <span class="number">8</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">40</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">38</span>; i &lt;= <span class="number">47</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">17</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">49</span>; i &lt;= <span class="number">52</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">17</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">48</span>; i &lt;= <span class="number">52</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">1</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">45</span>; i &lt;= <span class="number">48</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">2</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">42</span>; i &lt;= <span class="number">43</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">3</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    Chuli(<span class="number">3</span>, <span class="number">45</span>);</span><br><span class="line">    prt();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">39</span>; i &lt;= <span class="number">42</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">4</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">38</span>; i &lt;= <span class="number">39</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">5</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">35</span>; i &lt;= <span class="number">36</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">6</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">32</span>; i &lt;= <span class="number">33</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">8</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">29</span>; i &lt;= <span class="number">30</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">9</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">31</span>; i &lt;= <span class="number">52</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">28</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">21</span>; i &lt;= <span class="number">25</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">39</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">27</span>; i &lt;= <span class="number">52</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">39</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">38</span>; i &lt;= <span class="number">41</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">42</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">38</span>; i &lt;= <span class="number">39</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">45</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">42</span>; i &lt;= <span class="number">47</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">45</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">50</span>; i &lt;= <span class="number">51</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">43</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">39</span>; i &lt;= <span class="number">40</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">47</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">45</span>; i &lt;= <span class="number">51</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">49</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">38</span>; i &lt;= <span class="number">39</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">49</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">29</span>; i &lt;= <span class="number">31</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">45</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">19</span>; i &lt;= <span class="number">20</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">35</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    Chuli(<span class="number">14</span>, <span class="number">25</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">15</span>, <span class="number">26</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">16</span>, <span class="number">27</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">7</span>, <span class="number">33</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">7</span>, <span class="number">35</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">18</span>, <span class="number">34</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">20</span>, <span class="number">34</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">21</span>, <span class="number">33</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">22</span>, <span class="number">32</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">26</span>, <span class="number">29</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">14</span>, <span class="number">50</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">15</span>, <span class="number">51</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">16</span>, <span class="number">52</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">24</span>, <span class="number">36</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">25</span>, <span class="number">35</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">26</span>, <span class="number">34</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">27</span>, <span class="number">33</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">33</span>, <span class="number">15</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">34</span>, <span class="number">16</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">35</span>, <span class="number">17</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">36</span>, <span class="number">18</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">37</span>, <span class="number">19</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">38</span>, <span class="number">20</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">40</span>, <span class="number">22</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">41</span>, <span class="number">23</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">43</span>, <span class="number">25</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">44</span>, <span class="number">26</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">45</span>, <span class="number">27</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">45</span>, <span class="number">15</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">44</span>, <span class="number">16</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">43</span>, <span class="number">17</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">42</span>, <span class="number">18</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">41</span>, <span class="number">19</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">40</span>, <span class="number">20</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">39</span>, <span class="number">21</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">38</span>, <span class="number">22</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">37</span>, <span class="number">23</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">35</span>, <span class="number">25</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">34</span>, <span class="number">26</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">33</span>, <span class="number">27</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">42</span>, <span class="number">44</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">48</span>, <span class="number">42</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">51</span>, <span class="number">39</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">52</span>, <span class="number">44</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">51</span>, <span class="number">46</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">51</span>, <span class="number">51</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">24</span>, <span class="number">2</span>);</span><br><span class="line">    Chuli(<span class="number">44</span>, <span class="number">12</span>);</span><br><span class="line">    Chuli(<span class="number">39</span>, <span class="number">37</span>);</span><br><span class="line">    Chuli(<span class="number">47</span>, <span class="number">28</span>);</span><br><span class="line">    <span class="built_in">map</span>[<span class="number">54</span>][<span class="number">48</span>] = chu;</span><br><span class="line">    <span class="built_in">map</span>[<span class="number">2</span>][<span class="number">1</span>] = ru;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>感谢你能够看到这里！</p>
]]></content>
      <categories>
        <category>程序设计作业</category>
        <category>智慧走迷宫</category>
        <category>最终提交版本</category>
        <category>文件</category>
      </categories>
      <tags>
        <tag>程序设计实践课程作业</tag>
        <tag>智慧走迷宫</tag>
      </tags>
  </entry>
  <entry>
    <title>离散数学</title>
    <url>/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/</url>
    <content><![CDATA[<h2 id="一、命题逻辑"><a href="#一、命题逻辑" class="headerlink" title="一、命题逻辑"></a>一、命题逻辑</h2><p><strong>全章节思维导图</strong></p>
<p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/1.png" alt="img"></p>
<h3 id="1·1-命题和逻辑连接词"><a href="#1·1-命题和逻辑连接词" class="headerlink" title="1·1 命题和逻辑连接词"></a>1·1 命题和逻辑连接词</h3><h4 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h4><p>连接词的优先顺序为：</p>
<p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/mt1.1.png" alt="img"></p>
<p>如果出现的连接词同级，又无括号时，则按从左到右</p>
<p>的顺序运算; 若遇有括号时，应该先进行括号中的运算.</p>
<h3 id="1·3-命题公式的等价演算"><a href="#1·3-命题公式的等价演算" class="headerlink" title="1·3 命题公式的等价演算"></a>1·3 命题公式的等价演算</h3><h4 id="基本等价式"><a href="#基本等价式" class="headerlink" title="基本等价式"></a>基本等价式</h4><p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/1.3.1.png" alt="img"></p>
<p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/1.3.2.png" alt="img"></p>
<p>重点为上述的5 6 11</p>
<h3 id="1·4-命题公式的范式"><a href="#1·4-命题公式的范式" class="headerlink" title="1·4 命题公式的范式"></a>1·4 命题公式的范式</h3><h4 id="初等和"><a href="#初等和" class="headerlink" title="初等和"></a>初等和</h4><p>有限个命题变元或其否定组成的析取式</p>
<h4 id="初等积"><a href="#初等积" class="headerlink" title="初等积"></a>初等积</h4><p>有限个命题变元或其否定组成的合取式</p>
<h4 id="析取范式"><a href="#析取范式" class="headerlink" title="析取范式"></a>析取范式</h4><p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/1.4.1.png" alt="img"></p>
<h4 id="合取范式"><a href="#合取范式" class="headerlink" title="合取范式"></a>合取范式</h4><p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/1.4.2.png" alt="img"></p>
<h3 id="1·5-命题公式的推理演算"><a href="#1·5-命题公式的推理演算" class="headerlink" title="1·5  命题公式的推理演算"></a>1·5  命题公式的推理演算</h3><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><p>从前提开始来构造一个有限公式序列，其中每个命题公式或者是已知的前提，或者是由前面的命题公式应用推理规则得到的结论，最后使得这个公式序列中的最后一个公式即为结论。称此方法为演绎推理</p>
<h4 id="定理"><a href="#定理" class="headerlink" title="定理"></a>定理</h4><ul>
<li>P规则（前提引入规则）</li>
</ul>
<p>在任何步骤中都可以引入前提 作为公式序列中的公式。</p>
<ul>
<li>T规则（结论引入规则）（可理解为整体的替换以及出答案）</li>
</ul>
<p>在任何步骤中都可以将已有公式的逻辑结论作为序列中的新公式。</p>
<ul>
<li>E规则（置换规则）（可理解为用公式进行计算）</li>
</ul>
<p>在任何步骤中都可以用公式中的命题公式等价的公式作为序列中的新公式。</p>
<ul>
<li>附加前提法1（CP规则）</li>
</ul>
<p>将非<em>B</em>加入前提，若推出矛盾(0)，则得证推理正确.</p>
<h2 id="二、谓词逻辑"><a href="#二、谓词逻辑" class="headerlink" title="二、谓词逻辑"></a>二、谓词逻辑</h2><p><strong>全章节思维导图</strong></p>
<p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/2.png" alt="img"></p>
<h3 id="2·1-个体词、谓词与量词"><a href="#2·1-个体词、谓词与量词" class="headerlink" title="2·1 个体词、谓词与量词"></a>2·1 个体词、谓词与量词</h3><p>全称量词</p>
<p>存在量词</p>
<h3 id="2·3-谓词公式的等价演算"><a href="#2·3-谓词公式的等价演算" class="headerlink" title="2·3 谓词公式的等价演算"></a>2·3 谓词公式的等价演算</h3><h4 id="基本等价式第一组（同1-3-的基本等价式）"><a href="#基本等价式第一组（同1-3-的基本等价式）" class="headerlink" title="基本等价式第一组（同1.3 的基本等价式）"></a>基本等价式第一组（同1.3 的基本等价式）</h4><h4 id="基本等价式第二组"><a href="#基本等价式第二组" class="headerlink" title="基本等价式第二组"></a>基本等价式第二组</h4><ul>
<li><p>量词否定律</p>
<p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/2.3.1.png" alt="img"></p>
</li>
<li><p>量词辖域收缩与扩张律</p>
<p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/2.3.2.png" alt="img"></p>
</li>
<li><p>量词分配律</p>
<p><img src="/2.3.3.png" alt="img"></p>
</li>
<li><p>量词交换律</p>
<p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/2.3.4.png" alt="img"></p>
</li>
</ul>
<h4 id="前束范式"><a href="#前束范式" class="headerlink" title="前束范式"></a>前束范式</h4><p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/2.3.5.png" alt="img"></p>
<h3 id="2·4-谓词公式的推理演算"><a href="#2·4-谓词公式的推理演算" class="headerlink" title="2·4 谓词公式的推理演算"></a>2·4 谓词公式的推理演算</h3><h4 id="推理规则"><a href="#推理规则" class="headerlink" title="推理规则"></a>推理规则</h4><ul>
<li><p>US规则（全称量词消去规则）</p>
<p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/2.4.1.png" alt="img"></p>
</li>
<li><p>ES规则（存在量词消去规则）</p>
<p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/2.4.2.png" alt="img"></p>
</li>
</ul>
<h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul>
<li><p>所有4个量词的推理规则都只能在前束范式中使用。</p>
</li>
<li><p>先ES后US  先是存在量词的引入，再是全称量词的引入</p>
</li>
</ul>
<h2 id="三、集合与关系"><a href="#三、集合与关系" class="headerlink" title="三、集合与关系"></a>三、集合与关系</h2><p><strong>全章节思维导图</strong></p>
<p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/3.png" alt="img"></p>
<h3 id="3·1-集合及运算"><a href="#3·1-集合及运算" class="headerlink" title="3·1 集合及运算"></a>3·1 集合及运算</h3><h4 id="幂集"><a href="#幂集" class="headerlink" title="幂集"></a>幂集</h4><p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/3.1.1.png" alt="img"></p>
<h4 id="计数"><a href="#计数" class="headerlink" title="计数"></a>计数</h4><p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/3.1.2.png" alt="img"></p>
<h4 id="集合的基本运算"><a href="#集合的基本运算" class="headerlink" title="集合的基本运算"></a>集合的基本运算</h4><p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/3.1.3.png" alt="img"></p>
<p>需要注意的是这里的第五个即对称差！</p>
<h4 id="集合的运算性质"><a href="#集合的运算性质" class="headerlink" title="集合的运算性质"></a>集合的运算性质</h4><p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/3.1.4.png" alt="img"></p>
<p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/3.1.5.png" alt="img"></p>
<p>重点为第二张图</p>
<h3 id="3·2-二元关系及其运算"><a href="#3·2-二元关系及其运算" class="headerlink" title="3·2 二元关系及其运算"></a>3·2 二元关系及其运算</h3><h4 id="序偶定义"><a href="#序偶定义" class="headerlink" title="序偶定义"></a>序偶定义</h4><p>由两个元素 <em>x</em> 和 <em>y</em>，按照一定的顺序组成的二元组称为有序对，记作&lt;*x*,*y*&gt;，通常称为序偶。</p>
<h4 id="序偶性质"><a href="#序偶性质" class="headerlink" title="序偶性质"></a>序偶性质</h4><ul>
<li><p>有序性</p>
<p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/3.2.1.png" alt="img"></p>
</li>
</ul>
<h4 id="元组定义"><a href="#元组定义" class="headerlink" title="元组定义"></a>元组定义</h4><p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/3.2.2.png" alt="img"></p>
<h4 id="笛卡尔积"><a href="#笛卡尔积" class="headerlink" title="笛卡尔积"></a>笛卡尔积</h4><p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/3.2.3.png" alt="img"></p>
<h4 id="笛卡尔积的性质"><a href="#笛卡尔积的性质" class="headerlink" title="笛卡尔积的性质"></a>笛卡尔积的性质</h4><p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/3.2.4.png" alt="img"></p>
<h4 id="二元关系"><a href="#二元关系" class="headerlink" title="二元关系"></a>二元关系</h4><p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/3.2.5.png" alt="img"></p>
<h4 id="复合关系"><a href="#复合关系" class="headerlink" title="复合关系"></a>复合关系</h4><p>简单理解为传递关系</p>
<h3 id="3·3-二元关系的性质与闭包"><a href="#3·3-二元关系的性质与闭包" class="headerlink" title="3·3 二元关系的性质与闭包"></a>3·3 二元关系的性质与闭包</h3><h4 id="关系的5个性质"><a href="#关系的5个性质" class="headerlink" title="关系的5个性质"></a>关系的5个性质</h4><ul>
<li><p>自反性</p>
<p>对角线全为1</p>
</li>
<li><p>反自反性</p>
<p>对角线全为0</p>
</li>
<li><p>对称性</p>
<p>关于对角线对称</p>
</li>
<li><p>反对称性</p>
<p>所有的点与对角线非对称</p>
</li>
<li><p>传递性</p>
</li>
</ul>
<p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/3.3.1.png" alt="img"></p>
<p><img src="/3.3.2.png" alt="img"></p>
<h2 id="有序性图的基本概念"><a href="#有序性图的基本概念" class="headerlink" title="有序性图的基本概念"></a>有序性图的基本概念</h2><h3 id="5·1-图的基本概念"><a href="#5·1-图的基本概念" class="headerlink" title="5·1  图的基本概念"></a>5·1  图的基本概念</h3><p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/tl1.png" alt="img"></p>
<ul>
<li><p>平凡图表示G（1，0）及图中只有一个孤立点，否则不是</p>
</li>
<li><p>|R(V1 )|表示图G中连接点集V1 外部与内部点的边的条数</p>
</li>
<li><p>设G是(<em>p</em>, <em>q</em>)简单图，若δ(G) &#x3D; <em>D</em>(G) &#x3D; <em>r</em> ，则称G是<em>r</em>度正则图。</p>
</li>
<li><p><em>p</em> − 1度正则图称为完全图，记为K<em>p</em></p>
</li>
<li><p>设G &#x3D; ⟨V, E⟩是简单图且V&#x3D;V1∪V2, V1∩V2&#x3D;∅。若∀(<em>u</em>,<em>v</em>) ∈ E，均有<em>u</em> ∈ V1, <em>v</em> ∈ V2或<em>u</em> ∈ V2,  <em>v</em> ∈ V1，则称G为二部图（或二分图）</p>
<p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/tl2.png" alt="img"></p>
<p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/tl3.png" alt="img"></p>
</li>
</ul>
<h4 id="是否可图化"><a href="#是否可图化" class="headerlink" title="是否可图化"></a>是否可图化</h4><p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/tl4.png" alt="img"></p>
<p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/tl5.png" alt="img"></p>
<h4 id="补图"><a href="#补图" class="headerlink" title="补图"></a>补图</h4><p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/tl6.png" alt="img"></p>
<p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/tl7.png" alt="img"></p>
<h3 id="5·2-图的连通性"><a href="#5·2-图的连通性" class="headerlink" title="5·2 图的连通性"></a>5·2 图的连通性</h3><h4 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h4><p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/tl2.1.png" alt="img"></p>
<p>简而言之</p>
<ul>
<li><p>能从头走到尾即位<strong>通路</strong>其中，如果这条通路首尾相连，那么又称为<strong>回路</strong>。</p>
</li>
<li><p>如果上面的路中没有重合边则为<strong>简单通路&#x2F;回路</strong>。</p>
</li>
<li><p>如果上面路中没有经过一个点两次及以上则成为<strong>基本通路&#x2F;回路</strong>。（路径&#x2F;圈）</p>
</li>
<li><p>基本回路判定</p>
<p>如果非零图G中无奇点，则G中<strong>必有</strong>基本回路。</p>
</li>
</ul>
<h4 id="图中的距离"><a href="#图中的距离" class="headerlink" title="图中的距离"></a>图中的距离</h4><p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/tl2.2.png" alt="img"></p>
<h4 id="连通分图"><a href="#连通分图" class="headerlink" title="连通分图"></a>连通分图</h4><p>非连通图G中的极大连通子图。也就是<em>V</em>关于连通关系<em>R</em>的等价类的导出子图。</p>
<h4 id="连通图的判定定理"><a href="#连通图的判定定理" class="headerlink" title="连通图的判定定理"></a>连通图的判定定理</h4><ul>
<li><p>1：若一个图中恰有2个奇点，则这2个奇点之间连通。</p>
</li>
<li><p>2：在<em>p</em>阶简单图G中，若对G的每对顶点<em>u</em>,<em>v</em>，都有 </p>
<p><em>d</em>(<em>u</em>) + <em>d</em>(<em>v</em>) ≥ <em>p</em> − 1, ∀<em>u</em>, <em>v</em> ∈ V </p>
<p>则G是连通图。</p>
<p>证明：用反证法。若G不是连通图，则它至少有二个连通分</p>
<p>图，设其中一个连通分图有<em>n</em>个(<em>n</em> ≥)顶点，<em>u**0</em>是其中的一个顶</p>
<p>点，其余各连通分图共含有<em>p-n</em>个顶点， <em>v**0</em>是其中的一个顶</p>
<p>点.则<em>d</em>(<em>u**0</em>) ≤ <em>n</em> − 1, <em>d</em>(<em>v**0</em>) ≤ <em>p-n</em> − 1</p>
<p>二式相加得<em>d</em>(<em>u**0</em>) + <em>d</em>(<em>v**0</em>) ≤<em>p</em>− 2</p>
<p>推论  在<em>p</em>阶简单图G中，若 δ(G) ≥ (<em>p</em>−1)&#x2F;2，则G是连通图。</p>
</li>
<li><p>3： (<em>p</em>, <em>q</em>)简单图G若有<em>k</em>个连通分图，则边数</p>
<p>​       <em>q</em> ≤ (<em>p</em>−<em>k</em>)(<em>p</em>−<em>k</em>+1) &#x2F;2</p>
</li>
<li><p>4：若(<em>p</em>, <em>q</em>)图G是连通图，则<em>q</em> ≥ <em>p</em> − 1 。</p>
<p>证明：用数学归纳法。</p>
<p><em>p</em><em>&#x3D;<em>1时， <em>q</em></em>&#x3D;0</em></p>
<p>假设<em>p</em> ≤<em>n</em>时，有<em>q</em> ≥ <em>p</em> − 1 </p>
<p>当<em>p</em><em>&#x3D;</em> <em>n</em> <em>+<em>1时，可以看作</em>n</em>个顶点的图加一个顶点，因为是连通图，这个顶点与<em>n</em>个顶点的图至少有一条边相连，因此</p>
<p><em>q</em> ≥ <em>n</em> − 1+1,即<em>q</em> ≥ （<em>n</em>+1 ）− 1&#x3D; <em>p</em> − 1 </p>
</li>
<li><p>5：简单图<em>G</em>&#x3D;&lt;<em>V*,<em>E</em>&gt;是二部图当且仅当</em>G*中没有长度为奇数的基本回路。</p>
</li>
<li><p>图的删除</p>
<p><em>G</em>-<em>v</em>: 从<em>G</em>中删除<em>v</em>及关联的边</p>
<p><em>G</em>-<em>V</em> ¢: 从<em>G</em>中删除<em>V</em> ¢中所有的顶点及关联的边</p>
<p><em>G</em>-<em>e</em> : 从<em>G</em>中删除<em>e</em></p>
<p><em>G</em>-<em>E</em>¢: 从<em>G</em>中删除<em>E</em>¢中所有边</p>
</li>
</ul>
<h4 id="点割集"><a href="#点割集" class="headerlink" title="点割集"></a><strong>点割集</strong></h4><p>设图<em>G</em>&#x3D;&lt;*V*,*E*&gt;, 点子集V1 ⊆ V <em>,</em> 若</p>
<p>(1)G- V1是平凡图或其连通分图数大于G的连通分图数</p>
<p>(2)∀V2⊂ V1, G- V2的连通分图数不大于G的连通分图数</p>
<p>则称V1为<em>G</em>的点割集. </p>
<p>若V1&#x3D;{<em>v</em>}为点割集, 则称<em>v</em>为割点.</p>
<h4 id="边割集："><a href="#边割集：" class="headerlink" title="边割集："></a><strong>边割集</strong>：</h4><p>设图<em>G</em>&#x3D;&lt;*V*,*E*&gt;, 边子集E1 ⊆ E <em>,</em> 若</p>
<p>(1)G- E1是平凡图或其连通分图数大于G的连通分图数</p>
<p>(2)∀E2⊂ E1, G- E2的连通分图数不大于G的连通分图数</p>
<p>则称E1为<em>G</em>的<strong>边割集</strong>. 简称<strong>割集</strong>。</p>
<p>若E1&#x3D;{<em>e</em>}为割集, 则称<em>e</em>为<strong>割边</strong>或<strong>桥</strong>.</p>
<h4 id="点连通度"><a href="#点连通度" class="headerlink" title="点连通度"></a>点连通度</h4><p>图G &#x3D; ⟨V, E⟩的点连通度是指为了由G产生一个不连通图或者平凡图，而需从G中去掉的最少的顶点数，记为κ(G)</p>
<p> κ(G)&#x3D;min{|V1| V1为G的点割集}</p>
<ul>
<li>性质1 非连通图和平凡图的点连通度是0</li>
<li>性质2  连通图中若有割点，则点连通度是1。</li>
<li>性质3  κ(K<em>p</em>)&#x3D;<em>p</em> − 1</li>
</ul>
<h4 id="边连通度"><a href="#边连通度" class="headerlink" title="边连通度"></a>边连通度</h4><p>图G &#x3D; ⟨V, E⟩的边连通度是指为了由G产生一个不连通图或者平凡图，而需从G中去掉的最少的边数，记为λ(G) </p>
<p>λ(G) &#x3D;min{|E1| E1为G的割集}</p>
<ul>
<li>性质1 非连通图和平凡图的点连通度是0</li>
<li>性质2  连通图中若有割点，则点连通度是1。</li>
<li>性质3  λ(K<em>p</em>)&#x3D;<em>p</em> − 1</li>
</ul>
<h3 id="5-4-图的矩阵表示"><a href="#5-4-图的矩阵表示" class="headerlink" title="5.4 图的矩阵表示"></a>5.4 图的矩阵表示</h3><h4 id="G的邻接矩阵"><a href="#G的邻接矩阵" class="headerlink" title="G的邻接矩阵"></a>G的邻接矩阵</h4><p>设G&#x3D;&lt;<em>V*,<em>E</em>&gt;是</em>p<em>阶图, 其中</em>V*&#x3D;{<em>v</em>1, <em>v</em>2, …, <em>vp</em>}, <em>p</em>阶方阵 AG&#x3D;( <em>aij</em> )<em>p</em>´<em>p</em>为图<em>G</em>的邻接矩阵, 其中元素<em>aij</em>为起点<em>vi</em>终点<em>vj</em>的边的数目。</p>
<p>简单表示即 竖着表示V1 V2 V3 V4…的点 横着表示V1 V2 V3 V4…的点，数字表示有几条线</p>
<p>0表示不连接</p>
<p>n表示有n条线</p>
<p>成环时即主对角线上相应的点值为1（不是2）</p>
<h4 id="G的关联矩阵"><a href="#G的关联矩阵" class="headerlink" title="G的关联矩阵"></a>G的关联矩阵</h4><p>设<em>G</em>&#x3D;&lt;<em>V*,<em>E</em>&gt;是(<em>p</em>,<em>q</em>)图, <em>V</em>&#x3D;{<em>v</em>1, <em>v</em>2, …, <em>v**p</em>}, <em>E</em>&#x3D;{<em>e</em>1, <em>e</em>2, …, <em>e**q</em>}, <em>p</em>×</em>q<em>阶矩阵 MG&#x3D;( <em>m**ij</em> )<em>p</em>´</em>q<em>为图</em>G<em>的关联矩阵, 其中元素</em>m<strong>ij<em>为</em>v</strong>i<em>与e**j</em>的关联次数。</p>
<p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/tl3.1.png" alt="img"></p>
<p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/tl3.2.png" alt="img"></p>
<p>简单表示即 竖着表示V1 V2 V3 V4…的点 横着表示e1 e2 e3 e4…的线</p>
<p>1表示有关联；</p>
<p>0表示无关联；</p>
<p>2表示成环</p>
<ul>
<li><p>例题：</p>
<p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/tl3.3.png" alt="img"></p>
<p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/tl3.4.png" alt="img"></p>
</li>
</ul>
<h4 id="带权图"><a href="#带权图" class="headerlink" title="带权图"></a>带权图</h4><ul>
<li><p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/tl3.5.png" alt="img"></p>
<p>其中的L1 L2…都是题目提供的</p>
</li>
</ul>
<h3 id="5-5-树"><a href="#5-5-树" class="headerlink" title="5.5 树"></a>5.5 树</h3><h4 id="树"><a href="#树" class="headerlink" title="树"></a>树</h4><ul>
<li>无基本回路的连通图</li>
</ul>
<h4 id="平凡树"><a href="#平凡树" class="headerlink" title="平凡树"></a>平凡树</h4><ul>
<li>平凡图</li>
</ul>
<h4 id="森林"><a href="#森林" class="headerlink" title="森林"></a>森林</h4><ul>
<li>每个连通分图都是树的非连通图</li>
</ul>
<h4 id="树叶"><a href="#树叶" class="headerlink" title="树叶"></a>树叶</h4><ul>
<li>树中度数为1的顶点</li>
</ul>
<h4 id="分支点"><a href="#分支点" class="headerlink" title="分支点"></a>分支点</h4><ul>
<li>树中度数大于等于2的顶点</li>
</ul>
<h4 id="等价关系"><a href="#等价关系" class="headerlink" title="等价关系"></a>等价关系</h4><ul>
<li><em>G</em>中任意两个顶点之间存在唯一的基本通路</li>
<li><em>G</em>是连通的且<em>G</em>中任何边均为桥</li>
<li><em>G</em>是连通的且<em>q</em>&#x3D;<em>p</em>-1</li>
<li><em>G</em>中无回路且<em>q</em>&#x3D;<em>p</em>-1</li>
<li><em>G</em>中没有基本回路, 但在任何两个不同的顶点之间加一条新边后所得图中有唯一的一个含新边的基本回路。</li>
</ul>
<h4 id="阶数的计算"><a href="#阶数的计算" class="headerlink" title="阶数的计算"></a>阶数的计算</h4><p>！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！</p>
<h4 id="定理-1"><a href="#定理-1" class="headerlink" title="定理"></a>定理</h4><ul>
<li>设<em>T</em>是连通图<em>G</em>的一棵生成树, 则<ul>
<li>G的任何基本回路都至少包含T的一条弦</li>
<li>若<em>e</em>为T的弦，则G中存在一条且只存在一条只含弦<em>e**，</em>其余都是枝的基本回路，称为G的对应T的弦<em>e</em>的基本回路</li>
<li>G的任一割集都至少含有T的一条枝</li>
<li>若<em>e</em>为T的枝，则G中恰好存在一个只含枝<em>e**，</em>其余都是弦的割集，称为G的对应T的枝<em>e</em>的基本割集。</li>
</ul>
</li>
</ul>
<h4 id="求基本回路的算法"><a href="#求基本回路的算法" class="headerlink" title="求基本回路的算法"></a>求基本回路的算法</h4><p>设弦<em>e</em>&#x3D;(<em>u</em>,<em>v</em>), 先求生成树<em>T</em>中<em>u</em>到<em>v</em>的基本路</p>
<p>径<em>G**uv</em>, 再加上弦<em>e</em>. </p>
<p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/tl5.1.png" alt="img"></p>
<p>例如上图红色的是枝，黑色的是弦</p>
<p><em>Ce</em>&#x3D;(<em>e,b,</em> <em>c</em>), <em>Cf</em>&#x3D;(<em>f,</em> <em>a,</em> <em>b,</em> <em>c</em>), </p>
<p><em>Cg</em>&#x3D;(<em>g,</em> <em>a,</em> <em>b,</em> <em>c,</em> <em>d)</em></p>
<p>（即只能过一条弦）</p>
<h4 id="求基本割集的算法"><a href="#求基本割集的算法" class="headerlink" title="求基本割集的算法"></a>求基本割集的算法</h4><p>设<em>a</em>为生成树<em>T</em>的树枝, <em>T</em>-<em>a</em>由两</p>
<p>棵子树<em>T</em>1与<em>T</em>2组成, 则</p>
<p>   <em>Sa</em>&#x3D;{<em>e</em> | <em>e</em>Î<em>E</em>(<em>G</em>)且<em>e</em>的两个端点分别属于<em>T</em>1与<em>T</em>2} .</p>
<p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/tl5.1.png" alt="img"></p>
<p>例如上图红色的是枝，黑色的是弦</p>
<p>则<em>Sa</em>&#x3D;{<em>a</em>, <em>f</em>, <em>g</em>},   <em>Sb</em>&#x3D;{<em>b</em>, <em>e</em>, <em>f</em>, <em>g</em>},</p>
<p>  <em>Sc</em>&#x3D;{<em>c</em>, <em>e</em>, <em>f</em> <em>g</em>}, <em>Sd</em>&#x3D;{<em>d</em>, <em>g</em>}</p>
<p>（即只能割一条枝）</p>
<h4 id="回路合并"><a href="#回路合并" class="headerlink" title="回路合并"></a>回路合并</h4><p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/tl5.2.png" alt="img"></p>
<h4 id="基本回路的性质"><a href="#基本回路的性质" class="headerlink" title="基本回路的性质"></a>基本回路的性质</h4><p>连通图中的任一条回路都可以表成对应它所含弦的基本回路</p>
<p>的合并.</p>
<p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/tl5.1.png" alt="img"></p>
<p>例如, <em>abcf</em>&#x3D;<em>Cf</em>  </p>
<p>​      <em>aef</em>&#x3D;<em>Ce</em>困<em>Cf</em>    </p>
<p>​      <em>aedg</em>&#x3D;<em>Ce困Cg</em>   </p>
<p>​      <em>bcdgfe</em>&#x3D;<em>Ce</em>困<em>Cf</em>困<em>Cg</em>  </p>
<h4 id="基本割集的性质"><a href="#基本割集的性质" class="headerlink" title="基本割集的性质"></a>基本割集的性质</h4><p>连通图中的任一割集都可以表成对应它所含树枝的基本割集</p>
<p>的对称差.</p>
<p><img src="/2021/06/29/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/tl5.1.png" alt="img"></p>
<p>例如 {<em>g</em>,<em>d</em>}&#x3D;<em>S**d</em>   </p>
<p>​     {<em>a</em>,<em>b</em>,<em>e</em>}&#x3D;<em>S**a</em>Å<em>S**b</em>  </p>
<p>​     {<em>a</em>,<em>e</em>,<em>c</em>}&#x3D;<em>S**a</em>Å<em>S**c</em>  </p>
<p>​     {<em>b</em>,<em>e</em>,<em>f</em>,<em>d</em>}&#x3D;<em>S**b</em>Å<em>S**d</em>   </p>
<h3 id="5-6-最小生成树"><a href="#5-6-最小生成树" class="headerlink" title="5.6 最小生成树"></a>5.6 最小生成树</h3><h4 id="最小生成树"><a href="#最小生成树" class="headerlink" title="最小生成树"></a>最小生成树</h4><ul>
<li>带权图中权最小的生成树</li>
</ul>
<h4 id="Kruskal算法基本描述"><a href="#Kruskal算法基本描述" class="headerlink" title="Kruskal算法基本描述"></a>Kruskal算法基本描述</h4><p>（1）先构造一个只含 n 个顶点，而边集为空的子图，若将</p>
<p>该子图中各个顶点看成是各棵树上的根结点，则它是一个含</p>
<p>有 n 棵树的一个森林。</p>
<p>（2）从带权图的边集 E 中选取一条权值最小的边，若该条</p>
<p>边的两个顶点分属不同的树，则将其加入子图，也就是说，</p>
<p>将这两个顶点分别所在的两棵树合成一棵树；反之，若该条</p>
<p>边的两个顶点已落在同一棵树上，则不可取，而应该取下一</p>
<p>条权值最小的边再试之。</p>
<p>（3）依次类推，直至森林中只有一棵树，也即子图中含有 n-1条边为止。</p>
<h4 id="Prim算法基本描述"><a href="#Prim算法基本描述" class="headerlink" title="Prim算法基本描述"></a>Prim算法基本描述</h4><p>（1）初始化：Vnew&#x3D; {<em>v</em>}，其中<em>v</em>为集合V中的任一节点（起始点），Enew&#x3D; { }（空集）。</p>
<p>（2）重复下列操作，直到Vnew&#x3D; V：</p>
<p>①在集合E中选取权值最小的边&lt;<em>u, v*&gt;，其中</em>u*为集合Vnew中</p>
<p>的元素，而<em>v</em>不在Vnew集合当中，并且<em>v</em>∈V（如果存在有多条满足前述条件即具有相同权值的边，则可任意选取其中之一）。</p>
<p>②将v加入集合Vnew中，将&lt;*u, v*&gt;边加入集合Enew中；</p>
<p>（3）使用集合Vnew和Enew来描述所得到的最小生成树。</p>
<h3 id="5·7-欧拉图与哈密尔顿图"><a href="#5·7-欧拉图与哈密尔顿图" class="headerlink" title="5·7 欧拉图与哈密尔顿图"></a>5·7 欧拉图与哈密尔顿图</h3><h4 id="欧拉图"><a href="#欧拉图" class="headerlink" title="欧拉图"></a>欧拉图</h4><h5 id="欧拉通路"><a href="#欧拉通路" class="headerlink" title="欧拉通路:"></a>欧拉通路:</h5><p>图中行遍所有顶点且恰好经过每条边一次的通路. </p>
<h5 id="欧拉回路"><a href="#欧拉回路" class="headerlink" title="欧拉回路:"></a>欧拉回路:</h5><p>图中行遍所有顶点且恰好经过每条边一次的回路.</p>
<h5 id="欧拉图-1"><a href="#欧拉图-1" class="headerlink" title="欧拉图:"></a>欧拉图:</h5><p>有欧拉回路的图.</p>
<h5 id="半欧拉图"><a href="#半欧拉图" class="headerlink" title="半欧拉图:"></a>半欧拉图:</h5><p>有欧拉通路,但无欧拉回路的图.</p>
<h5 id="额外说明"><a href="#额外说明" class="headerlink" title="额外说明"></a>额外说明</h5><ul>
<li><p>规定平凡图为欧拉图.</p>
</li>
<li><p>欧拉通路是简单通路, 欧拉回路是简单回路.</p>
</li>
<li><p>环不影响图的欧拉性.</p>
</li>
</ul>
<h5 id="欧拉图定理"><a href="#欧拉图定理" class="headerlink" title="欧拉图定理"></a>欧拉图定理</h5><ul>
<li>图<em>G</em>是非平凡的连通图，则G是欧拉图当且仅当<em>G</em>中无奇点。</li>
</ul>
<p>证明1</p>
<p>若<em>G</em>是连通的而且是欧拉图，则欧拉回路既包含所有的边，也包含所有顶点。对该欧拉回路上的每一个顶点，若有一条边以该顶点为出发点，必然对应另一条边以该点为终止点。因为这样的边成对出现，并且不重复，所以每个顶点的度数必然为偶数。</p>
<ul>
<li>图<em>G</em>是非平凡的连通图，则<em>G</em>是半欧拉图当且仅当<em>G</em>恰有两个奇点,而且这二个奇点即是欧拉通路的起点和终点。证明:</li>
</ul>
<p>证明2</p>
<p>若G是连通的而且是半欧拉图，则欧拉通路包含所有的边，也包含了所有顶点。沿着该欧拉通路前进，则只有起点和终点经过奇数次，其他顶点必然经历偶数次，即入顶点和出顶点的次数成对，所以G中恰有两个奇点。</p>
<ul>
<li>若连通图G中恰有2<em>n</em>个奇点，则G可以表示为至少<em>n</em>条简单通路的边不相交的并。</li>
</ul>
<h4 id="哈密尔顿图"><a href="#哈密尔顿图" class="headerlink" title="哈密尔顿图"></a>哈密尔顿图</h4><h5 id="哈密顿通路"><a href="#哈密顿通路" class="headerlink" title="哈密顿通路:"></a>哈密顿通路:</h5><p>经过图中所有顶点一次且仅一次的通路.</p>
<h5 id="哈密顿回路"><a href="#哈密顿回路" class="headerlink" title="哈密顿回路:"></a>哈密顿回路:</h5><p>经过图中所有顶点一次且仅一次的回路.</p>
<h5 id="哈密顿图"><a href="#哈密顿图" class="headerlink" title="哈密顿图:"></a>哈密顿图:</h5><p>具有哈密顿回路的图.</p>
<h5 id="半哈密顿图"><a href="#半哈密顿图" class="headerlink" title="半哈密顿图:"></a>半哈密顿图:</h5><p>具有哈密顿通路而无哈密顿回路的图.</p>
<h5 id="几点说明"><a href="#几点说明" class="headerlink" title="几点说明"></a>几点说明</h5><ul>
<li><p>平凡图是哈密顿图.</p>
</li>
<li><p>哈密顿通路是基本通路，哈密顿回路是基本回路.</p>
</li>
<li><p>环与平行边不影响图的哈密顿性.</p>
</li>
</ul>
<h5 id="注意点-1"><a href="#注意点-1" class="headerlink" title="注意点"></a>注意点</h5><ul>
<li><p>每个哈密尔顿图都连通</p>
</li>
<li><p>哈密尔顿图的每个顶点的度数大于等于2</p>
</li>
<li><p>一个图若有哈密尔顿回路，则 度数为2的顶点所关联的两条边一定在哈密尔顿回路上。 </p>
</li>
<li><p>若某图有哈密尔顿回路，则 必须在该哈密尔顿回路中出 现的边不能构成一个未经过 所有顶点的回路</p>
</li>
</ul>
<h5 id="定理-2"><a href="#定理-2" class="headerlink" title="定理"></a>定理</h5><ul>
<li><p>若G是(<em>p</em>, <em>q</em>)简单图，且p ≥ 3，若对于G中任意二点<em>u</em>, <em>v</em>都有</p>
<p><em>d</em>(<em>u</em>) + <em>d</em>(<em>v</em>) ≥ <em>p</em> </p>
<p>则G是哈密尔顿图。</p>
</li>
<li><p>若G是(<em>p</em>, <em>q</em>)简单图，且p ≥ 2，若对于G中任意二点<em>u</em>, <em>v</em>都有</p>
<p><em>d</em>(<em>u</em>) + <em>d</em>(<em>v</em>) ≥ <em>p</em>*-*1</p>
<p>则G是半哈密尔顿图。</p>
</li>
<li><p>设G是哈密尔顿图，从G中任意去除<em>k</em>个点以及与之关</p>
<p>联的边后所得到的图记为G’，则G’的连通分图数不超过<em>k</em>。</p>
<p>也即对于任意<em>V</em>1Ì<em>V</em>且<em>V</em>1¹Æ, 均有 <em>p</em>(<em>G</em>-<em>V</em>1)£|<em>V</em>1|.</p>
<p>证：设<em>C</em>为<em>G</em>中一条哈密顿回路, 有<em>p</em>(<em>C</em>-<em>V</em>1) £ |<em>V</em>1|. 又因为</p>
<p><em>C</em>Í<em>G,</em> 故 <em>p</em>(<em>G</em>-<em>V</em>1) £ <em>p</em>(<em>C</em>-<em>V</em>1) £ |<em>V</em>1|.</p>
</li>
</ul>
]]></content>
      <categories>
        <category>学科学习</category>
        <category>离散数学</category>
      </categories>
      <tags>
        <tag>人工智能</tag>
        <tag>离散数学</tag>
      </tags>
  </entry>
  <entry>
    <title>网页介绍</title>
    <url>/2021/06/17/%E7%BD%91%E9%A1%B5%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h2 id="网页介绍"><a href="#网页介绍" class="headerlink" title="网页介绍"></a>网页介绍</h2><p>网页制作人： 玛卡巴卡 （虞程龙）</p>
<p>本网页的内容主要为</p>
<ul>
<li><strong>人工智能</strong></li>
</ul>
<p>主要以西瓜书为主，在里面进行人工智能的知识的定期推送，欢迎访问！</p>
<ul>
<li><strong>初&#x2F;中级财务会计</strong></li>
</ul>
<p>纯中级财务的学习，初级财务计将于8月份开始部署计将于8月份开始，欢迎访问！</p>
<ul>
<li><strong>各个作业的代码</strong></li>
</ul>
<p>程序设计课的作业，你懂的撒！</p>
<p>欢迎收藏评论打赏！</p>
<p>如果有任何问题欢迎来联系我！</p>
<p>联系方式左侧栏目~~~</p>
]]></content>
      <tags>
        <tag>网页简介</tag>
      </tags>
  </entry>
  <entry>
    <title>留出法</title>
    <url>/2021/05/26/%E7%95%99%E5%87%BA%E6%B3%95/</url>
    <content><![CDATA[<h3 id="评估方式"><a href="#评估方式" class="headerlink" title="评估方式"></a>评估方式</h3><p>机器学习面临的问题通常是NP难甚至更难,而有效的学习算法必然是在多项式时间内</p>
<p>运行完成.若可彻底避免过拟合,则通过经验误差最小化就能获最优解,这就意味着我们构造性地证明了 “P&#x3D;NP”;因此,只要相信”P不等于NP” ,过拟合就不可避免.</p>
<p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@0f5f2c0531f8b263421ab5533eda03784c895a45/2021/05/24/3b84d82bb53f60acb09ab1c054c365d6.png"></p>
<h4 id="输出法"><a href="#输出法" class="headerlink" title="输出法"></a>输出法</h4><p>“留出法”(hold-out)直接将数据集D划分为两个互斥的集合,其中一个集合作为训练集5,另一个作为测试集T,即D &#x3D; SUT, snT &#x3D; 0.在S上训练出模型后,用T来评估其测试误差,作为对泛化误差的估计.<br>以二分类任务为例.假定D包含1000个样本,将其划分为S包含700个样本,T包含300个样本.用S进行训练后.如果模型在T上有90个样本分类错误,那么其错误率为(90&#x2F;300) x 100% &#x3D; 30%,相应的,精度为1 — 30% &#x3D; 70%.<br>需注意的是,训练&#x2F;测试集的划分要尽可能保持数据分布的一致性,避免因数据划分过程引入额外的偏差而对最终结果产生影响,例如在分类任务中至少要保持样本的类别比例相似.如果从采样(S皿pung)的角度来看待数据集的划分过程,则保留类别比例的采样方式通常称为”分层采样”(stratified sampling). 例如通过对D进行分层采样而获得含70%样本的训练集S和含30%样本的测试集T,若D包含500个正例、500个反例,则分层采样得到的s应包含350个正例、350个反例,而T则包含150个正例和150个反例;若5’, T中样本类别比例差别很大,则误差估计将由于训练&#x2F;测试数据分布的差异而产生偏差.<br>另一个需注意的问题是,即便在给定训练&#x2F;测试集的样本比例后,仍存在多种划分方式对初始数据集D进行分割.例如在上面的例子中,可以把P中的样本排序,然后把前350个正例放到训练集中,也可以把最后350个正例放到训练集中,……这些不同的划分将导致不同的训练&#x2F;测试集,相应的,模型评估的结果也会有差别.因此,单次使用留出法得到的估计结果往往不够稳定可靠,在使用留出法时,一般要采用若干次随机划分、重复进行实验评估后取平均值作为留出法的评估结果.例如进行100次随机划分,每次产生一个训练&#x2F;测试集用于实验评估,100次后就得到100个结果,而留出法返回的则是这100个结果的平均.</p>
]]></content>
      <categories>
        <category>人工智能学习</category>
        <category>理论技术</category>
        <category>评估方法</category>
      </categories>
      <tags>
        <tag>评估方式</tag>
        <tag>输出法</tag>
      </tags>
  </entry>
  <entry>
    <title>股票入门基础知识</title>
    <url>/2021/11/23/%E8%82%A1%E7%A5%A8%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<h1 id="股票入门知识"><a href="#股票入门知识" class="headerlink" title="股票入门知识"></a>股票入门知识</h1><p>股票是一种由股份制有限公司签发的用以证明股东所持股份的凭证，它表明股票的持有者对股份公司的部分资本拥有所有权。由于股票包含有经济利益，且可以上市流通转让，股票也是一种有价证券。我国上市公司的股票是在上海证券交易所和<a href="https://baike.baidu.com/item/%E6%B7%B1%E5%9C%B3%E8%AF%81%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80/1248022">深圳证券交易所</a>发行，投资者一般在证券经纪公司开户交易。</p>
<p>常见的股票分析指标为MACD KDJ RSI等指标，主要用于股市及标的的分析与研判。</p>
<h2 id="术语"><a href="#术语" class="headerlink" title="术语"></a>术语</h2><h3 id="价格"><a href="#价格" class="headerlink" title="价格"></a>价格</h3><ul>
<li><a href="https://baike.baidu.com/item/%E5%BC%80%E7%9B%98%E4%BB%B7"><strong>开盘价</strong></a>：以竞价阶段第一笔交易价格为开盘价，如果没有成交，以前一日收盘价为开盘价。</li>
<li><a href="https://baike.baidu.com/item/%E6%94%B6%E7%9B%98%E4%BB%B7"><strong>收盘价</strong></a>：指每天成交中最后一笔股票的价格，也就是收盘价格。</li>
<li><strong>最高价</strong>：是指当日所成交的价格中的最高价位。有时最高价只有一笔，有时也不止一笔。</li>
<li><strong>最低价</strong>：是指当日所成交的价格中的最低价位。有时最低价只有一笔，有时也不止一笔。</li>
</ul>
<h3 id="普通股"><a href="#普通股" class="headerlink" title="普通股"></a>普通股</h3><p><a href="https://baike.baidu.com/item/%E6%99%AE%E9%80%9A%E8%82%A1">普通股</a>是指在公司的经营管理和盈利及财产的分配上享有普通权利的股份，代表满足所有债权偿付要求及优先股股东的收益权与求偿权要求后对企业盈利和剩余财产的索取权，它构成公司资本的基础，是股票的一种基本形式，也是发行量最大，最为重要的股票。</p>
<p>在上海和<a href="https://baike.baidu.com/item/%E6%B7%B1%E5%9C%B3%E8%AF%81%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80/1248022">深圳证券交易所</a>上交易的股票都是普通股。普通股股票持有者按其所持有股份比例享有以下基本权利：</p>
<ol>
<li>公司决策参与权。普通股股东有权参与股东大会，并有建议权、表决权和选举权，也可以委托他人代表其行使其股东权利。</li>
<li>利润分配权。普通股股东有权从公司利润分配中得到股息。普通股的股息是不固定的，由公司赢利状况及其分配政策决定。普通股股东必须在优先股股东取得固定股息之后才有权享受股息分配权。</li>
<li><a href="https://baike.baidu.com/item/%E4%BC%98%E5%85%88%E8%AE%A4%E8%82%A1%E6%9D%83/8333187">优先认股权</a>。如果公司需要扩张而增发普通股股票时，现有普通股股东有权按其持股比例，以低于市价的某一特定价格优先购买一定数量的新发行股票，从而保持其对企业所有权的原有比例。</li>
<li><a href="https://baike.baidu.com/item/%E5%89%A9%E4%BD%99%E8%B5%84%E4%BA%A7%E5%88%86%E9%85%8D%E6%9D%83/10561826">剩余资产分配权</a>。当公司破产或清算时，若公司的资产在偿还欠债后还有剩余，其剩余部分按先优先股股东、后普通股股东的顺序进行分配。</li>
</ol>
<h3 id="优先股"><a href="#优先股" class="headerlink" title="优先股"></a>优先股</h3><p>是相对于普通股而言的。主要指在利润分红及剩余财产分配的权利方面，优先于普通股。</p>
<p><a href="https://baike.baidu.com/item/%E4%BC%98%E5%85%88%E8%82%A1">优先股</a>有两种权利：</p>
<ol>
<li>在公司分配盈利时，拥有优先股的股东比持有普通股的股东分配在先，而且享受固定数额的股息，即优先股的股息率都是固定的，普通股的红利却不固定，视公司盈利情况而定，利多多分，利少少分，无利不分，上不封顶，下不保底。</li>
<li>在公司解散，分配剩余财产时，优先股在普通股之前分配。</li>
</ol>
<h3 id="绩优股"><a href="#绩优股" class="headerlink" title="绩优股"></a>绩优股</h3><p>是指那些业绩优良，但增长速度较慢的公司的股票。这类公司有实力抵抗经济衰退，但这类公司并不能给你带来振奋人心的利润。因为这类公司业务较为成熟，不需要花很多钱来扩展业务，所以投资这类公司的目的主要在于拿股息。另外，投资这类股票时，市盈率不要太高，同时要注意股价在历史上经济不景气时波动的记录。</p>
<h3 id="后配股"><a href="#后配股" class="headerlink" title="后配股"></a>后配股</h3><p>后配股是在利益或利息分红及剩余财产分配时比普通股处于劣势的股票，一般是在普通股分配之后，对剩余利益进行再分配。如果公司的盈利巨大，后配股的发行数量又很有限，则购买后配股的股东可以取得很高的收益。发行后配股，一般所筹措的资金不能立即产生收益，投资者的范围又受限制，因此利用率不高。后配股一般在下列情况下发行：</p>
<ol>
<li>公司为筹措扩充设备资金而发行新股票时，为了不减少对旧股的分红，在新设备正式投用前，将新股票作后配股发行；</li>
<li>企业兼并时，为调整合并比例，向被兼并企业的股东交付一部分后配股；</li>
<li>在有政府投资的公司里，私人持有的股票股息达到一定水平之前，把政府持有的股票作为后配股。</li>
</ol>
<h4 id="报价"><a href="#报价" class="headerlink" title="报价"></a>报价</h4><p>报价：是证券市场上交易者在某一时间内对某种证券报出的最高进价或最低出价，报价代表了买卖双方所愿意出的最高价格，进价为买者愿买进某种证券所出的价格，出价为卖者愿卖出的价格。报价的次序习惯上是报进价格在先，报出价格在后。在<a href="https://baike.baidu.com/item/%E8%AF%81%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80/254828">证券交易所</a>中，报价有四种：一是口喊，二是手势表示，三是申报纪录表上填明，四是输入电子计算机显示屏。</p>
<h2 id="涨跌幅限制"><a href="#涨跌幅限制" class="headerlink" title="涨跌幅限制"></a>涨跌幅限制</h2><p><a href="https://baike.baidu.com/item/%E6%B6%A8%E8%B7%8C%E5%B9%85%E9%99%90%E5%88%B6/3263027">涨跌幅限制</a>：是指在一个交易日内，除上市首日证券外，证券的交易价格相对上一交易日收市价格的涨跌幅度不得超过规定幅度；A股主板±10%，科创板与创业板±20%，超过涨跌限价的委托为无效委托。</p>
<p>**<a href="https://baike.baidu.com/item/%E5%A4%9A%E5%A4%B4">多头</a><strong><strong>、</strong></strong><a href="https://baike.baidu.com/item/%E5%A4%9A%E5%A4%B4%E5%B8%82%E5%9C%BA">多头市场</a>**<strong>：</strong>多头是指投资者对股市看好，预计股价将会看涨，于是趁低价时买进股票，待股票上涨至某一价位时再卖出，以获取差额收益。</p>
<p>一般来说，人们通常把股价长期保持上涨势头的股票市场称为多头市场。多头市场股价变化的主要特征是一连串的大涨小跌。</p>
<p><a href="https://baike.baidu.com/pic/%E8%82%A1%E7%A5%A8%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/4986450/0/c8ea15ce36d3d53949196da13e87e950352ab0a8?fr=lemma&ct=single"><img src="https://bkimg.cdn.bcebos.com/pic/c8ea15ce36d3d53949196da13e87e950352ab0a8?x-bce-process=image/resize,m_lfit,w_440,limit_1/format,f_auto" alt="空头股票走势"></a>空头股票走势</p>
<p><strong>空头、空头市场</strong>：<a href="https://baike.baidu.com/item/%E7%A9%BA%E5%A4%B4/13825859">空头</a>是投资者和股票商认为现时股价虽然较高，但对股市前景看坏，预计股价将会下跌，于是把借来的股票及时卖出，待股价跌至某一价位时再买进，以获取差额收益。</p>
<p>采用这种先卖出后买进、从中赚取差价的交易方式称为空头。人们通常把股价长期呈下跌趋势的股票市场称为空头市场，空头市场股价变化的特征是一连串的大跌小涨。</p>
<p><strong>洗盘</strong>：投资者先把股价大幅度杀低，使大批小额<a href="https://baike.baidu.com/item/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B5%84%E8%80%85/8618309">股票投资者</a>(散户)产生恐慌而抛售股票，然后再把股价抬高，以便乘机渔利。</p>
<p><strong>回档</strong>：在股市上，股价呈不断上涨趋势，终因股价上涨速度过快而反转回跌到某一价位，这一调整现象称为回档。一般来说，股票的回档幅度要比上涨幅度小，通常是反转回跌到前一次上涨幅度的三分之一左右时又恢复原来上涨趋势。</p>
<p><strong>反弹</strong>：在股市上，股价呈不断下跌趋势，终因股价下跌速度过快而反转回升到某一价位的调整现象称为反弹。一般来说，股票的反弹幅度要比下跌幅度小，通常是反弹到前一次下跌幅度的三分之一左右时，又恢复原来的下跌趋势。</p>
<p><strong>买空</strong>：投资者预测股价将会上涨，但自有资金有限不能购进大量股票于是先缴纳部分保证金，并通过经纪人向银行融资以买进股票，待股价上涨到某一价位时再卖，以获取差额收益。</p>
<p><strong>卖空</strong>：是投资者预测股票价格将会下跌，于是向经纪人交付抵押金，并借入股票抢先卖出。待股价下跌到某一价位时再买进股票，然后归还借入股票，并从中获取差额收益。</p>
<p><strong>多杀多</strong>：即多头杀多头。股市上的投资者普遍认为当天股价将会上涨于是大家抢多头帽子买进股票，然而股市行情事与愿违，股价并没有大幅度上涨，无法高价卖出股票，等到股市结束前，持股票者竞相卖出，造成股市收盘价大幅度下跌的局面。</p>
<p><strong>轧空</strong>：即空头倾轧空头。股市上的股票持有者一致认为当天股票将会大下跌，于是多数人去抢卖空头帽子卖出股票，然而当天股价并没有大幅度下跌，无法低价买进股票。股市结束前，做空头的只好竞相补进，从而出现收盘价大幅度上升的局面。</p>
<p><strong>跳空</strong>：指受强烈利多或利空消息刺激，股价开始大幅度跳动。跳空通常在股价大变动的开始或结束前出现。</p>
<p><strong>补空</strong>：是空头买回以前卖出的股票的行为。</p>
<p><strong>套牢</strong>：是指进行股票交易时所遭遇的交易风险。例如投资者预计股价将上涨，但在买进后股价却一直呈下跌趋势，这种现象称为多头套牢。相反，投资者预计股价将下跌，将所借股票放空卖出，但股价却一直上涨，这种现象称为空头套牢。</p>
<p><strong>阻力线</strong>：股市受利多信息的影响，股价上涨至某一价格时，做多头的认为有利可图，但实际却有大量卖出，使股价至此停止上升，甚至出现回跌。股市上一般将这种遇到阻力时的价位称为关卡，股价上升时的关卡称为阻力线。</p>
<p><strong>支撑线</strong>：股市受利空信息的影响，股价跌至某一价位时，做空头的认为有利可图，大量买进股票，使股价不再下跌，甚至出现回升趋势。股价下跌时的关卡称为支撑线。</p>
<p><strong>IPO</strong>就是initial public offerings(首次<a href="https://baike.baidu.com/item/%E5%85%AC%E5%BC%80%E5%8F%91%E8%A1%8C%E8%82%A1%E7%A5%A8/3783642">公开发行股票</a>）。<a href="https://baike.baidu.com/item/%E9%A6%96%E6%AC%A1%E5%85%AC%E5%BC%80%E6%8B%9B%E8%82%A1/3519831">首次公开招股</a>是指一家企业第一次将它的股份向公众出售。通常，股份公司根据出具的招股书或登记声明中约定的条款通过承销商进行销售。一般来说，一旦首次公开上市完成后，这家公司就可以申请到证券交易所或报价系统挂牌交易。</p>
<p><strong>涨停板</strong></p>
<p>证券市场中交易当天价格的最高限度称为涨停板，涨停板时的价格叫涨停板价.</p>
<h2 id="NASDAQ"><a href="#NASDAQ" class="headerlink" title="NASDAQ"></a>NASDAQ</h2><p>音译名“<a href="https://baike.baidu.com/item/%E7%BA%B3%E6%96%AF%E8%BE%BE%E5%85%8B">纳斯达克</a>”，全称是美国”全国证券交易商协会自动报价系统”。它建于1971年，是世界上第一个电子化证券市场。纳斯达克的发展与美国高技术产业的成长是相辅相成的，被奉为”美国新经济的摇篮”。</p>
<p>ST股票</p>
<p>沪深交易所在1998年4月22日宣布，将对财务状况或其它状况出现异常的上市公司股票交易进行特别处理(Special treatment)，由于”特别处理”，在简称前冠以”ST”，因此这类股票称为ST股票.</p>
<p>T+1交收制度</p>
<p>自1995年1月1日起，为了保证股票市场的稳定，防止过度投机，股市实行”T+1”交收制度，当日买进的股票，要到下一个交易日才能卖出，同时对资金仍然实行”T+0”，即当日回笼的资金马上可以使用。这种交收方式适用于我国的A股、基金、国债交易。</p>
<h2 id="股票交易"><a href="#股票交易" class="headerlink" title="股票交易"></a>股票交易</h2><p>一字型：即<a href="https://baike.baidu.com/item/%E5%BC%80%E7%9B%98%E4%BB%B7">开盘价</a>、<a href="https://baike.baidu.com/item/%E6%94%B6%E7%9B%98%E4%BB%B7">收盘价</a>、最高价、最低价在同一价位。可分为以下几种情况：（1）<a href="https://baike.baidu.com/item/%E6%B6%A8%E5%81%9C/586">涨停</a>：开盘即以涨停价开出，至收盘为止，涨停未被打开过，全天均以最高价成交，说明买盘旺盛，该股属于强势股。（2）跌停：开盘即以跌停价开出，至收盘为止，跌停未被打开过，全天均以最低价成交，说明卖盘沉重，该股属于弱势股。（3）交易非常冷清，全日交易只有一档价位成交。</p>
<h2 id="交易时间"><a href="#交易时间" class="headerlink" title="交易时间"></a>交易时间</h2><p>周一至周五 (法定休假日除外)</p>
<p>上午9：30 –11：30 下午13：00 – 15：00</p>
<p>竞价成交</p>
<ol>
<li>竞价原则：价格优先、时间优先。价格较高的买进委托优先于价格较低买进委托，价格较低卖出委托优先于较高的卖出委托；同价位委托，则按时间顺序优先。</li>
<li>竞价方式：上午9：15–9：25进行集合竞价；上午9：30–11：30、下午13：00–15：00进行连续竞价 (对有效委托逐笔处理)。</li>
</ol>
<h2 id="交易单位"><a href="#交易单位" class="headerlink" title="交易单位"></a>交易单位</h2><ol>
<li>股票的交易单位为“股”，100股&#x3D;1手，委托买入数量必须为100股或其整数倍；</li>
<li>基金的交易单位为“份”，100份&#x3D;1手，委托买入数量必须为100份或其整数倍；</li>
<li>国债现券和<a href="https://baike.baidu.com/item/%E5%8F%AF%E8%BD%AC%E6%8D%A2%E5%80%BA%E5%88%B8/397601">可转换债券</a>的交易单位为“手”，1000元面额&#x3D;1手，委托买入数量必须为1手或其整数倍；</li>
<li>当委托数量不能全部成交或分红送股时可能出现零股 (不足1手的为零股)，零股只能委托卖出，不能委托买入零股。</li>
</ol>
<h2 id="报价单位"><a href="#报价单位" class="headerlink" title="报价单位"></a>报价单位</h2><p>股票以“股”为报价单位；基金以“份”为报价单位；债券以“手”为报价单位。例：行情显示“深发展A”30元，即“深发展A”股现价30元&#x2F;股。</p>
<p>交易委托价格最小变动单位：A股、基金、债券为人民币0.01元；深B为港币0.01元；沪B为美元0.001元；上海债券回购为人民币0.005元。</p>
<h2 id="涨跌幅限制-1"><a href="#涨跌幅限制-1" class="headerlink" title="涨跌幅限制"></a>涨跌幅限制</h2><p>在一个交易日内，除首日上市证券外，每只证券的交易价格相对上一个交易日收市价的涨跌幅度不得超过10%，超过涨跌限价的委托为无效委托。</p>
<p>“ST”和“*ST”</p>
<p>在股票名称前冠以“ST”和&quot;*ST&quot;的股票表示该上市公司最近两年连续亏损，或亏损一年，但净资产跌破面值、公司经营过程中出现重大违法行为等情况之一，交易所对该公司股票交易进行特别处理。股票交易日涨跌幅限制5%。</p>
<h2 id="委托撤单"><a href="#委托撤单" class="headerlink" title="委托撤单"></a>委托撤单</h2><p>在委托未成交之前，投资者可以撤销委托。</p>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>股市入门知识之新手操盘需要注意的问题，新手初入股市，正处于懵懵懂懂的状态，操盘投资错漏百出，往往会白交很多学费，所以，新手在操盘的时候需要注意很多问题，下面来讲解一些最基础最需要注意的问题，希望能够帮助新手投资者少走弯路。</p>
<ol>
<li><strong>勇于面对股市</strong></li>
</ol>
<p>投资者既然选择投身股市，就应该有勇于面对股市的决心，不要出现害怕等负面情绪，投资股票无非就是盈与亏的问题，依据自己的指标出现买入点即果断建仓买入，出现卖点时，即毫不犹豫地抛出。</p>
<ol start="2">
<li><strong>投资勿后悔</strong></li>
</ol>
<p>股市行情大盘中影响股价的走势有多种因素，常常存在随机性，因此每一次的操盘投资并不能确保万无一失，但是已经做出自己分析后的投资就不要再感到后悔，徒增负面情绪影响自己下一步的操作，新手投资者要把输赢看成是兵家常事，坚决设立止盈点及止损点。</p>
<ol start="3">
<li><strong>保持正确投资心态</strong></li>
</ol>
<p>提醒各位股民朋友，投资要保持正确的心态。我们都知道，恐惧与贪婪是人的天性，也是投资的大忌。对于新手投资者来说，克服自身负面心态成为了首要问题。有获利行情就要勇于追涨，畏首畏尾终将被淘汰;同时，在选股方面不贪多，根据资金情况选择有投资价值的个股，出现涨势行情时应量力而为，切勿盲目透支;到了止盈点位就果断抛出。</p>
<ol start="4">
<li><strong>善于等待时机</strong></li>
</ol>
<p>成功的投资者往往能耐得住寂寞，静候良机到来。股市常常存在反复的波段行情，所以不要心急。投资者难免会有一夜暴富的心理，恨不得自己的股票天天涨停板，于是整天满仓追涨杀跌，然而不知不觉亏损已经过半。此时才恍然大悟，该继续持有的股卖了，该抛的股还在手中，没有等到相应的操作时机，悔之晚矣。</p>
]]></content>
      <categories>
        <category>理财</category>
        <category>股票</category>
      </categories>
      <tags>
        <tag>理财</tag>
        <tag>股票</tag>
      </tags>
  </entry>
  <entry>
    <title>货币资金</title>
    <url>/2021/06/09/%E8%B4%A7%E5%B8%81%E8%B5%84%E9%87%91/</url>
    <content><![CDATA[<h2 id="资产分类依据"><a href="#资产分类依据" class="headerlink" title="资产分类依据"></a>资产分类依据</h2><h3 id="流动资产"><a href="#流动资产" class="headerlink" title="流动资产"></a>流动资产</h3><p><strong>定义</strong></p>
<p>指预计能够在一个正常营业周期内变现,出售或耗用,或主要为交易目的而持有的资产.是企业资产中必不可少的组成部分。</p>
<blockquote>
<p>有后者之一即可</p>
<ul>
<li>预计在一个正常营业周期内变现、出售或耗用</li>
<li>主要为交易目的而持有</li>
<li>预计在资产负债表日起一年内（含一年，下同）变现</li>
<li>自资产负债表日起一年内，交换其他资产或清偿负债的能力不受限制的现金或现金等价物</li>
</ul>
</blockquote>
<p><strong>分类</strong></p>
<blockquote>
<ul>
<li>货币资金</li>
<li>交易性金融资产</li>
<li>应收及预付款项</li>
<li>存款</li>
</ul>
</blockquote>
<h3 id="非流动资产"><a href="#非流动资产" class="headerlink" title="非流动资产"></a>非流动资产</h3><p><strong>定义</strong></p>
<p>如果资产预计不能在一个正常营业周期内变现、出售或耗用,或者持有资产的目的不是为了交易.就应归类为非流动资产。</p>
<p><strong>分类</strong></p>
<blockquote>
<ul>
<li>债权投资</li>
<li>其他债券投资</li>
<li>长期应收款</li>
<li>长期股权投资</li>
<li>投资性房地产</li>
<li>固定资产</li>
<li>在建工程</li>
<li>工程物资</li>
<li>生物资产</li>
<li>无形资产</li>
<li>商誉</li>
<li>递延所得税资产</li>
<li>其他权益工具投资</li>
</ul>
</blockquote>
<h3 id="货币性资产"><a href="#货币性资产" class="headerlink" title="货币性资产"></a>货币性资产</h3><p>是指企业持有的货币资金和将以固定或可确定的金额收取的资产。</p>
<p>包括货币资金和将以同定或可确定的金额收取的资产。</p>
<p><strong>分类</strong></p>
<blockquote>
<ul>
<li>库存现金</li>
<li>银行存款</li>
<li>应收账款</li>
<li>应收票据</li>
<li>债券投资</li>
</ul>
</blockquote>
<h3 id="非货币性资产"><a href="#非货币性资产" class="headerlink" title="非货币性资产"></a>非货币性资产</h3><p>指货币性资产以外的资产</p>
<p><strong>分类</strong></p>
<blockquote>
<ul>
<li>存货</li>
<li>固定资产</li>
<li>无形资产</li>
<li>股权投资</li>
<li>其他债权投资</li>
</ul>
</blockquote>
<h2 id="现金"><a href="#现金" class="headerlink" title="现金"></a>现金</h2><h3 id="现金-1"><a href="#现金-1" class="headerlink" title="现金"></a>现金</h3><p>狭义表示库存现金，广义上为存放在企业并由出纳人员保管的现金，包括库存的人民币和各种外币，而财务报告（现金流量表）涉及的现金是广义的现金和现金等价物。</p>
<p><strong>特点</strong></p>
<p>现金是流动性最强的一种货币性资产，它可以随时用以购买所需物资，支付日常零星开支、偿还债务，也可以随时存入银行。</p>
<h3 id="备用金"><a href="#备用金" class="headerlink" title="备用金"></a>备用金</h3><p>备用金是指企业预付给职工和内部有关单位用作差旅费、零星采购和零星开支，事后需要报销的款项。</p>
<p><strong>备用金的核算</strong></p>
<ul>
<li>科目</li>
</ul>
<p>应设置“其他应收款”科目</p>
<ul>
<li><p>方式</p>
<ul>
<li><p>随借随用，用后报销的一般备用金制度</p>
<p>该方法适用于不经常使用备用金的单位和个人</p>
</li>
<li><p>定额备用金制度</p>
<p>适用于经常使用备用金的单位和个人。定额备用金制度的特点是对经常使用备用金的部门或车间,规定一个备用金定额</p>
<p>会计处理时：按定额拨付现金时.</p>
<p>借记”其他应收款”或”备用金”科目.</p>
<p>贷记”库存现金”科目。</p>
<p>报销时.根据报销单据付给现金,补足定额</p>
<p>贷记”库存现金”科目.</p>
<p>借记有关科目</p>
</li>
</ul>
</li>
</ul>
<h2 id="银行存款"><a href="#银行存款" class="headerlink" title="银行存款"></a>银行存款</h2><h2 id="其他货币资金"><a href="#其他货币资金" class="headerlink" title="其他货币资金"></a>其他货币资金</h2>]]></content>
      <categories>
        <category>会计</category>
        <category>中级财务会计</category>
        <category>货币资金</category>
      </categories>
      <tags>
        <tag>中级财务会计</tag>
      </tags>
  </entry>
  <entry>
    <title>贪吃蛇工程文件（即和视频中一样）</title>
    <url>/2021/05/31/%E8%B4%AA%E5%90%83%E8%9B%87%E5%B7%A5%E7%A8%8B%E6%96%87%E4%BB%B6%EF%BC%88%E6%87%92%E5%BE%97%E6%8A%84%EF%BC%89/</url>
    <content><![CDATA[<h2 id="用于直接提交作业"><a href="#用于直接提交作业" class="headerlink" title="用于直接提交作业"></a>用于直接提交作业</h2><p>运行文件为解压后文件夹内的Snake_console.exe</p>
<p><img src="/2021/05/31/%E8%B4%AA%E5%90%83%E8%9B%87%E5%B7%A5%E7%A8%8B%E6%96%87%E4%BB%B6%EF%BC%88%E6%87%92%E5%BE%97%E6%8A%84%EF%BC%89/Snake_console.png" alt="img"></p>
<p><a href="/file/Snake_console.rar" title="C源码下载">点击下载</a></p>
]]></content>
      <categories>
        <category>程序设计作业</category>
        <category>贪吃蛇作业</category>
        <category>修改前</category>
        <category>文件区</category>
      </categories>
      <tags>
        <tag>程序设计实践课程作业</tag>
        <tag>贪吃蛇</tag>
      </tags>
  </entry>
  <entry>
    <title>贪吃蛇：snake.c</title>
    <url>/2021/05/30/%E8%B4%AA%E5%90%83%E8%9B%87%EF%BC%9Asnake-c/</url>
    <content><![CDATA[<h3 id="以下为源代码"><a href="#以下为源代码" class="headerlink" title="以下为源代码"></a>以下为源代码</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;snake.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 全局变量</span></span><br><span class="line">Snake snake; <span class="comment">//定义蛇结构体变量</span></span><br><span class="line">Food food;   <span class="comment">//定义食物结构体变量</span></span><br><span class="line"><span class="type">char</span> now_Dir = RIGHT; <span class="comment">//当前蛇头方向</span></span><br><span class="line"><span class="type">char</span> direction = RIGHT; <span class="comment">//预期蛇头方向</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">Menu</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">12</span>);   <span class="comment">//定位光标的位置</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;欢迎来到贪吃蛇小游戏&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1. 开始游戏&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;2. 帮助&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;3. 关于&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">20</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;其他任意键退出游戏&quot;</span>);</span><br><span class="line">    Hide();    <span class="comment">//隐藏光标</span></span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="type">int</span> result = <span class="number">0</span>;</span><br><span class="line">    ch = _getch();</span><br><span class="line">    <span class="keyword">switch</span> (ch)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>: result = <span class="number">1</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>: result = <span class="number">2</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>: result = <span class="number">3</span>; <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//光标定位函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GotoXY</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    HANDLE hout;</span><br><span class="line">    COORD cor;</span><br><span class="line">    hout = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">    cor.X = x;</span><br><span class="line">    cor.Y = y;</span><br><span class="line">    SetConsoleCursorPosition(hout, cor);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//隐藏光标</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Hide</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    HANDLE hout = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">    CONSOLE_CURSOR_INFO cor_info = &#123; <span class="number">1</span>, <span class="number">0</span> &#125;;</span><br><span class="line">    SetConsoleCursorInfo(hout, &amp;cor_info);<span class="comment">//隐藏光标</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">About</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    GotoXY(<span class="number">30</span>, <span class="number">12</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;杭州电子科技大学--程序设计综合实践作业&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;贪吃蛇-控制台游戏&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按任意键返回上级菜单&quot;</span>);</span><br><span class="line">    Hide();    <span class="comment">//隐藏光标</span></span><br><span class="line">    <span class="type">char</span> ch = _getch();</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Help</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">12</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;w 上                      &quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;s 下                      &quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a 左                      &quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;d 右                      &quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">45</span>, <span class="number">22</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按任意键返回上级菜单      &quot;</span>);</span><br><span class="line">    <span class="type">char</span> ch = _getch();</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitMap</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Hide();   <span class="comment">//隐藏光标</span></span><br><span class="line">    <span class="comment">//设置蛇头位置在地图的中心</span></span><br><span class="line">    snake.snakeNode[<span class="number">0</span>].x = MAP_WIDTH / <span class="number">2</span> - <span class="number">1</span>;</span><br><span class="line">    snake.snakeNode[<span class="number">0</span>].y = MAP_HEIGHT / <span class="number">2</span> - <span class="number">1</span>;</span><br><span class="line">    GotoXY(snake.snakeNode[<span class="number">0</span>].x, snake. snakeNode[<span class="number">0</span>].y); <span class="comment">//光标移动到蛇头位置</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;@&quot;</span>); <span class="comment">//蛇头</span></span><br><span class="line">    snake.length = <span class="number">3</span>; <span class="comment">//初始长度</span></span><br><span class="line">    snake.speed = <span class="number">250</span>; <span class="comment">//初始速度</span></span><br><span class="line">    now_Dir = RIGHT; <span class="comment">// 当前蛇头的朝向</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//显示蛇的身体</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; snake.length; i++) &#123;</span><br><span class="line">        <span class="comment">//设置蛇身的纵坐标位置和蛇头位置相同</span></span><br><span class="line">        snake.snakeNode[i].y = snake.snakeNode[i - <span class="number">1</span>].y;</span><br><span class="line">        snake.snakeNode[i].x = snake.snakeNode[i - <span class="number">1</span>].x - <span class="number">1</span>;</span><br><span class="line">        GotoXY(snake.snakeNode[i].x, snake.snakeNode[i].y);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//生成地图上下边界</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; MAP_WIDTH; i++) &#123;</span><br><span class="line">        GotoXY(i, <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">        GotoXY(i, MAP_HEIGHT - <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;-&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; MAP_HEIGHT - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        GotoXY(<span class="number">0</span>, i);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;|&quot;</span>);</span><br><span class="line">        GotoXY(MAP_WIDTH - <span class="number">1</span>, i);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;|&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    PrintFood();  <span class="comment">//生成食物</span></span><br><span class="line">    GotoXY(<span class="number">50</span>, <span class="number">5</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;当前得分：0&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintFood</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> flag = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (flag) &#123;</span><br><span class="line">        flag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//生成食物的随机坐标</span></span><br><span class="line">        food.x = rand() % (MAP_WIDTH - <span class="number">2</span>) + <span class="number">1</span>;</span><br><span class="line">        food.y = rand() % (MAP_HEIGHT - <span class="number">2</span>) + <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//循环判断食物的位置能否而后蛇的位置重叠，如果重叠则重新设置食物的位置</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt;= snake.length - <span class="number">1</span>; k++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (snake.snakeNode[k].x == food.x &amp;&amp; snake.snakeNode[k].y == food.y) &#123;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    GotoXY(food.x, food.y);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;o&quot;</span>); <span class="comment">//此处的食物用o来表示</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">MoveSnake</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Snakenode temp;</span><br><span class="line">    <span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line">    temp = snake.snakeNode[snake.length - <span class="number">1</span>]; <span class="comment">//记录蛇尾</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = snake.length - <span class="number">1</span>; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">        snake.snakeNode[i] = snake.snakeNode[i - <span class="number">1</span>];</span><br><span class="line">    GotoXY(snake.snakeNode[<span class="number">1</span>].x, snake.snakeNode[<span class="number">1</span>].y);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//响应键盘的操作</span></span><br><span class="line">    <span class="keyword">if</span> (_kbhit()) &#123;</span><br><span class="line">        direction = _getch();</span><br><span class="line">        <span class="keyword">switch</span> (direction)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> UP:</span><br><span class="line">            <span class="keyword">if</span> (now_Dir != DOWN)</span><br><span class="line">                now_Dir = direction;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> DOWN:</span><br><span class="line">            <span class="keyword">if</span> (now_Dir != UP)</span><br><span class="line">                now_Dir = direction;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> RIGHT:</span><br><span class="line">            <span class="keyword">if</span> (now_Dir != LEFT)</span><br><span class="line">                now_Dir = direction;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> LEFT:</span><br><span class="line">            <span class="keyword">if</span> (now_Dir != RIGHT)</span><br><span class="line">                now_Dir = direction;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (now_Dir)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> UP:snake.snakeNode[<span class="number">0</span>].y--; <span class="keyword">break</span>; <span class="comment">//上移</span></span><br><span class="line">    <span class="keyword">case</span> DOWN:snake.snakeNode[<span class="number">0</span>].y++; <span class="keyword">break</span>; <span class="comment">//下移</span></span><br><span class="line">    <span class="keyword">case</span> LEFT:snake.snakeNode[<span class="number">0</span>].x--; <span class="keyword">break</span>; <span class="comment">//左移</span></span><br><span class="line">    <span class="keyword">case</span> RIGHT:snake.snakeNode[<span class="number">0</span>].x++; <span class="keyword">break</span>; <span class="comment">//右移</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打印蛇头</span></span><br><span class="line">    GotoXY(snake.snakeNode[<span class="number">0</span>].x, snake.snakeNode[<span class="number">0</span>].y);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;@&quot;</span>);</span><br><span class="line">    <span class="comment">//判断是否吃到食物，如果蛇头的位置和食物的位置相同表示吃到食物</span></span><br><span class="line">    <span class="keyword">if</span> (snake.snakeNode[<span class="number">0</span>].x == food.x &amp;&amp; snake.snakeNode[<span class="number">0</span>].y == food.y) &#123;</span><br><span class="line">        snake.length++; <span class="comment">//吃到食物蛇长加一</span></span><br><span class="line">        flag = <span class="number">1</span>; <span class="comment">//1表示吃到食物</span></span><br><span class="line">        snake.snakeNode[snake.length - <span class="number">1</span>] = temp;  <span class="comment">// 吃到食物，蛇尾加一节</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//输出蛇此时的状态</span></span><br><span class="line">    <span class="comment">//没吃到食物的时候，在原来的蛇尾打印一个空格，去掉原来的蛇尾、</span></span><br><span class="line">    <span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">        GotoXY(temp.x, temp.y);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        PrintFood();</span><br><span class="line">        GotoXY(<span class="number">50</span>, <span class="number">5</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;当前得分：%d&quot;</span>, snake.length - <span class="number">3</span>);  <span class="comment">//打印得分，得分为蛇长减3</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断是否死亡</span></span><br><span class="line">    <span class="keyword">if</span> (!IsCorrect()) &#123;</span><br><span class="line">        system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        GotoXY(<span class="number">45</span>, <span class="number">14</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;最终得分：%d&quot;</span>, snake.length - <span class="number">3</span>);</span><br><span class="line">        GotoXY(<span class="number">45</span>, <span class="number">16</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;游戏结束！&quot;</span>); </span><br><span class="line">        GotoXY(<span class="number">45</span>, <span class="number">18</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;按任意键返回主菜单&quot;</span>);</span><br><span class="line">            <span class="type">char</span> c = _getch();</span><br><span class="line">        system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//调整速度</span></span><br><span class="line">    SpeedControl();</span><br><span class="line">    Sleep(snake.speed);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">IsCorrect</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (snake.snakeNode[<span class="number">0</span>].x &lt;= <span class="number">0</span> || snake.snakeNode[<span class="number">0</span>].y &lt;= <span class="number">0</span> || snake.snakeNode[<span class="number">0</span>].x &gt;= MAP_WIDTH - <span class="number">1</span> || snake.snakeNode[<span class="number">0</span>].y &gt;= MAP_HEIGHT - <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; snake.length; i++) &#123;<span class="comment">//判断是否重合</span></span><br><span class="line">        <span class="keyword">if</span> (snake.snakeNode[<span class="number">0</span>].x == snake.snakeNode[i].x &amp;&amp; snake.snakeNode[<span class="number">0</span>].y == snake.snakeNode[i].y) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">SpeedControl</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">switch</span> (snake.length)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">        snake.speed = <span class="number">200</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">        snake.speed = <span class="number">180</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">        snake.speed = <span class="number">160</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">15</span>:</span><br><span class="line">        snake.speed = <span class="number">140</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">18</span>:</span><br><span class="line">        snake.speed = <span class="number">120</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">21</span>:</span><br><span class="line">        snake.speed = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">24</span>:</span><br><span class="line">        snake.speed = <span class="number">80</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">27</span>:</span><br><span class="line">        snake.speed = <span class="number">60</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">30</span>:</span><br><span class="line">        snake.speed = <span class="number">40</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><a href="/file/snake.c.rar" title="C源码下载">点击下载</a></p>
]]></content>
      <categories>
        <category>程序设计作业</category>
        <category>贪吃蛇作业</category>
        <category>修改前</category>
        <category>代码区</category>
        <category>snake.c</category>
      </categories>
      <tags>
        <tag>程序设计实践课程作业</tag>
        <tag>贪吃蛇</tag>
      </tags>
  </entry>
  <entry>
    <title>贪吃蛇：snake.h</title>
    <url>/2021/05/30/%E8%B4%AA%E5%90%83%E8%9B%87%EF%BC%9Asnake-h/</url>
    <content><![CDATA[<h3 id="以下为源代码"><a href="#以下为源代码" class="headerlink" title="以下为源代码"></a>以下为源代码</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;conio.h&gt;</span><span class="comment">//控制台的一些文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//宏定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAP_HEIGHT 20 <span class="comment">// 地图高度</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAP_WIDTH 40  <span class="comment">// 地图的宽度</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> UP <span class="string">&#x27;w&#x27;</span>        <span class="comment">// 定义上移键</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DOWN <span class="string">&#x27;s&#x27;</span>      <span class="comment">// 定义下移键</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LEFT <span class="string">&#x27;a&#x27;</span>      <span class="comment">// 定义左移键</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RIGHT <span class="string">&#x27;d&#x27;</span>     <span class="comment">// 定义右移键</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//结构体定义</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> x;    <span class="comment">// x坐标的位置</span></span><br><span class="line">    <span class="type">int</span> y;    <span class="comment">// y坐标的位置</span></span><br><span class="line">&#125;Food, Snakenode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> //定义蛇的结构体</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    Snakenode snakeNode[<span class="number">1000</span>]; <span class="comment">//表示蛇最多有1000个节点</span></span><br><span class="line">    <span class="type">int</span> length; <span class="comment">//蛇的长度</span></span><br><span class="line">    <span class="type">int</span> speed;  <span class="comment">//蛇移动的速度</span></span><br><span class="line">&#125;Snake;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">GotoXY</span><span class="params">(<span class="type">int</span>, <span class="type">int</span>)</span>; <span class="comment">//光标定位函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Hide</span><span class="params">()</span>;     <span class="comment">//隐藏光标函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Menu</span><span class="params">()</span>;      <span class="comment">//主菜单函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Help</span><span class="params">()</span>;     <span class="comment">//帮助信息</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">About</span><span class="params">()</span>;    <span class="comment">//关于信息</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitMap</span><span class="params">()</span>;  <span class="comment">//地图初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintFood</span><span class="params">()</span>; <span class="comment">//生成食物</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">MoveSnake</span><span class="params">()</span>;  <span class="comment">//蛇的移动</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">IsCorrect</span><span class="params">()</span>; <span class="comment">//自撞或撞墙检测</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">SpeedControl</span><span class="params">()</span>; <span class="comment">//速度控制</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><a href="/file/snake.h.rar" title="C源码下载">点击下载</a></p>
]]></content>
      <categories>
        <category>程序设计作业</category>
        <category>贪吃蛇作业</category>
        <category>修改前</category>
        <category>代码区</category>
        <category>snake.h</category>
      </categories>
      <tags>
        <tag>程序设计实践课程作业</tag>
        <tag>贪吃蛇</tag>
      </tags>
  </entry>
  <entry>
    <title>snake_main源代码</title>
    <url>/2021/05/30/%E8%B4%AA%E5%90%83%E8%9B%87%EF%BC%9Asnake-main/</url>
    <content><![CDATA[<h3 id="以下为源代码"><a href="#以下为源代码" class="headerlink" title="以下为源代码"></a>以下为源代码</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;snake.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    srand((<span class="type">unsigned</span> <span class="type">int</span>)time(<span class="number">0</span>));     <span class="comment">//生成随机数种子</span></span><br><span class="line">    <span class="type">int</span> end = <span class="number">1</span>, result;</span><br><span class="line">    <span class="keyword">while</span> (end) &#123;</span><br><span class="line">        result = Menu();</span><br><span class="line">        <span class="keyword">switch</span> (result)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:<span class="comment">//开始游戏</span></span><br><span class="line">            InitMap();</span><br><span class="line">            <span class="keyword">while</span> (MoveSnake());</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:<span class="comment">//帮助信息</span></span><br><span class="line">            Help();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:<span class="comment">//关于信息</span></span><br><span class="line">            About();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:<span class="comment">//结束程序</span></span><br><span class="line">            end = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><a href="/file/snake_main.rar" title="C源码下载">点击下载</a></p>
]]></content>
      <categories>
        <category>程序设计作业</category>
        <category>贪吃蛇作业</category>
        <category>修改前</category>
        <category>代码区</category>
        <category>snake_main.c</category>
      </categories>
      <tags>
        <tag>程序设计实践课程作业</tag>
        <tag>贪吃蛇</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构大作业1_走迷宫</title>
    <url>/2021/11/10/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%A7%E4%BD%9C%E4%B8%9A1-%E8%B5%B0%E8%BF%B7%E5%AE%AB/</url>
    <content><![CDATA[<p><a href="%E8%BF%B7%E5%AE%AB%E5%B0%8F%E6%B8%B8%E6%88%8F.zip" title="C语言源代码下载">点击下载</a></p>
<p>运行文件为解压后文件夹内的Migong.exe</p>
<p><img src="/2021/11/10/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%A7%E4%BD%9C%E4%B8%9A1-%E8%B5%B0%E8%BF%B7%E5%AE%AB/Migong.png" alt="img"></p>
<p>如果对你有帮助，希望可以打赏哦~（打赏按钮在下方）</p>
<h3 id="栈实现的部分"><a href="#栈实现的部分" class="headerlink" title="栈实现的部分"></a>栈实现的部分</h3><ul>
<li><p>栈的定义</p>
<p><img src="/2021/11/10/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%A7%E4%BD%9C%E4%B8%9A1-%E8%B5%B0%E8%BF%B7%E5%AE%AB/zhanDefine.png" alt="img"></p>
</li>
<li><p>栈的使用</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//找到合适的路</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">fdmap</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> stmap[<span class="number">54</span>][<span class="number">54</span>];</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    i = j = <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= width; i++) &#123;   <span class="comment">//对找到的位置进行初始化</span></span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= height; j++) &#123;</span><br><span class="line">            stmap[i][j] = <span class="built_in">map</span>[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    i = <span class="number">1</span>;</span><br><span class="line">    j = <span class="number">1</span>;</span><br><span class="line">    mapx[i] = <span class="number">2</span>;</span><br><span class="line">    mapy[j] = <span class="number">2</span>;</span><br><span class="line">    stmap[mapx[i]][mapy[j]] = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">while</span> (stmap[mapx[i]][mapy[j]] != chu) &#123;</span><br><span class="line">        <span class="keyword">if</span> (stmap[mapx[i] + <span class="number">1</span>][mapy[j]] == road || stmap[mapx[i] + <span class="number">1</span>][mapy[j]] == jinbi || stmap[mapx[i] + <span class="number">1</span>][mapy[j]] == chu) &#123;</span><br><span class="line">            <span class="keyword">if</span> (stmap[mapx[i] + <span class="number">1</span>][mapy[j]] == chu) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            stmap[mapx[i] + <span class="number">1</span>][mapy[j]] = <span class="number">10</span>;</span><br><span class="line">            mapx[i + <span class="number">1</span>] = mapx[i] + <span class="number">1</span>;</span><br><span class="line">            mapy[j + <span class="number">1</span>] = mapy[j];</span><br><span class="line">            i++;</span><br><span class="line">            j++;</span><br><span class="line">            printHead(i,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (stmap[mapx[i] - <span class="number">1</span>][mapy[j]] == road || stmap[mapx[i] - <span class="number">1</span>][mapy[j]] == jinbi || stmap[mapx[i] - <span class="number">1</span>][mapy[j]] == chu) &#123;</span><br><span class="line">            <span class="keyword">if</span> (stmap[mapx[i] - <span class="number">1</span>][mapy[j]] == chu) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            stmap[mapx[i] - <span class="number">1</span>][mapy[j]] = <span class="number">10</span>;</span><br><span class="line">            mapx[i + <span class="number">1</span>] = mapx[i] - <span class="number">1</span>;</span><br><span class="line">            mapy[j + <span class="number">1</span>] = mapy[j];</span><br><span class="line">            i++;</span><br><span class="line">            j++;</span><br><span class="line">            printHead(i,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (stmap[mapx[i]][mapy[j] + <span class="number">1</span>] == road || stmap[mapx[i]][mapy[j] + <span class="number">1</span>] == jinbi || stmap[mapx[i]][mapy[j] + <span class="number">1</span>] == chu) &#123;</span><br><span class="line">            <span class="keyword">if</span> (stmap[mapx[i]][mapy[j] + <span class="number">1</span>] == chu) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            stmap[mapx[i]][mapy[j] + <span class="number">1</span>] = <span class="number">10</span>;</span><br><span class="line">            mapx[i + <span class="number">1</span>] = mapx[i];</span><br><span class="line">            mapy[j + <span class="number">1</span>] = mapy[j] + <span class="number">1</span>;</span><br><span class="line">            i++;</span><br><span class="line">            j++;</span><br><span class="line">            printHead(i,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (stmap[mapx[i]][mapy[j] - <span class="number">1</span>] == road || stmap[mapx[i]][mapy[j] - <span class="number">1</span>] == jinbi || stmap[mapx[i]][mapy[j] - <span class="number">1</span>] == chu) &#123;</span><br><span class="line">            <span class="keyword">if</span> (stmap[mapx[i]][mapy[j] - <span class="number">1</span>] == chu) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            stmap[mapx[i]][mapy[j] - <span class="number">1</span>] = <span class="number">10</span>;</span><br><span class="line">            mapx[i + <span class="number">1</span>] = mapx[i];</span><br><span class="line">            mapy[j + <span class="number">1</span>] = mapy[j] - <span class="number">1</span>;</span><br><span class="line">            i++;</span><br><span class="line">            j++;</span><br><span class="line">            printHead(i,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            printHead(i, <span class="number">2</span>);</span><br><span class="line">            i--;</span><br><span class="line">            j--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="以下为代码区-所有的代码"><a href="#以下为代码区-所有的代码" class="headerlink" title="以下为代码区(所有的代码)"></a>以下为代码区(所有的代码)</h3><h4 id="Mi-main-c"><a href="#Mi-main-c" class="headerlink" title="Mi_main.c"></a>Mi_main.c</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Mi.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;title 走迷宫&quot;</span>);</span><br><span class="line">    <span class="type">int</span> flag = <span class="number">1</span>;</span><br><span class="line">    Hide();</span><br><span class="line">    srand((<span class="type">unsigned</span>)time(<span class="literal">NULL</span>)); <span class="comment">//初始化随即种子</span></span><br><span class="line">    height = HEIGHT + <span class="number">4</span> * difficult ;</span><br><span class="line">    width = WIDTH + <span class="number">4</span> * difficult ;</span><br><span class="line">    <span class="keyword">while</span> (flag) &#123;</span><br><span class="line">        system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="keyword">switch</span> (Menu())</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            Start();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            setting();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            Help();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            About();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Mi-h"><a href="#Mi-h" class="headerlink" title="Mi.h"></a>Mi.h</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;conio.h&gt;</span><span class="comment">//控制台的一些文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//宏定义</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> UP <span class="string">&#x27;w&#x27;</span>        <span class="comment">// 定义上移键</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DOWN <span class="string">&#x27;s&#x27;</span>      <span class="comment">// 定义下移键</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LEFT <span class="string">&#x27;a&#x27;</span>      <span class="comment">// 定义左移键</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RIGHT <span class="string">&#x27;d&#x27;</span>     <span class="comment">// 定义右移键</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHOOT <span class="string">&#x27;j&#x27;</span>     <span class="comment">// 有冲锋枪时攻击键</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> KILL  <span class="string">&#x27;k&#x27;</span>     <span class="comment">// 有瑞士军刀时的砍键</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ESC   <span class="string">&#x27;0&#x27;</span>     <span class="comment">//游戏暂停</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ru 2          <span class="comment">//入为   2</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> wall 1        <span class="comment">//墙为   1</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> road 0        <span class="comment">//路为   0</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> guaishou 5    <span class="comment">//怪兽为 5</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> guaishou1 7</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> jinbi 6       <span class="comment">//金币为 6</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> chu 3         <span class="comment">//出为   3</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HEIGHT 21 <span class="comment">// 地图高度</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WIDTH 21  <span class="comment">// 地图的宽度</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Zhulu 100 <span class="comment">// 主路的位置</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//颜色的定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RED <span class="string">&quot;\033[0;32;31m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NONE <span class="string">&quot;\033[m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> YELLOW <span class="string">&quot;\033[44;34m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BLUE <span class="string">&quot;\033[43;34m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GREEN <span class="string">&quot;\033[40;32m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PURPLE <span class="string">&quot;\033[43;35m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DGREEN <span class="string">&quot;\033[40;36m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WHITE <span class="string">&quot;\033[46;37m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OBLUE <span class="string">&quot;\033[40;34m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ORED <span class="string">&quot;\033[40;31m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OPURPLE <span class="string">&quot;\033[40;35m&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OWHITE <span class="string">&quot;\033[47;37m&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">40: 黑 30: 黑</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">41: 红 31: 红</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">42: 绿 32: 绿</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">43: 黄 33: 黄</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">44: 蓝 34: 蓝</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">45: 紫 35: 紫</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">46: 深绿 36: 深绿</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">47: 白色 37: 白色</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="built_in">map</span>[HEIGHT + <span class="number">40</span>][WIDTH + <span class="number">40</span>];</span><br><span class="line"><span class="type">int</span> mapx[<span class="number">2600</span>];  <span class="comment">//记录自动路途的x坐标</span></span><br><span class="line"><span class="type">int</span> mapy[<span class="number">2600</span>];  <span class="comment">//记录自动路途的y坐标</span></span><br><span class="line"><span class="type">int</span> mapp[HEIGHT + <span class="number">32</span>][HEIGHT + <span class="number">32</span>]; <span class="comment">//主路的数组</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> x;    <span class="comment">// x坐标的位置</span></span><br><span class="line">    <span class="type">int</span> y;    <span class="comment">// y坐标的位置</span></span><br><span class="line">&#125;Jiangshi, People, Money;<span class="comment">//前者僵尸中间人后者金币</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*typedef struct</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">    int x;    // x坐标</span></span><br><span class="line"><span class="comment">    int y;    // y坐标</span></span><br><span class="line"><span class="comment">    struct next; //前一个节点</span></span><br><span class="line"><span class="comment">    struct prev; //后一个节点</span></span><br><span class="line"><span class="comment">&#125;MAP;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//123</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> qdo 262 </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> qre 294</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> qmi 330     <span class="comment">//q前缀为低音，1后缀为高音，s前缀为半音阶 </span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> qfa 349</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> qso 392</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> qla 440</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> qsi 494</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> do 523</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> re 578</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mi 659</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fa 698</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> so 784</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> la 880</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> si 988</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> do1 1046</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> re1 1175</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mi1 1318</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fa1 1480</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> so1 1568</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> la1 1760</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> si1 1976</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sqdo 277</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sqre 311</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sqfa 370</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sqso 415</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sqla 466</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sdo 554</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sre 622</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sfa 740</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sso 831</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sla 932</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sdo1 1046</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sre1 1245</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sfa1 1480</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sso1 1661</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sla1 1865</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//音乐函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">d1music</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">d2music</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">d3music</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">d4music</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">d5music</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">d6music</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">d7music</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">music1</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">music2</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">music3</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">music4</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">music5</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">music6</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">music7</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">music1q</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">music2q</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">music3q</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">music4q</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">music5q</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">music6q</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">music7q</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">heavensong</span><span class="params">()</span>; <span class="comment">//天空之城音乐走起</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//基本架构函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GotoXY</span><span class="params">(<span class="type">int</span>, <span class="type">int</span>)</span>; <span class="comment">//光标定位函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Hide</span><span class="params">()</span>;     <span class="comment">//隐藏光标函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Chuli</span><span class="params">(<span class="type">int</span>, <span class="type">int</span>)</span>; <span class="comment">//彩蛋处理函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//模块的各个函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Menu</span><span class="params">()</span>;      <span class="comment">//主菜单函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//下面是开始游戏函数部分</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Start</span><span class="params">()</span>;       <span class="comment">//开始游戏</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Movepeople</span><span class="params">()</span>;  <span class="comment">//人物移动</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">ztlan</span><span class="params">()</span>;       <span class="comment">//右侧状态栏更新</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Shop</span><span class="params">()</span>;        <span class="comment">//进入商店界面</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">lackrmb</span><span class="params">()</span>;     <span class="comment">//金币不足界面</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">albuy</span><span class="params">()</span>;       <span class="comment">//已经购买界面</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Remap</span><span class="params">()</span>;      <span class="comment">//重新绘制地图</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">fdmap</span><span class="params">()</span>;       <span class="comment">//找到一条合适的路</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">lose</span><span class="params">()</span>;        <span class="comment">//游戏失败界面</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">win</span><span class="params">()</span>;         <span class="comment">//游戏胜利界面</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">reroad</span><span class="params">(<span class="type">int</span>, <span class="type">int</span>)</span>; <span class="comment">//怪物走到主路原路返回函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">shoot</span><span class="params">()</span>;       <span class="comment">//射击函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">kill</span><span class="params">()</span>;        <span class="comment">//用瑞士军刀</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Suspend</span><span class="params">()</span>;     <span class="comment">//游戏暂停函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Reroad</span><span class="params">()</span>;     <span class="comment">//重新打印地图</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">printHead</span><span class="params">(<span class="type">int</span> ,<span class="type">int</span>)</span>;  <span class="comment">//重新绘制头结点（重新绘制当前的位置〇）</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">writeFile</span><span class="params">(<span class="type">int</span>)</span>; <span class="comment">//写路径到txt文件里面</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//下面是所有设置的部分</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">setting</span><span class="params">()</span>;   <span class="comment">//设置函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">mapset</span><span class="params">()</span>;    <span class="comment">//地图设置</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">modeset</span><span class="params">()</span>;  <span class="comment">//模式设定</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">shopset</span><span class="params">()</span>;  <span class="comment">//商店设置</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">lifeset</span><span class="params">()</span>;  <span class="comment">//生命值设置</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//下面是帮助信息部分</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Help</span><span class="params">()</span>;     <span class="comment">//帮助信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//下面是程序相关信息</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">About</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//下面初始化函数部分</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitMap</span><span class="params">()</span>;   <span class="comment">//地图初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ptmonster</span><span class="params">()</span>; <span class="comment">//打印怪兽</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ptmoney</span><span class="params">()</span>;   <span class="comment">//打印金钱（用于买装备升级）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//下面是具体实现函数部分</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">iswall</span><span class="params">(<span class="type">int</span>,<span class="type">int</span>)</span>;   <span class="comment">//判断是否是墙</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">prt</span><span class="params">()</span>;  <span class="comment">//打印▇（墙）</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">map2</span><span class="params">()</span>;  <span class="comment">//彩蛋地图</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//下面是一些全局变量</span></span><br><span class="line"><span class="type">int</span> bufa;    <span class="comment">//设置自动走的路数</span></span><br><span class="line"><span class="type">int</span> <span class="built_in">set</span>;     <span class="comment">//设置返回值</span></span><br><span class="line"><span class="type">int</span> monster; <span class="comment">//怪物数等级</span></span><br><span class="line"><span class="type">int</span> cgn;     <span class="comment">//闯关数</span></span><br><span class="line"><span class="type">int</span> mode;    <span class="comment">//模式</span></span><br><span class="line"><span class="type">int</span> life;    <span class="comment">//生命值</span></span><br><span class="line"><span class="type">int</span> Life;    <span class="comment">//确定好的生命值</span></span><br><span class="line"><span class="type">int</span> shop;    <span class="comment">//商店开启或关闭 （1-开启 0-关闭）</span></span><br><span class="line"><span class="type">int</span> height;  <span class="comment">//地图的高</span></span><br><span class="line"><span class="type">int</span> width;   <span class="comment">//地图的宽</span></span><br><span class="line"><span class="type">int</span> rmb;     <span class="comment">//当前金币数量</span></span><br><span class="line"><span class="type">int</span> difficult;  <span class="comment">//地图难度系数</span></span><br><span class="line"><span class="type">int</span> monstern;   <span class="comment">//怪物数量等级系数</span></span><br><span class="line"><span class="type">int</span> gun;        <span class="comment">//是否购买冲锋枪    1表示购买了 0表示未购买</span></span><br><span class="line"><span class="type">int</span> knife;     <span class="comment">//是否购买瑞士军     1表示购买了 0表示未购买</span></span><br><span class="line"><span class="type">char</span> direction; <span class="comment">//人预期的朝向</span></span><br><span class="line"><span class="type">char</span> now_Dir;    <span class="comment">//人当前的朝向</span></span><br><span class="line"><span class="type">long</span> TIME;     <span class="comment">//倒计时的时间</span></span><br><span class="line"><span class="type">int</span> eatpeople;<span class="comment">//人是否被怪物吃到 1表示没被吃到</span></span><br><span class="line"><span class="type">int</span> cycle;</span><br><span class="line"><span class="type">int</span> times;</span><br></pre></td></tr></table></figure>

<h4 id="work-c"><a href="#work-c" class="headerlink" title="work.c"></a>work.c</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Mi.h&quot;</span></span></span><br><span class="line">cgn = <span class="number">0</span>;</span><br><span class="line">difficult = <span class="number">1</span>;</span><br><span class="line">monstern = <span class="number">1</span>;</span><br><span class="line">mode = <span class="number">2</span>;</span><br><span class="line">monster = <span class="number">3</span>;</span><br><span class="line">life = <span class="number">1</span>;</span><br><span class="line">Life = <span class="number">1</span>;</span><br><span class="line">shop = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">set</span> = <span class="number">1</span>;</span><br><span class="line">rmb = <span class="number">50</span>;</span><br><span class="line">gun = <span class="number">0</span>;</span><br><span class="line">knife = <span class="number">0</span>;</span><br><span class="line">TIME = <span class="number">55000</span>; <span class="comment">//TIME = 15*1000 + difficult * 40000;</span></span><br><span class="line">times = <span class="number">30</span>;</span><br><span class="line">cycle = <span class="number">0</span>;</span><br><span class="line">eatpeople = <span class="number">1</span>;</span><br><span class="line">People people;</span><br><span class="line">People peoplenext;</span><br><span class="line">Jiangshi jshi;</span><br><span class="line">Money money;</span><br><span class="line"></span><br><span class="line"><span class="comment">//音乐模块</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">d1music</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">262</span>,<span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">d2music</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">294</span>,<span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">d3music</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">330</span>,<span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">d4music</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">349</span>,<span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">d5music</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">392</span>,<span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">d6music</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">440</span>,<span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">d7music</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">494</span>,<span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">music1</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">523</span>, <span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">music2</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">578</span>, <span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">music3</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">659</span>, <span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">music4</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">698</span>, <span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">music5</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">784</span>, <span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">music6</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">880</span>, <span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">music7</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">988</span>, <span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">music1q</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">1046</span>, <span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">music2q</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">1175</span>, <span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">music3q</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">1318</span>, <span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">music4q</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">1480</span>, <span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">music5q</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">1568</span>, <span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">music6q</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">1760</span>, <span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">music7q</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Beep(<span class="number">1976</span>, <span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//胜利音效</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">winmusic</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    music1();</span><br><span class="line">    music1();</span><br><span class="line">    music5();</span><br><span class="line">    music5();</span><br><span class="line">    music6();</span><br><span class="line">    music6();</span><br><span class="line">    music5();</span><br><span class="line">    Sleep(<span class="number">500</span>);</span><br><span class="line">    music4();</span><br><span class="line">    music4();</span><br><span class="line">    music3();</span><br><span class="line">    music3();</span><br><span class="line">    music2();</span><br><span class="line">    music2();</span><br><span class="line">    music1();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//天空之城</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">heavensong</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> pai = <span class="number">400</span>, ban = <span class="number">200</span>;</span><br><span class="line">    <span class="type">int</span> ting = <span class="number">128</span>;</span><br><span class="line">    Sleep(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">    Beep(la, ban);</span><br><span class="line">    Beep(si, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(do1, pai + ban);</span><br><span class="line">    Beep(si, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(mi1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(si, <span class="number">3</span> * pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line"></span><br><span class="line">    Beep(la, ban + pai);</span><br><span class="line">    Beep(so, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(la, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(so, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Sleep(pai);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line">    Sleep(ting / <span class="number">2</span>);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line">    Sleep(ting / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    Beep(fa, pai + ban);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(fa, ban);</span><br><span class="line">    Beep(do1, ban + pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(mi, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Sleep(ban);</span><br><span class="line">    Beep(do1, ban);</span><br><span class="line">    Sleep(ting / <span class="number">2</span>);</span><br><span class="line">    Beep(do1, ban);</span><br><span class="line">    Sleep(ting / <span class="number">2</span>);</span><br><span class="line">    Beep(do1, ban);</span><br><span class="line">    Sleep(ting / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    Beep(si, ban + pai);</span><br><span class="line">    Beep(sfa, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(sfa, pai);</span><br><span class="line">    Beep(si, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(si, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Sleep(pai);</span><br><span class="line">    Beep(la, ban);</span><br><span class="line">    Beep(si, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(do1, pai + ban);</span><br><span class="line">    Beep(si, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(mi1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(si, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Sleep(pai);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line">    Sleep(<span class="number">20</span>);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(la, pai + ban);</span><br><span class="line">    Beep(so, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(la, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(so, <span class="number">3</span> * pai);</span><br><span class="line">    Sleep(ting + ban);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line">    Sleep(ting / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    Beep(fa, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, ban);</span><br><span class="line">    Beep(si, ban);</span><br><span class="line">    Sleep(<span class="number">20</span>);</span><br><span class="line">    Beep(si, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(re1, ban);</span><br><span class="line">    Sleep(<span class="number">20</span>);</span><br><span class="line">    Beep(re1, ban);</span><br><span class="line">    Sleep(<span class="number">20</span>);</span><br><span class="line">    Beep(mi1, ban);</span><br><span class="line">    Sleep(ting / <span class="number">2</span>);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting + pai);</span><br><span class="line"></span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Beep(si, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(la, ban);</span><br><span class="line">    Sleep(<span class="number">20</span>);</span><br><span class="line">    Beep(la, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(si, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(sso, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(sso, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting + pai);</span><br><span class="line">    Beep(do1, ban);</span><br><span class="line">    Beep(re1, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(mi1, pai + ban);</span><br><span class="line">    Beep(re1, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(mi1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(fa1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(re1, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(pai + ting);</span><br><span class="line">    Beep(so, ban);</span><br><span class="line">    Sleep(<span class="number">20</span>);</span><br><span class="line">    Beep(so, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(do1, ban);</span><br><span class="line">    Beep(si, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(mi1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(mi1, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting + <span class="number">2</span> * pai);</span><br><span class="line"></span><br><span class="line">    Beep(la, ban);</span><br><span class="line">    Beep(si, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(si, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(re1, ban);</span><br><span class="line">    Sleep(<span class="number">20</span>);</span><br><span class="line">    Beep(re1, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(do1, pai + ban);</span><br><span class="line">    Beep(so, ban);</span><br><span class="line">    Sleep(<span class="number">20</span>);</span><br><span class="line">    Beep(so, pai);</span><br><span class="line">    Sleep(pai + ting);</span><br><span class="line"></span><br><span class="line">    Beep(fa1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(mi1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(re1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(mi1, <span class="number">4</span> * pai);</span><br><span class="line"></span><br><span class="line">    Beep(mi1, pai * <span class="number">2</span>);</span><br><span class="line">    Sleep(pai + ting);</span><br><span class="line">    Beep(mi1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(la1, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(so1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(so1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(mi1, ban);</span><br><span class="line">    Sleep(ting / <span class="number">2</span>);</span><br><span class="line">    Beep(re1, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting + ban);</span><br><span class="line">    Beep(do1, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(re1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, ban);</span><br><span class="line">    Beep(re1, ban);</span><br><span class="line">    Sleep(<span class="number">20</span>);</span><br><span class="line">    Beep(re1, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(so1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(mi1, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting + pai);</span><br><span class="line">    Beep(mi, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(la1, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(so1, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(mi1, ban);</span><br><span class="line">    Beep(re1, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting + ban);</span><br><span class="line">    Beep(do1, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(re1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, ban);</span><br><span class="line">    Beep(re1, ban);</span><br><span class="line">    Sleep(<span class="number">20</span>);</span><br><span class="line">    Beep(re1, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(si, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(la, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(la, ban);</span><br><span class="line">    Beep(si, ban);</span><br><span class="line"></span><br><span class="line">    Beep(do1, pai + ban);</span><br><span class="line">    Beep(si, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(mi1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(si, <span class="number">3</span> * pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line"></span><br><span class="line">    Beep(la, ban + pai);</span><br><span class="line">    Beep(so, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(la, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(so, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Sleep(pai);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line">    Sleep(ting / <span class="number">2</span>);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line">    Sleep(ting / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    Beep(fa, pai + ban);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(fa, ban);</span><br><span class="line">    Beep(do1, ban + pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(mi, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Sleep(ban);</span><br><span class="line">    Beep(do1, ban);</span><br><span class="line">    Sleep(ting / <span class="number">2</span>);</span><br><span class="line">    Beep(do1, ban);</span><br><span class="line">    Sleep(ting / <span class="number">2</span>);</span><br><span class="line">    Beep(do1, ban);</span><br><span class="line">    Sleep(ting / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    Beep(si, ban + pai);</span><br><span class="line">    Beep(sfa, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(sfa, pai);</span><br><span class="line">    Beep(si, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(si, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Sleep(pai);</span><br><span class="line">    Beep(la, ban);</span><br><span class="line">    Beep(si, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(do1, pai + ban);</span><br><span class="line">    Beep(si, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(mi1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(si, <span class="number">2</span> * pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Sleep(pai);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line">    Sleep(<span class="number">20</span>);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(la, pai + ban);</span><br><span class="line">    Beep(so, ban);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(la, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(so, <span class="number">3</span> * pai);</span><br><span class="line">    Sleep(ting + ban);</span><br><span class="line">    Beep(mi, ban);</span><br><span class="line">    Sleep(ting / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    Beep(fa, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, ban);</span><br><span class="line">    Beep(si, ban);</span><br><span class="line">    Sleep(<span class="number">20</span>);</span><br><span class="line">    Beep(si, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting);</span><br><span class="line"></span><br><span class="line">    Beep(re1, ban);</span><br><span class="line">    Sleep(<span class="number">20</span>);</span><br><span class="line">    Beep(re1, ban);</span><br><span class="line">    Sleep(<span class="number">20</span>);</span><br><span class="line">    Beep(mi1, ban);</span><br><span class="line">    Sleep(ting / <span class="number">2</span>);</span><br><span class="line">    Beep(do1, pai);</span><br><span class="line">    Sleep(ting + pai);</span><br><span class="line"></span><br><span class="line">    Beep(la, <span class="number">4</span> * pai);</span><br><span class="line"></span><br><span class="line">    Sleep(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//光标定位函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GotoXY</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    HANDLE hout;</span><br><span class="line">    COORD cor;</span><br><span class="line">    hout = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">    cor.X = x;</span><br><span class="line">    cor.Y = y;</span><br><span class="line">    SetConsoleCursorPosition(hout, cor);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//隐藏光标</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Hide</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    HANDLE hout = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">    CONSOLE_CURSOR_INFO cor_info = &#123; <span class="number">1</span>, <span class="number">0</span> &#125;;</span><br><span class="line">    SetConsoleCursorInfo(hout, &amp;cor_info);<span class="comment">//隐藏光标</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//菜单页面</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Menu</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Hide();</span><br><span class="line">    GotoXY(<span class="number">36</span>, <span class="number">12</span>);   <span class="comment">//定位光标的位置</span></span><br><span class="line">    <span class="built_in">printf</span>(ORED<span class="string">&quot;欢迎来到智慧迷宫游戏&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1. 开始游戏&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;2. 设置&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;3. 帮助&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">20</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;4. 关于(请谨慎进入因为进入可能要好久才能出来)&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">22</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;退出游戏请输入     0&quot;</span>NONE);</span><br><span class="line">    Hide();    <span class="comment">//隐藏光标</span></span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="type">int</span> result = <span class="number">1</span>;</span><br><span class="line">    ch = _getch();</span><br><span class="line">    <span class="keyword">switch</span> (ch)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>: result = <span class="number">1</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>: result = <span class="number">2</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>: result = <span class="number">3</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>: result = <span class="number">4</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;0&#x27;</span>: result = <span class="number">0</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:  result = <span class="number">5</span>; <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);  <span class="comment">//清空当前页面</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置页面</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">setting</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Hide();</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">printf</span>(GREEN<span class="string">&quot;地图设置请输入     1&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">12</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;模式设置请输入     2&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;生命值设置请输入   3&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;商店设置请输入     4&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">45</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按其他任意键返回上一级&quot;</span>NONE);</span><br><span class="line">    <span class="type">char</span> ch = _getch();</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    <span class="keyword">switch</span> (ch)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">        mapset();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">        modeset();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">        lifeset();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">        shopset();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//地图设置</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">mapset</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Hide();</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;输入1-6的正整数来表示迷宫的大小&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;当前迷宫的大小系数为   %d&quot;</span>, difficult);</span><br><span class="line">    GotoXY(<span class="number">45</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按其他任意键设置怪物数量等级&quot;</span>);</span><br><span class="line">    <span class="type">char</span> ch = _getch();</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    <span class="keyword">switch</span> (ch)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">        difficult = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">        difficult = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">        difficult = <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">        difficult = <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line">        difficult = <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;6&#x27;</span>:</span><br><span class="line">        difficult = <span class="number">6</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    height = HEIGHT + <span class="number">4</span> * difficult ;</span><br><span class="line">    width = WIDTH + <span class="number">4</span> * difficult ;</span><br><span class="line">    TIME = <span class="number">15</span>*<span class="number">1000</span> + difficult * <span class="number">40000</span>;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;输入1-7中的一个数表示迷宫怪物数量等级&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;当前怪物数量等级为   %d&quot;</span>, monstern);</span><br><span class="line">    GotoXY(<span class="number">45</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按其他任意键返回主菜单&quot;</span>);</span><br><span class="line">    ch = _getch();</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    <span class="keyword">switch</span> (ch)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">        monstern = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">        monstern = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">        monstern = <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">        monstern = <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line">        monstern = <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;6&#x27;</span>:</span><br><span class="line">        monstern = <span class="number">6</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;7&#x27;</span>:</span><br><span class="line">        monstern = <span class="number">7</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    monster = <span class="number">3</span> + monstern;</span><br><span class="line">    <span class="keyword">return</span> monster;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//找到合适的路</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">fdmap</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> stmap[<span class="number">54</span>][<span class="number">54</span>];</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    i = j = <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= width; i++) &#123;   <span class="comment">//对找到的位置进行初始化</span></span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= height; j++) &#123;</span><br><span class="line">            stmap[i][j] = <span class="built_in">map</span>[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    i = <span class="number">1</span>;</span><br><span class="line">    j = <span class="number">1</span>;</span><br><span class="line">    mapx[i] = <span class="number">2</span>;</span><br><span class="line">    mapy[j] = <span class="number">2</span>;</span><br><span class="line">    stmap[mapx[i]][mapy[j]] = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">while</span> (stmap[mapx[i]][mapy[j]] != chu) &#123;</span><br><span class="line">        <span class="keyword">if</span> (stmap[mapx[i] + <span class="number">1</span>][mapy[j]] == road || stmap[mapx[i] + <span class="number">1</span>][mapy[j]] == jinbi || stmap[mapx[i] + <span class="number">1</span>][mapy[j]] == chu) &#123;</span><br><span class="line">            <span class="keyword">if</span> (stmap[mapx[i] + <span class="number">1</span>][mapy[j]] == chu) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            stmap[mapx[i] + <span class="number">1</span>][mapy[j]] = <span class="number">10</span>;</span><br><span class="line">            mapx[i + <span class="number">1</span>] = mapx[i] + <span class="number">1</span>;</span><br><span class="line">            mapy[j + <span class="number">1</span>] = mapy[j];</span><br><span class="line">            i++;</span><br><span class="line">            j++;</span><br><span class="line">            printHead(i,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (stmap[mapx[i] - <span class="number">1</span>][mapy[j]] == road || stmap[mapx[i] - <span class="number">1</span>][mapy[j]] == jinbi || stmap[mapx[i] - <span class="number">1</span>][mapy[j]] == chu) &#123;</span><br><span class="line">            <span class="keyword">if</span> (stmap[mapx[i] - <span class="number">1</span>][mapy[j]] == chu) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            stmap[mapx[i] - <span class="number">1</span>][mapy[j]] = <span class="number">10</span>;</span><br><span class="line">            mapx[i + <span class="number">1</span>] = mapx[i] - <span class="number">1</span>;</span><br><span class="line">            mapy[j + <span class="number">1</span>] = mapy[j];</span><br><span class="line">            i++;</span><br><span class="line">            j++;</span><br><span class="line">            printHead(i,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (stmap[mapx[i]][mapy[j] + <span class="number">1</span>] == road || stmap[mapx[i]][mapy[j] + <span class="number">1</span>] == jinbi || stmap[mapx[i]][mapy[j] + <span class="number">1</span>] == chu) &#123;</span><br><span class="line">            <span class="keyword">if</span> (stmap[mapx[i]][mapy[j] + <span class="number">1</span>] == chu) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            stmap[mapx[i]][mapy[j] + <span class="number">1</span>] = <span class="number">10</span>;</span><br><span class="line">            mapx[i + <span class="number">1</span>] = mapx[i];</span><br><span class="line">            mapy[j + <span class="number">1</span>] = mapy[j] + <span class="number">1</span>;</span><br><span class="line">            i++;</span><br><span class="line">            j++;</span><br><span class="line">            printHead(i,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (stmap[mapx[i]][mapy[j] - <span class="number">1</span>] == road || stmap[mapx[i]][mapy[j] - <span class="number">1</span>] == jinbi || stmap[mapx[i]][mapy[j] - <span class="number">1</span>] == chu) &#123;</span><br><span class="line">            <span class="keyword">if</span> (stmap[mapx[i]][mapy[j] - <span class="number">1</span>] == chu) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            stmap[mapx[i]][mapy[j] - <span class="number">1</span>] = <span class="number">10</span>;</span><br><span class="line">            mapx[i + <span class="number">1</span>] = mapx[i];</span><br><span class="line">            mapy[j + <span class="number">1</span>] = mapy[j] - <span class="number">1</span>;</span><br><span class="line">            i++;</span><br><span class="line">            j++;</span><br><span class="line">            printHead(i,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            printHead(i, <span class="number">2</span>);</span><br><span class="line">            i--;</span><br><span class="line">            j--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//模式设置</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">modeset</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Hide();</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;限时模式     1&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">12</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;自走模式     2&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;无尽模式     3&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;战神模式     4&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;彩蛋****     5&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">20</span>);</span><br><span class="line">    <span class="keyword">switch</span> (mode)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>: <span class="built_in">printf</span>(<span class="string">&quot;当前模式为：  限时模式&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>: <span class="built_in">printf</span>(<span class="string">&quot;当前模式为：  自走模式&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>: <span class="built_in">printf</span>(<span class="string">&quot;当前模式为：  无尽模式&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>: <span class="built_in">printf</span>(<span class="string">&quot;当前模式为：  战神模式&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>: <span class="built_in">printf</span>(<span class="string">&quot;当前模式为：  菜单****（玩得开心哦！）&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    GotoXY(<span class="number">45</span>, <span class="number">22</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按其他任意键返回上级菜单&quot;</span>);</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    ch = _getch();</span><br><span class="line">    <span class="keyword">switch</span> (ch)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>: mode = <span class="number">1</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>: mode = <span class="number">2</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>: mode = <span class="number">3</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>: mode = <span class="number">4</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line">        mode = <span class="number">5</span>;</span><br><span class="line">        width = <span class="number">54</span>;</span><br><span class="line">        height = <span class="number">54</span>;</span><br><span class="line">        monster = <span class="number">10</span>;</span><br><span class="line">        rmb = <span class="number">10</span>;</span><br><span class="line">        difficult = <span class="number">6</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);  <span class="comment">//清空当前页面</span></span><br><span class="line">    <span class="keyword">return</span> mode;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//生命值设置</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">lifeset</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Hide();</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;输入你想要的生命值 1 — 9 (为了较好游戏体验，建议生命值3-5之间)&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;当前生命值为：  %d&quot;</span>, life);</span><br><span class="line">    GotoXY(<span class="number">45</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按其他任意键返回上级菜单      &quot;</span>);</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    ch = _getch();</span><br><span class="line">    <span class="keyword">switch</span> (ch)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>: Life = <span class="number">1</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>: Life = <span class="number">2</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>: Life = <span class="number">3</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>: Life = <span class="number">4</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;5&#x27;</span>: Life = <span class="number">5</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;6&#x27;</span>: Life = <span class="number">6</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;7&#x27;</span>: Life = <span class="number">7</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;8&#x27;</span>: Life = <span class="number">8</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;9&#x27;</span>: Life = <span class="number">9</span>; <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    life = Life;</span><br><span class="line">    <span class="keyword">return</span> life;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//商店设置</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">shopset</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Hide();</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">12</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;商店开启请输入 1&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;商店关闭请输入 0&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="keyword">switch</span> (shop)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:<span class="built_in">printf</span>(<span class="string">&quot;当前商店处于   开启状态&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:<span class="built_in">printf</span>(<span class="string">&quot;当前商店处于   关闭状态&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    GotoXY(<span class="number">45</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按任意键返回上级菜单      &quot;</span>);</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    ch = _getch();</span><br><span class="line">    <span class="keyword">switch</span> (ch)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>: shop = <span class="number">1</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;0&#x27;</span>: shop = <span class="number">0</span>; <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> shop;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//开始游戏</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Start</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    InitMap();</span><br><span class="line">    <span class="comment">//响应键盘的操作</span></span><br><span class="line">    <span class="keyword">if</span> (mode == <span class="number">5</span>) &#123;</span><br><span class="line">        monster = <span class="number">10</span>;</span><br><span class="line">        rmb = <span class="number">10</span>;</span><br><span class="line">        difficult = <span class="number">6</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (Movepeople());</span><br><span class="line">    <span class="keyword">if</span> (mode == <span class="number">5</span>) &#123;</span><br><span class="line">        monster = <span class="number">3</span>;</span><br><span class="line">        rmb = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//游戏暂停按钮</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Suspend</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(GREEN<span class="string">&quot;游戏已暂停，按 0 返回主菜单&quot;</span>NONE);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(GREEN<span class="string">&quot;按其他任意键继续游戏！&quot;</span>NONE);</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="type">int</span> result = <span class="number">1</span>;</span><br><span class="line">    ch = _getch();</span><br><span class="line">    <span class="keyword">switch</span> (ch)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">default</span> :</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//移动人物</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Movepeople</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> lag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (mode != <span class="number">2</span>) &#123; <span class="comment">//表示当前不是自动走的模式</span></span><br><span class="line">        <span class="keyword">if</span> (eatpeople == <span class="number">0</span>) &#123;</span><br><span class="line">            lose();</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Hide();</span><br><span class="line">        <span class="keyword">if</span> (_kbhit()) &#123;</span><br><span class="line">            direction = _getch();</span><br><span class="line">            <span class="keyword">switch</span> (direction)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> UP:</span><br><span class="line">                now_Dir = direction;</span><br><span class="line">                lag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> DOWN:</span><br><span class="line">                now_Dir = direction;</span><br><span class="line">                lag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> RIGHT:</span><br><span class="line">                now_Dir = direction;</span><br><span class="line">                lag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> LEFT:</span><br><span class="line">                now_Dir = direction;</span><br><span class="line">                lag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> SHOOT:</span><br><span class="line">                <span class="keyword">if</span> (gun) &#123;</span><br><span class="line">                    shoot();</span><br><span class="line">                    Remap();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> KILL:</span><br><span class="line">                <span class="keyword">if</span> (knife) &#123;</span><br><span class="line">                    kill();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;p&#x27;</span>:</span><br><span class="line">                <span class="keyword">if</span> (shop) &#123;</span><br><span class="line">                    Shop();</span><br><span class="line">                    Remap();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ESC:</span><br><span class="line">                <span class="keyword">if</span> (Suspend()) &#123;</span><br><span class="line">                    Remap();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            GotoXY(people.x * <span class="number">2</span> - <span class="number">2</span>, people.y - <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">            peoplenext.x = people.x;</span><br><span class="line">            peoplenext.y = people.y;</span><br><span class="line">            <span class="keyword">if</span> (lag) &#123;</span><br><span class="line">                <span class="keyword">switch</span> (now_Dir) <span class="comment">//进行移动</span></span><br><span class="line">                &#123;</span><br><span class="line">                <span class="keyword">case</span> UP:peoplenext.y--; lag = <span class="number">0</span>; <span class="keyword">break</span>; <span class="comment">//上移</span></span><br><span class="line">                <span class="keyword">case</span> DOWN:peoplenext.y++; lag = <span class="number">0</span>; <span class="keyword">break</span>; <span class="comment">//下移</span></span><br><span class="line">                <span class="keyword">case</span> LEFT:peoplenext.x--; lag = <span class="number">0</span>; <span class="keyword">break</span>; <span class="comment">//左移</span></span><br><span class="line">                <span class="keyword">case</span> RIGHT:peoplenext.x++; lag = <span class="number">0</span>; <span class="keyword">break</span>; <span class="comment">//右移</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (mode == <span class="number">4</span>) &#123;</span><br><span class="line">                people.x = peoplenext.x;</span><br><span class="line">                people.y = peoplenext.y;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> ((iswall(peoplenext.x, peoplenext.y) != wall) &amp;&amp; peoplenext.y &gt;= <span class="number">2</span>) &#123; <span class="comment">//如果是墙的处理</span></span><br><span class="line">                    people.x = peoplenext.x;</span><br><span class="line">                    people.y = peoplenext.y;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    peoplenext.x = people.x;</span><br><span class="line">                    peoplenext.y = people.y;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (iswall(people.x, people.y) == jinbi) &#123;  <span class="comment">//碰到金币时候的处理</span></span><br><span class="line">                    <span class="built_in">map</span>[people.x][people.y] = road;</span><br><span class="line">                    rmb++;</span><br><span class="line">                    ztlan();</span><br><span class="line">                    music6q();</span><br><span class="line">                    music6q();</span><br><span class="line">                    music6q();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (iswall(people.x, people.y) == guaishou) &#123; <span class="comment">//碰到怪兽时候的处理</span></span><br><span class="line">                    <span class="keyword">if</span> (life &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                        life--;</span><br><span class="line">                        GotoXY(people.x * <span class="number">2</span> - <span class="number">2</span>, people.y - <span class="number">1</span>);</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;怪&quot;</span>);</span><br><span class="line">                        people.x = <span class="number">2</span>;</span><br><span class="line">                        people.y = <span class="number">2</span>;</span><br><span class="line">                        GotoXY(people.x * <span class="number">2</span> - <span class="number">2</span>, people.y - <span class="number">1</span>);</span><br><span class="line">                        <span class="built_in">printf</span>(WHITE<span class="string">&quot;〇&quot;</span>NONE);</span><br><span class="line">                        ztlan();</span><br><span class="line">                        d5music();</span><br><span class="line">                        d5music();</span><br><span class="line">                        d1music();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        lose();</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (iswall(people.x, people.y) == chu) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (mode == <span class="number">3</span>) &#123;</span><br><span class="line">                        cgn++;</span><br><span class="line">                        <span class="keyword">if</span> (difficult &lt; <span class="number">6</span>) &#123;</span><br><span class="line">                            difficult++;</span><br><span class="line">                        &#125;</span><br><span class="line">                        win();</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        win();</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            GotoXY(people.x * <span class="number">2</span> - <span class="number">2</span>, people.y - <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(WHITE<span class="string">&quot;〇&quot;</span>NONE);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Sleep(<span class="number">100</span>);</span><br><span class="line">        <span class="keyword">if</span> (mode == <span class="number">1</span>) &#123;</span><br><span class="line">            TIME = TIME - <span class="number">100</span>;</span><br><span class="line">            times = TIME / <span class="number">1000</span>;</span><br><span class="line">            <span class="keyword">if</span> (TIME &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                lose();</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            GotoXY(<span class="number">2</span> * width + <span class="number">8</span>, <span class="number">3</span>);</span><br><span class="line">            Hide();</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;剩余时间为： %d 秒   &quot;</span>, times);</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">       cycle++;</span><br><span class="line">            <span class="keyword">if</span> (cycle  == <span class="number">5</span>) &#123;</span><br><span class="line">                eatpeople = Movemonster();</span><br><span class="line">                cycle = <span class="number">0</span>;</span><br><span class="line">            &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123; <span class="comment">//自动走模式</span></span><br><span class="line">        bufa = fdmap();</span><br><span class="line">        writeFile(bufa);<span class="comment">//写入文件</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> m = <span class="number">1</span>; m &lt;= bufa; m++) &#123;</span><br><span class="line">            GotoXY(mapx[m]*<span class="number">2</span> - <span class="number">2</span>, mapy[m] - <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(WHITE<span class="string">&quot;〇&quot;</span>NONE);</span><br><span class="line">            Sleep(<span class="number">200</span>);</span><br><span class="line">            GotoXY(mapx[m]*<span class="number">2</span> - <span class="number">2</span>, mapy[m] - <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        win();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//写路径到文件中</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">writeFile</span><span class="params">(rodeSize)</span> &#123;</span><br><span class="line">    FILE* fp;</span><br><span class="line">    <span class="type">errno_t</span> err;</span><br><span class="line">    err = fopen_s(&amp;fp, <span class="string">&quot;roude.txt&quot;</span>, <span class="string">&quot;w+&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (err != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;打开失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; rodeSize; i++) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(fp, <span class="string">&quot;(%d,%d)-&gt;&quot;</span>, mapy[i],mapx[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fp);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//射击函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">shoot</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> x = people.x;</span><br><span class="line">    <span class="type">int</span> y = people.y;</span><br><span class="line">    <span class="keyword">switch</span> (now_Dir)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;w&#x27;</span>:</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">map</span>[x][y - <span class="number">1</span>] == road || <span class="built_in">map</span>[x][y - <span class="number">1</span>] == guaishou) &#123;</span><br><span class="line">            y--;</span><br><span class="line"></span><br><span class="line">            GotoXY(<span class="number">2</span> * x - <span class="number">2</span>, y - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == guaishou) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;＃&quot;</span>);</span><br><span class="line">                <span class="built_in">map</span>[x][y] = jinbi;</span><br><span class="line">                Sleep(<span class="number">200</span>);</span><br><span class="line">                Reroad();</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;·&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Sleep(<span class="number">60</span>);</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>:</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">map</span>[x + <span class="number">1</span>][y] == road || <span class="built_in">map</span>[x + <span class="number">1</span>][y] == guaishou) &#123;</span><br><span class="line">            x++;</span><br><span class="line"></span><br><span class="line">            GotoXY(<span class="number">2</span> * x - <span class="number">2</span>, y - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == guaishou) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;＃&quot;</span>);</span><br><span class="line">                <span class="built_in">map</span>[x][y] = jinbi;</span><br><span class="line">                Sleep(<span class="number">200</span>);</span><br><span class="line">                Reroad();</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;·&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Sleep(<span class="number">60</span>);</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">map</span>[x][y + <span class="number">1</span>] == road || <span class="built_in">map</span>[x][y + <span class="number">1</span>] == guaishou) &#123;</span><br><span class="line">            y++;</span><br><span class="line"> </span><br><span class="line">            GotoXY(<span class="number">2</span> * x - <span class="number">2</span>, y - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == guaishou) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;＃&quot;</span>);</span><br><span class="line">                <span class="built_in">map</span>[x][y] = jinbi;</span><br><span class="line">                Sleep(<span class="number">200</span>);</span><br><span class="line">                Reroad();</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;·&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Sleep(<span class="number">60</span>);</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">map</span>[x - <span class="number">1</span>][y] == road || <span class="built_in">map</span>[x - <span class="number">1</span>][y] == guaishou) &#123;</span><br><span class="line">            x--;</span><br><span class="line"></span><br><span class="line">            GotoXY(<span class="number">2</span> * x - <span class="number">2</span>, y - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == guaishou) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;＃&quot;</span>);</span><br><span class="line">                <span class="built_in">map</span>[x][y] = jinbi;</span><br><span class="line">                Sleep(<span class="number">200</span>);</span><br><span class="line">                Reroad();</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;·&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Sleep(<span class="number">60</span>);</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Remap();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//kill(瑞士军刀)函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">kill</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> x = people.x;</span><br><span class="line">    <span class="type">int</span> y = people.y;</span><br><span class="line">    <span class="keyword">switch</span> (now_Dir)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;w&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">map</span>[x][y - <span class="number">1</span>] == road || <span class="built_in">map</span>[x][y - <span class="number">1</span>] == guaishou) &#123;</span><br><span class="line">            y--;</span><br><span class="line">            GotoXY(<span class="number">2</span> * x - <span class="number">2</span>, y - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == guaishou) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;＃&quot;</span>);</span><br><span class="line">                <span class="built_in">map</span>[x][y] = jinbi;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;｜&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">map</span>[x][y - <span class="number">1</span>] == road || <span class="built_in">map</span>[x][y - <span class="number">1</span>] == guaishou) &#123;</span><br><span class="line">            y--;</span><br><span class="line">            GotoXY(<span class="number">2</span> * x - <span class="number">2</span>, y - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == guaishou) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;＃&quot;</span>);</span><br><span class="line">                <span class="built_in">map</span>[x][y] = jinbi;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;｜&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Sleep(<span class="number">200</span>);</span><br><span class="line">        Remap();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">map</span>[x + <span class="number">1</span>][y] == road || <span class="built_in">map</span>[x + <span class="number">1</span>][y] == guaishou) &#123;</span><br><span class="line">            x++;</span><br><span class="line">            GotoXY(<span class="number">2</span> * x - <span class="number">2</span>, y - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == guaishou) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;＃&quot;</span>);</span><br><span class="line">                <span class="built_in">map</span>[x][y] = jinbi;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;－&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">map</span>[x + <span class="number">1</span>][y] == road || <span class="built_in">map</span>[x + <span class="number">1</span>][y] == guaishou) &#123;</span><br><span class="line">            x++;</span><br><span class="line">            GotoXY(<span class="number">2</span> * x - <span class="number">2</span>, y - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == guaishou) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;＃&quot;</span>);</span><br><span class="line">                <span class="built_in">map</span>[x][y] = jinbi;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;－&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Sleep(<span class="number">200</span>);</span><br><span class="line">        Remap();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">map</span>[x][y + <span class="number">1</span>] == road || <span class="built_in">map</span>[x][y + <span class="number">1</span>] == guaishou) &#123;</span><br><span class="line">            y++;</span><br><span class="line">            GotoXY(<span class="number">2</span> * x - <span class="number">2</span>, y - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == guaishou) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;＃&quot;</span>);</span><br><span class="line">                <span class="built_in">map</span>[x][y] = jinbi;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;｜&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">map</span>[x][y + <span class="number">1</span>] == road || <span class="built_in">map</span>[x][y + <span class="number">1</span>] == guaishou) &#123;</span><br><span class="line">            y++;</span><br><span class="line">            GotoXY(<span class="number">2</span> * x - <span class="number">2</span>, y - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == guaishou) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;＃&quot;</span>);</span><br><span class="line">                <span class="built_in">map</span>[x][y] = jinbi;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;｜&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Sleep(<span class="number">200</span>);</span><br><span class="line">        Remap();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">map</span>[x - <span class="number">1</span>][y] == road || <span class="built_in">map</span>[x - <span class="number">1</span>][y] == guaishou) &#123;</span><br><span class="line">            x--;</span><br><span class="line">            GotoXY(<span class="number">2</span> * x - <span class="number">2</span>, y - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == guaishou) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;＃&quot;</span>);</span><br><span class="line">                <span class="built_in">map</span>[x][y] = jinbi;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;－&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">map</span>[x - <span class="number">1</span>][y] == road || <span class="built_in">map</span>[x - <span class="number">1</span>][y] == guaishou) &#123;</span><br><span class="line">            x--;</span><br><span class="line">            GotoXY(<span class="number">2</span> * x - <span class="number">2</span>, y - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == guaishou) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;＃&quot;</span>);</span><br><span class="line">                <span class="built_in">map</span>[x][y] = jinbi;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;－&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Sleep(<span class="number">200</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    Remap();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//移动怪物</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Movemonster</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> fangxiang;       <span class="comment">//用于解决怪兽的方向</span></span><br><span class="line">    <span class="type">int</span> flag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= width; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= height; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[i][j] == guaishou) &#123;</span><br><span class="line">                <span class="keyword">while</span> (flag) &#123;</span><br><span class="line">                    fangxiang =  rand() % <span class="number">4</span>;</span><br><span class="line">                    <span class="keyword">switch</span> (fangxiang)</span><br><span class="line">                    &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                        <span class="keyword">if</span> (<span class="built_in">map</span>[i + <span class="number">1</span>][j] == road &amp;&amp; mapp[i][j] != Zhulu) &#123;</span><br><span class="line">                            <span class="built_in">map</span>[i + <span class="number">1</span>][j] = guaishou1;</span><br><span class="line">                            <span class="built_in">map</span>[i][j] = road;</span><br><span class="line">                            GotoXY(i * <span class="number">2</span> - <span class="number">2</span>, j - <span class="number">1</span>);</span><br><span class="line">                            <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">                            flag = <span class="number">0</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span> (mapp[i][j] == Zhulu) &#123;</span><br><span class="line">                            reroad(i, j);</span><br><span class="line">                            flag = <span class="number">0</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        </span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                        <span class="keyword">if</span> (<span class="built_in">map</span>[i - <span class="number">1</span>][j] == road &amp;&amp; mapp[i][j] != Zhulu) &#123;</span><br><span class="line">                            <span class="built_in">map</span>[i - <span class="number">1</span>][j] = guaishou1;</span><br><span class="line">                            <span class="built_in">map</span>[i][j] = road;</span><br><span class="line">                            GotoXY(i * <span class="number">2</span> - <span class="number">2</span>, j - <span class="number">1</span>);</span><br><span class="line">                            <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">                            flag = <span class="number">0</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span> (mapp[i][j] == Zhulu) &#123;</span><br><span class="line">                            reroad(i, j);</span><br><span class="line">                            flag = <span class="number">0</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        </span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                        <span class="keyword">if</span> (<span class="built_in">map</span>[i][j + <span class="number">1</span>] == road &amp;&amp; mapp[i][j] != Zhulu) &#123;</span><br><span class="line">                            <span class="built_in">map</span>[i][j + <span class="number">1</span>] = guaishou1;</span><br><span class="line">                            <span class="built_in">map</span>[i][j] = road;</span><br><span class="line">                            GotoXY(i * <span class="number">2</span> - <span class="number">2</span>, j - <span class="number">1</span>);</span><br><span class="line">                            <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">                            flag = <span class="number">0</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span> (mapp[i][j] == Zhulu) &#123;</span><br><span class="line">                            reroad(i, j);</span><br><span class="line">                            flag = <span class="number">0</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        </span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                        <span class="keyword">if</span> (<span class="built_in">map</span>[i][j - <span class="number">1</span>] == road &amp;&amp; mapp[i][j] != Zhulu) &#123;</span><br><span class="line">                            <span class="built_in">map</span>[i][j - <span class="number">1</span>] = guaishou1;</span><br><span class="line">                            <span class="built_in">map</span>[i][j] = road;</span><br><span class="line">                            GotoXY(i * <span class="number">2</span> - <span class="number">2</span>, j - <span class="number">1</span>);</span><br><span class="line">                            <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">                            flag = <span class="number">0</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span> (mapp[i][j] == Zhulu) &#123;</span><br><span class="line">                            reroad(i, j);</span><br><span class="line">                            flag = <span class="number">0</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= width; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= height; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[i][j] == guaishou1) &#123;</span><br><span class="line">                <span class="built_in">map</span>[i][j] = guaishou;</span><br><span class="line">                <span class="keyword">if</span> (people.x == i &amp;&amp; people.y == j) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (life &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                        life--;</span><br><span class="line">                        GotoXY(people.x * <span class="number">2</span> - <span class="number">2</span>, people.y - <span class="number">1</span>);</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;怪&quot;</span>);</span><br><span class="line">                        people.x = <span class="number">2</span>;</span><br><span class="line">                        people.y = <span class="number">2</span>;</span><br><span class="line">                        GotoXY(people.x * <span class="number">2</span> - <span class="number">2</span>, people.y - <span class="number">1</span>);</span><br><span class="line">                        <span class="built_in">printf</span>(WHITE<span class="string">&quot;〇&quot;</span>NONE);</span><br><span class="line">                        ztlan();</span><br><span class="line">                        d5music();</span><br><span class="line">                        d5music();</span><br><span class="line">                        d1music();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                GotoXY(i * <span class="number">2</span> - <span class="number">2</span>, j - <span class="number">1</span>);</span><br><span class="line">                <span class="built_in">printf</span>(BLUE<span class="string">&quot;怪&quot;</span>NONE);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//怪物走到主路原路返回</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">reroad</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> flag = <span class="number">1</span>;  <span class="comment">//找到返回的方向为0 没有找到为1</span></span><br><span class="line">    <span class="keyword">while</span> (flag) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">map</span>[i + <span class="number">1</span>][j] == road &amp;&amp; mapp[i + <span class="number">1</span>][j] != Zhulu ) &#123;</span><br><span class="line">            <span class="built_in">map</span>[i + <span class="number">1</span>][j] = guaishou1;</span><br><span class="line">            <span class="built_in">map</span>[i][j] = road;</span><br><span class="line">            GotoXY(i * <span class="number">2</span> - <span class="number">2</span>, j - <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">map</span>[i - <span class="number">1</span>][j] == road &amp;&amp; mapp[i - <span class="number">1</span>][j] != Zhulu) &#123;</span><br><span class="line">            <span class="built_in">map</span>[i - <span class="number">1</span>][j] = guaishou1;</span><br><span class="line">            <span class="built_in">map</span>[i][j] = road;</span><br><span class="line">            GotoXY(i * <span class="number">2</span> - <span class="number">2</span>, j - <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">map</span>[i][j + <span class="number">1</span>] == road &amp;&amp; mapp[i][j + <span class="number">1</span>] != Zhulu) &#123;</span><br><span class="line">            <span class="built_in">map</span>[i][j + <span class="number">1</span>] = guaishou1;</span><br><span class="line">            <span class="built_in">map</span>[i][j] = road;</span><br><span class="line">            GotoXY(i * <span class="number">2</span> - <span class="number">2</span>, j - <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">map</span>[i][j - <span class="number">1</span>] == road &amp;&amp; mapp[i][j - <span class="number">1</span>] != Zhulu) &#123;</span><br><span class="line">            <span class="built_in">map</span>[i][j - <span class="number">1</span>] = guaishou1;</span><br><span class="line">            <span class="built_in">map</span>[i][j] = road;</span><br><span class="line">            GotoXY(i * <span class="number">2</span> - <span class="number">2</span>, j - <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//游戏失败界面</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">lose</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);  <span class="comment">//清空当前页面</span></span><br><span class="line"></span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">12</span>);   <span class="comment">//定位光标的位置</span></span><br><span class="line">    <span class="built_in">printf</span>(RED<span class="string">&quot;YOU LOSE !!!&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;你真菜！！！&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;游戏结束&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (mode == <span class="number">3</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;你成功闯过 %d 关&quot;</span>, cgn);</span><br><span class="line">    &#125;</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;关闭游戏请点击右上角 X&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">22</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;继续游戏按0回到主菜单栏目&quot;</span>NONE);</span><br><span class="line">    music3();</span><br><span class="line">    music3();</span><br><span class="line">    music2();</span><br><span class="line">    music2();</span><br><span class="line">    d5music();</span><br><span class="line">    Hide();    <span class="comment">//隐藏光标</span></span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="type">int</span> result = <span class="number">1</span>;</span><br><span class="line">    ch = _getch();</span><br><span class="line">    <span class="keyword">while</span> (ch != <span class="string">&#x27;0&#x27;</span>) &#123;</span><br><span class="line">        ch = _getch();</span><br><span class="line">    &#125;</span><br><span class="line">    life = Life;    <span class="comment">//重置生命数量</span></span><br><span class="line">    eatpeople = <span class="number">1</span>;  <span class="comment">//重置人被吃状态为1</span></span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);  <span class="comment">//清空当前页面</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//游戏胜利界面</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">win</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);  <span class="comment">//清空当前页面</span></span><br><span class="line"></span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">12</span>);   <span class="comment">//定位光标的位置</span></span><br><span class="line">    <span class="built_in">printf</span>(BLUE<span class="string">&quot;YOU WIN !!!&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;你真棒！！！&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">16</span>);</span><br><span class="line">    winmusic();</span><br><span class="line">    <span class="keyword">if</span> (mode == <span class="number">3</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;你已经闯过 %d 关&quot;</span>, cgn);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;游戏结束&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;关闭游戏请点击右上角 X&quot;</span>NONE);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">22</span>);</span><br><span class="line">    <span class="keyword">if</span> (mode != <span class="number">3</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(BLUE<span class="string">&quot;继续游戏按任意键回到主菜单栏目&quot;</span>NONE);</span><br><span class="line">        life = Life;    <span class="comment">//重置生命数量</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(BLUE<span class="string">&quot;继续游戏按任意键开启下一关卡&quot;</span>NONE);</span><br><span class="line">    &#125;</span><br><span class="line">    Hide();    <span class="comment">//隐藏光标</span></span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="type">int</span> result = <span class="number">1</span>;</span><br><span class="line">    ch = _getch();</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);  <span class="comment">//清空当前页面</span></span><br><span class="line">    <span class="keyword">if</span> (mode == <span class="number">3</span>) &#123;</span><br><span class="line">        Start();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//右侧状态栏更新</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">ztlan</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    GotoXY(<span class="number">2</span>*width + <span class="number">8</span>, <span class="number">5</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;当前生命值： &quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= life; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;●&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = life; i &lt;= <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    GotoXY(<span class="number">2</span> * width + <span class="number">8</span>, <span class="number">7</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;当前金币 ￥：  %d&quot;</span>, rmb);</span><br><span class="line">    GotoXY(<span class="number">2</span> * width + <span class="number">8</span>, <span class="number">9</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;当前模式为： &quot;</span>);</span><br><span class="line">    <span class="keyword">switch</span> (mode)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;限时模式&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;自走模式&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;无尽模式&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;战神模式&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    GotoXY(<span class="number">2</span> * width + <span class="number">8</span>, <span class="number">11</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;当前已装备  &quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (gun)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;  冲锋枪&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (knife)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;  瑞士军刀&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    GotoXY(<span class="number">2</span> * width + <span class="number">8</span>, <span class="number">13</span>);</span><br><span class="line">    <span class="keyword">if</span> (mode == <span class="number">3</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;你已经闯过 %d 关&quot;</span>, cgn);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//商店代码</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Shop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;购买生命2￥        请输入 1&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;购买瑞士军刀10￥   请输入 2&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;购买冲锋枪20￥     请输入 3&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">20</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;当前生命值 %d&quot;</span>, life);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">22</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;当前金额 %d&quot;</span>, rmb);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">24</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;当前已装备  &quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (gun)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;  冲锋枪&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (knife)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;  瑞士军刀&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    GotoXY(<span class="number">45</span>, <span class="number">26</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按其他任意键返回游戏&quot;</span>);</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    ch = _getch();</span><br><span class="line">    <span class="keyword">switch</span> (ch)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> (rmb &lt; <span class="number">2</span>) &#123;</span><br><span class="line">            lackrmb();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            rmb -= <span class="number">2</span>;</span><br><span class="line">            life++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> (knife) &#123;</span><br><span class="line">            albuy();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (rmb &lt; <span class="number">10</span>)&#123;</span><br><span class="line">            lackrmb();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            knife = <span class="number">1</span>;</span><br><span class="line">            rmb -= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> (gun) &#123;</span><br><span class="line">            albuy();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (rmb &lt; <span class="number">10</span>) &#123;</span><br><span class="line">            lackrmb();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            gun = <span class="number">1</span>;</span><br><span class="line">            rmb -= <span class="number">20</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Shop();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//金币不足界面</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">lackrmb</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">12</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;金币不足！！！&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">13</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按任意建返回商店！&quot;</span>);</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    ch = _getch();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//已经购买界面</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">albuy</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">12</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;该装备已购买！&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">13</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按任意建返回商店！&quot;</span>);</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    ch = _getch();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置帮助页面</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Help</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">printf</span>(OBLUE<span class="string">&quot;w 上          按 p 进入商店模式&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">12</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;s 下          有瑞士军刀时按 k 可以挥剑&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a 左          有冲锋枪时按 j 可以开枪&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;d 右          游戏进行时按 0 可以暂停&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">40</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;用尽快的方式躲避怪兽！走出迷宫！加油！胜利属于你！&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">45</span>, <span class="number">20</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按任意键返回上级菜单      &quot;</span>NONE);</span><br><span class="line">    <span class="type">char</span> ch = _getch();</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//关于信息界面</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">About</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">12</span>);</span><br><span class="line">    <span class="built_in">printf</span>(OPURPLE<span class="string">&quot;数据结构大作业之走迷宫&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;智慧走迷宫小游戏&quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;制作人：虞程龙 &quot;</span>);</span><br><span class="line">    GotoXY(<span class="number">43</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按任意键返回上级菜单&quot;</span>NONE);</span><br><span class="line">    heavensong();</span><br><span class="line">    Hide();    <span class="comment">//隐藏光标</span></span><br><span class="line">    <span class="type">char</span> ch = _getch();</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//随机数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">create</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> <span class="comment">//随机生成迷宫</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> c[<span class="number">4</span>][<span class="number">2</span>] = &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">0</span> &#125;; <span class="comment">//四个方向</span></span><br><span class="line">    <span class="type">int</span> i, j, t;</span><br><span class="line">    <span class="comment">//将方向打乱</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        j = rand() % <span class="number">4</span>;</span><br><span class="line">        t = c[i][<span class="number">0</span>]; c[i][<span class="number">0</span>] = c[j][<span class="number">0</span>]; c[j][<span class="number">0</span>] = t;</span><br><span class="line">        t = c[i][<span class="number">1</span>]; c[i][<span class="number">1</span>] = c[j][<span class="number">1</span>]; c[j][<span class="number">1</span>] = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">map</span>[x][y] = road;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">map</span>[x + <span class="number">2</span> * c[i][<span class="number">0</span>]][y + <span class="number">2</span> * c[i][<span class="number">1</span>]] == wall)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">map</span>[x + c[i][<span class="number">0</span>]][y + c[i][<span class="number">1</span>]] = road;</span><br><span class="line">            create(x + <span class="number">2</span> * c[i][<span class="number">0</span>], y + <span class="number">2</span> * c[i][<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//地图初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitMap</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (mode == <span class="number">1</span>) &#123;</span><br><span class="line">        TIME = <span class="number">15</span> * <span class="number">1000</span> + difficult * <span class="number">40000</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Hide();</span><br><span class="line">    <span class="keyword">if</span> (mode == <span class="number">5</span>) &#123;</span><br><span class="line">        map2();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">int</span> i, j;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= height; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= width; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">0</span> || i == height || j == <span class="number">0</span> || j == width) &#123;  <span class="comment">//初始化迷宫</span></span><br><span class="line">                    <span class="built_in">map</span>[i][j] = road;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="built_in">map</span>[i][j] = wall;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        create(<span class="number">2</span> * (rand() % ((height - <span class="number">1</span>) / <span class="number">2</span>) + <span class="number">1</span>), <span class="number">2</span> * (rand() % ((width - <span class="number">1</span>) / <span class="number">2</span>) + <span class="number">1</span>)); <span class="comment">//从随机一个点开始生成迷宫，该点行列都为偶数</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= height; i++) <span class="comment">//边界处理</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">map</span>[<span class="number">1</span>][i] = wall;</span><br><span class="line">            <span class="built_in">map</span>[width][i] = wall;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= width; j++) <span class="comment">//边界处理</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">map</span>[j][<span class="number">1</span>] = wall;</span><br><span class="line">            <span class="built_in">map</span>[j][height] = wall;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">map</span>[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">2</span>; <span class="comment">//给定入口</span></span><br><span class="line">        <span class="built_in">map</span>[width][height - <span class="number">1</span>] = <span class="number">3</span>; <span class="comment">//给定出口</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= height; i++)</span><br><span class="line">            <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= width; j++) &#123;</span><br><span class="line">                GotoXY(<span class="number">2</span> * j - <span class="number">2</span>, i - <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">switch</span> (<span class="built_in">map</span>[j][i])</span><br><span class="line">                &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                    <span class="built_in">printf</span>(GREEN<span class="string">&quot;入&quot;</span>); <span class="keyword">break</span>; <span class="comment">//画入口</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                    <span class="built_in">printf</span>(RED<span class="string">&quot;出&quot;</span>); <span class="keyword">break</span>; <span class="comment">//画出口</span></span><br><span class="line">                <span class="keyword">case</span> wall:</span><br><span class="line">                    <span class="built_in">printf</span>(YELLOW<span class="string">&quot;██&quot;</span>NONE); <span class="keyword">break</span>; <span class="comment">//画墙</span></span><br><span class="line">                <span class="keyword">case</span> road:</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>); <span class="keyword">break</span>; <span class="comment">//画路</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    people.x = <span class="number">2</span>;</span><br><span class="line">    people.y = <span class="number">2</span>;</span><br><span class="line">    GotoXY(people.x * <span class="number">2</span> - <span class="number">2</span>, people.y - <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(WHITE<span class="string">&quot;〇&quot;</span>NONE);</span><br><span class="line">    ptmonster(); <span class="comment">//打印怪兽</span></span><br><span class="line">    ptmoney();   <span class="comment">//打印金币</span></span><br><span class="line">    ztlan();     <span class="comment">//右侧状态栏打印</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//下面用于怪兽自动走</span></span><br><span class="line">    <span class="keyword">if</span> (mode != <span class="number">5</span> &amp;&amp; mode != <span class="number">2</span>) &#123;</span><br><span class="line">        bufa = fdmap();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= width; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= height; j++) &#123;</span><br><span class="line">                mapp[i][j] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (bufa &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            mapp[mapx[bufa]][mapy[bufa]] = Zhulu;</span><br><span class="line">            bufa--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        Remap();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//重新绘制地图</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Remap</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= height; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= width; j++) &#123;</span><br><span class="line">            GotoXY(<span class="number">2</span> * j - <span class="number">2</span>, i - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">switch</span> (<span class="built_in">map</span>[j][i])</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="built_in">printf</span>(GREEN<span class="string">&quot;入&quot;</span>NONE); <span class="keyword">break</span>; <span class="comment">//画入口</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="built_in">printf</span>(RED<span class="string">&quot;出&quot;</span>NONE); <span class="keyword">break</span>; <span class="comment">//画出口</span></span><br><span class="line">            <span class="keyword">case</span> wall:</span><br><span class="line">                <span class="built_in">printf</span>(YELLOW<span class="string">&quot;██&quot;</span>NONE); <span class="keyword">break</span>; <span class="comment">//画墙</span></span><br><span class="line">            <span class="keyword">case</span> road:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>); <span class="keyword">break</span>; <span class="comment">//画路</span></span><br><span class="line">            <span class="keyword">case</span> jinbi:</span><br><span class="line">                <span class="built_in">printf</span>(PURPLE<span class="string">&quot;￥&quot;</span>NONE); <span class="keyword">break</span>; <span class="comment">//画金币</span></span><br><span class="line">            <span class="keyword">case</span> guaishou:</span><br><span class="line">                <span class="built_in">printf</span>(BLUE<span class="string">&quot;怪&quot;</span>NONE); <span class="keyword">break</span>; <span class="comment">//画怪兽</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    GotoXY(people.x * <span class="number">2</span> - <span class="number">2</span>, people.y - <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(WHITE<span class="string">&quot;〇&quot;</span>NONE);</span><br><span class="line">    ztlan();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//重新绘制头结点（重新绘制当前的位置〇,用于自动走）</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">printHead</span><span class="params">(<span class="type">int</span> i,<span class="type">int</span> j)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (mode == <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">1</span>) &#123;</span><br><span class="line">                GotoXY(mapx[i] * <span class="number">2</span> - <span class="number">2</span>, mapy[i] - <span class="number">1</span>);</span><br><span class="line">                <span class="built_in">printf</span>(WHITE<span class="string">&quot;〇&quot;</span>NONE);</span><br><span class="line">                Sleep(<span class="number">200</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                GotoXY(mapx[i] * <span class="number">2</span> - <span class="number">2</span>, mapy[i] - <span class="number">1</span>);</span><br><span class="line">                <span class="built_in">printf</span>(WHITE<span class="string">&quot;〇&quot;</span>NONE);</span><br><span class="line">                GotoXY(mapx[i - <span class="number">1</span>] * <span class="number">2</span> - <span class="number">2</span>, mapy[i - <span class="number">1</span>] - <span class="number">1</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;·&quot;</span>);</span><br><span class="line">                Sleep(<span class="number">200</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            GotoXY(mapx[i] * <span class="number">2</span> - <span class="number">2</span>, mapy[i] - <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">            GotoXY(mapx[i - <span class="number">1</span>] * <span class="number">2</span> - <span class="number">2</span>, mapy[i - <span class="number">1</span>] - <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(WHITE<span class="string">&quot;〇&quot;</span>NONE);</span><br><span class="line">            Sleep(<span class="number">200</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">    GotoXY(<span class="number">0</span>, height+<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(OBLUE<span class="string">&quot;路线记录如下：&quot;</span>NONE);</span><br><span class="line">    GotoXY(<span class="number">0</span>, height+<span class="number">3</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> m = <span class="number">1</span>; m &lt;= i; m++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;(%d,%d)-&gt;&quot;</span>,mapy[m],mapx[m]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> m = <span class="number">1</span>; m &lt;= <span class="number">100</span>; m++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;        &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//重新打印路</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Reroad</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= height; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= width; j++) &#123;</span><br><span class="line">            GotoXY(<span class="number">2</span> * j - <span class="number">2</span>, i - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">switch</span> (<span class="built_in">map</span>[j][i])</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> road:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>); <span class="keyword">break</span>; <span class="comment">//画路</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印怪兽</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ptmonster</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> ci = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (ci &lt; monster) &#123;</span><br><span class="line">        jshi.x = rand() % (width  - <span class="number">2</span>) + <span class="number">2</span>;</span><br><span class="line">        jshi.y = rand() % (height - <span class="number">2</span>) + <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (iswall(jshi.x, jshi.y) == wall) &#123;</span><br><span class="line">            <span class="built_in">map</span>[jshi.x][jshi.y] = guaishou;</span><br><span class="line">            GotoXY(jshi.x * <span class="number">2</span> - <span class="number">2</span>, jshi.y - <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(BLUE<span class="string">&quot;怪&quot;</span>NONE);</span><br><span class="line">            ci++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印金币</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ptmoney</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (!shop) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">int</span> ci = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (ci &lt; difficult * <span class="number">3</span>) &#123;</span><br><span class="line">            money.x = rand() % (width - <span class="number">1</span>) + <span class="number">2</span>;</span><br><span class="line">            money.y = rand() % (height - <span class="number">1</span>) + <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (iswall(money.x, money.y) == road) &#123;</span><br><span class="line">                <span class="built_in">map</span>[money.x][money.y] = jinbi;</span><br><span class="line">                GotoXY(money.x * <span class="number">2</span> - <span class="number">2</span>, money.y - <span class="number">1</span>);</span><br><span class="line">                <span class="built_in">printf</span>(PURPLE<span class="string">&quot;￥&quot;</span>NONE);</span><br><span class="line">                ci++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断是否是墙</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">iswall</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == wall) &#123;</span><br><span class="line">        <span class="keyword">return</span> wall;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">map</span>[x][y] == road)&#123;</span><br><span class="line">        <span class="keyword">return</span> road;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == <span class="number">2</span> &amp;&amp; y &gt;= <span class="number">1</span> &amp;&amp; y &lt; height &amp;&amp; x &gt;= <span class="number">2</span> &amp;&amp; x &lt; width * <span class="number">2</span> - <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == chu) &#123;</span><br><span class="line">        <span class="keyword">return</span> chu;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == jinbi) &#123;</span><br><span class="line">        <span class="keyword">return</span> jinbi;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == guaishou) &#123;</span><br><span class="line">        <span class="keyword">return</span> guaishou;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">4</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//彩蛋处理函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Chuli</span><span class="params">(x, y)</span> &#123;</span><br><span class="line">    <span class="built_in">map</span>[x + <span class="number">1</span>][y + <span class="number">1</span>] = wall;</span><br><span class="line">    GotoXY(<span class="number">2</span> * x, y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="map-c"><a href="#map-c" class="headerlink" title="map.c"></a>map.c</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Mi.h&quot;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">prt</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;▇&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">map2</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">54</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">54</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">map</span>[i][j] = road;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    Hide();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">53</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">0</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">53</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">0</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">53</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">53</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">53</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">53</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">21</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">1</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    Chuli(<span class="number">23</span>, <span class="number">1</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">24</span>, <span class="number">2</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">1</span>, <span class="number">5</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">24</span>, <span class="number">5</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">23</span>, <span class="number">6</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">37</span>, <span class="number">2</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">1</span>, <span class="number">16</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">43</span>, <span class="number">5</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">38</span>, <span class="number">7</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">43</span>, <span class="number">9</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">9</span>, <span class="number">7</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">15</span>, <span class="number">11</span>);</span><br><span class="line">    prt();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">34</span>; i &lt;= <span class="number">44</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">1</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">3</span>; i &lt;= <span class="number">19</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">5</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">24</span>; i &lt;= <span class="number">25</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">5</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">15</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">3</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">17</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">3</span>; i &lt;= <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">19</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">5</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">21</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">10</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">6</span>; i &lt;= <span class="number">23</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">10</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">3</span>; i &lt;= <span class="number">27</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">25</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">6</span>; i &lt;= <span class="number">23</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">18</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">12</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">34</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">12</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">44</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">8</span>; i &lt;= <span class="number">9</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">8</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">7</span>; i &lt;= <span class="number">8</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">9</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">6</span>; i &lt;= <span class="number">7</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">10</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">5</span>; i &lt;= <span class="number">6</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">11</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">4</span>; i &lt;= <span class="number">5</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">12</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">3</span>; i &lt;= <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">13</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">15</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">15</span>; i &lt;= <span class="number">17</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">8</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">19</span>; i &lt;= <span class="number">21</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">8</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">15</span>; i &lt;= <span class="number">20</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">12</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">7</span>; i &lt;= <span class="number">8</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">11</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">8</span>; i &lt;= <span class="number">9</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">12</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">9</span>; i &lt;= <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">13</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">10</span>; i &lt;= <span class="number">11</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">14</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">26</span>; i &lt;= <span class="number">33</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">12</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">24</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">6</span>; i &lt;= <span class="number">21</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">24</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">10</span>; i &lt;= <span class="number">32</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">28</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">32</span>; i &lt;= <span class="number">44</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">14</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">45</span>; i &lt;= <span class="number">52</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">12</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">38</span>; i &lt;= <span class="number">42</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">10</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">35</span>; i &lt;= <span class="number">41</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">6</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">35</span>; i &lt;= <span class="number">37</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">4</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">46</span>; i &lt;= <span class="number">52</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">28</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">5</span>; i &lt;= <span class="number">25</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">37</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">27</span>; i &lt;= <span class="number">52</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">37</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">8</span>; i &lt;= <span class="number">17</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">31</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">19</span>; i &lt;= <span class="number">22</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">31</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">35</span>; i &lt;= <span class="number">36</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">11</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">39</span>; i &lt;= <span class="number">40</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">41</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">45</span>; i &lt;= <span class="number">49</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">41</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">51</span>; i &lt;= <span class="number">52</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">41</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">42</span>; i &lt;= <span class="number">43</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">42</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">42</span>; i &lt;= <span class="number">45</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">45</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">47</span>; i &lt;= <span class="number">50</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">44</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">39</span>; i &lt;= <span class="number">42</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">47</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">39</span>; i &lt;= <span class="number">44</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">49</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">49</span>; i &lt;= <span class="number">52</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">49</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">46</span>; i &lt;= <span class="number">49</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">50</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">39</span>; i &lt;= <span class="number">41</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">51</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">39</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">3</span>; i &lt;= <span class="number">5</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">41</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">8</span>; i &lt;= <span class="number">9</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">36</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">9</span>; i &lt;= <span class="number">11</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">38</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">7</span>; i &lt;= <span class="number">8</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">40</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">38</span>; i &lt;= <span class="number">47</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">17</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">49</span>; i &lt;= <span class="number">52</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">17</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">48</span>; i &lt;= <span class="number">52</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">1</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">45</span>; i &lt;= <span class="number">48</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">2</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">42</span>; i &lt;= <span class="number">43</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">3</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    Chuli(<span class="number">3</span>, <span class="number">45</span>);</span><br><span class="line">    prt();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">39</span>; i &lt;= <span class="number">42</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">4</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">38</span>; i &lt;= <span class="number">39</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">5</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">35</span>; i &lt;= <span class="number">36</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">6</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">32</span>; i &lt;= <span class="number">33</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">8</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">29</span>; i &lt;= <span class="number">30</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">9</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">31</span>; i &lt;= <span class="number">52</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">28</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">21</span>; i &lt;= <span class="number">25</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">39</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">27</span>; i &lt;= <span class="number">52</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">39</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">38</span>; i &lt;= <span class="number">41</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">42</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">38</span>; i &lt;= <span class="number">39</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">45</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">42</span>; i &lt;= <span class="number">47</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">45</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">50</span>; i &lt;= <span class="number">51</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">43</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">39</span>; i &lt;= <span class="number">40</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">47</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">45</span>; i &lt;= <span class="number">51</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">49</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">38</span>; i &lt;= <span class="number">39</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(<span class="number">49</span>, i);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">29</span>; i &lt;= <span class="number">31</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">45</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">19</span>; i &lt;= <span class="number">20</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Chuli(i, <span class="number">35</span>);</span><br><span class="line">        prt();</span><br><span class="line">    &#125;</span><br><span class="line">    Chuli(<span class="number">14</span>, <span class="number">25</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">15</span>, <span class="number">26</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">16</span>, <span class="number">27</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">7</span>, <span class="number">33</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">7</span>, <span class="number">35</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">18</span>, <span class="number">34</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">20</span>, <span class="number">34</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">21</span>, <span class="number">33</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">22</span>, <span class="number">32</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">26</span>, <span class="number">29</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">14</span>, <span class="number">50</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">15</span>, <span class="number">51</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">16</span>, <span class="number">52</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">24</span>, <span class="number">36</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">25</span>, <span class="number">35</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">26</span>, <span class="number">34</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">27</span>, <span class="number">33</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">33</span>, <span class="number">15</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">34</span>, <span class="number">16</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">35</span>, <span class="number">17</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">36</span>, <span class="number">18</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">37</span>, <span class="number">19</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">38</span>, <span class="number">20</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">40</span>, <span class="number">22</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">41</span>, <span class="number">23</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">43</span>, <span class="number">25</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">44</span>, <span class="number">26</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">45</span>, <span class="number">27</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">45</span>, <span class="number">15</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">44</span>, <span class="number">16</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">43</span>, <span class="number">17</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">42</span>, <span class="number">18</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">41</span>, <span class="number">19</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">40</span>, <span class="number">20</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">39</span>, <span class="number">21</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">38</span>, <span class="number">22</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">37</span>, <span class="number">23</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">35</span>, <span class="number">25</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">34</span>, <span class="number">26</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">33</span>, <span class="number">27</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">42</span>, <span class="number">44</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">48</span>, <span class="number">42</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">51</span>, <span class="number">39</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">52</span>, <span class="number">44</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">51</span>, <span class="number">46</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">51</span>, <span class="number">51</span>);</span><br><span class="line">    prt();</span><br><span class="line">    Chuli(<span class="number">24</span>, <span class="number">2</span>);</span><br><span class="line">    Chuli(<span class="number">44</span>, <span class="number">12</span>);</span><br><span class="line">    Chuli(<span class="number">39</span>, <span class="number">37</span>);</span><br><span class="line">    Chuli(<span class="number">47</span>, <span class="number">28</span>);</span><br><span class="line">    <span class="built_in">map</span>[<span class="number">54</span>][<span class="number">48</span>] = chu;</span><br><span class="line">    <span class="built_in">map</span>[<span class="number">2</span>][<span class="number">1</span>] = ru;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>感谢你能够看到这里！</p>
]]></content>
      <categories>
        <category>课程作业</category>
        <category>数据结构作业</category>
        <category>数据结构走迷宫</category>
      </categories>
      <tags>
        <tag>数据结构作业</tag>
        <tag>智慧走迷宫</tag>
      </tags>
  </entry>
  <entry>
    <title>自助法</title>
    <url>/2021/05/26/%E8%87%AA%E5%8A%A9%E6%B3%95/</url>
    <content><![CDATA[<h1 id="原理及应用"><a href="#原理及应用" class="headerlink" title="原理及应用"></a>原理及应用</h1><p>我们希望评估的是用D训练出的模型.但在留出法和交叉验证法中,由于保留了一部分样本用于测试,因此实际评估的模型所使用的训练集比D小,这必然会引入一些因训练样本规模不同而导致的估计偏差.留一法受训练样本规模变化的影响较小,但计算复杂度又太高了.有没有什么办法可以减少训练样本规模不同造成的影响,同时还能比较高效地进行实验估计呢? “自助法”( bootstrapping)是一个比较好的解决方案,它直接以自助采样法( bootstrap sampling)为基础[ Efron and Tibshirani,1993给定包含m个样本的数据集D,我们对它进行采样产生数据集D:每次随机从D中挑选一个样本,将其拷贝放入D,然后再将该样本放回初始数据集D中,使得该样本在下次采样时仍有可能被采到:这个过程重复执行m次后,我们就得到了包含m 个样本的数据集D,这就是自助采样的结果.显然,D中有一部分样本会在D 中多次出现,而另一部分样本不出现.可以做一个简单的估计,样本在m次采样中始终不被采到的概率是(1-),取极限得到</p>
<p><img src="https://cdn.jsdelivr.net/gh/shuxhan/pic-cdn@c1e4b43838f102cd2e86110be0eea32c58b1c31b/2021/05/26/4c40995e9e66d67ab878a28d83c18d48.png"></p>
<p>即通过自助采样,初始数据集D中约有36.8%的样本未出现在采样数据集D’ 中.于是我们可将D’用作训练集,D\D1用作测试集;这样,实际评估的模型与期望评估的模型都使用m个训练样本,而我们仍有数据总量约1&#x2F;3的、没在训练集中出现的样本用于测试.这样的测试结果,亦称”包外估计”(out-of-bag stimate).</p>
]]></content>
      <categories>
        <category>人工智能学习</category>
        <category>理论技术</category>
        <category>评估方法</category>
      </categories>
      <tags>
        <tag>评估方法</tag>
        <tag>自助法</tag>
      </tags>
  </entry>
</search>
